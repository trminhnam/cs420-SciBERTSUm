{"src": [101, 2057, 8970, 1037, 2465, 1997, 10595, 1010, 2170, 17534, 4184, 1010, 2005, 6074, 2000, 13530, 2037, 17534, 1999, 10470, 2015, 1012, 102, 101, 1999, 1037, 17534, 2252, 6074, 2034, 6204, 1037, 1000, 3653, 29624, 4887, 7542, 1000, 2306, 1996, 2252, 1025, 5834, 2006, 1996, 9560, 1997, 1996, 3653, 29624, 4887, 7542, 2070, 16745, 1997, 1996, 2372, 1997, 1996, 2252, 7226, 1999, 1996, 3078, 10470, 1999, 1037, 16250, 2126, 1025, 1998, 1010, 1999, 2070, 3572, 1010, 3056, 12194, 15210, 2202, 102, 101, 17534, 4184, 2031, 2969, 1011, 27455, 8902, 24117, 5144, 1999, 1996, 6123, 1997, 2117, 1011, 3976, 10470, 2015, 1012, 102, 101, 2057, 2265, 2008, 2023, 2003, 2145, 2995, 2043, 3674, 10470, 2015, 2202, 2173, 2005, 4942, 16643, 8525, 10880, 5350, 1010, 2004, 2092, 2004, 2005, 21053, 5350, 1012, 102, 101, 2057, 2036, 2556, 1037, 17534, 2252, 8778, 2005, 2034, 1011, 3976, 10470, 2015, 1012, 102, 101, 2633, 1010, 2057, 2265, 3572, 2073, 17534, 4184, 2031, 2969, 1011, 27455, 6792, 16744, 1999, 15275, 10595, 1012, 102, 101, 2007, 1996, 20728, 6217, 1997, 10470, 2015, 2006, 1996, 4274, 1998, 6974, 2038, 2272, 3445, 3037, 1999, 3001, 2000, 6509, 1006, 4007, 2030, 2529, 1007, 6074, 17534, 1999, 2107, 10470, 2015, 1012, 102, 101, 2087, 1997, 2122, 3001, 2031, 2000, 3058, 2589, 2210, 2062, 2084, 9572, 2592, 2013, 3674, 10470, 2015, 1998, 2556, 2009, 2000, 1996, 5310, 1999, 1037, 14057, 4827, 1006, 1041, 29625, 2290, 29625, 1010, 7479, 29625, 4887, 7542, 18866, 29625, 9006, 1007, 1012, 102, 101, 2045, 2003, 2085, 2927, 2000, 12636, 1037, 2117, 4245, 1997, 3001, 2029, 2941, 3073, 17534, 6040, 1998, 19309, 2578, 2000, 7226, 13375, 1010, 2183, 3458, 1996, 5220, 24540, 1011, 17534, 3444, 15157, 1999, 3784, 10470, 2015, 2000, 1996, 8391, 1997, 14753, 2050, 1011, 26000, 3247, 2490, 1012, 102, 101, 2023, 3259, 3504, 2130, 3458, 2107, 3001, 1010, 2029, 2024, 23636, 2875, 13951, 1037, 2309, 7226, 4063, 1010, 1998, 7534, 1037, 2465, 1997, 3001, 2000, 6509, 1037, 3074, 1997, 7226, 13375, 1010, 1000, 17534, 4184, 1000, 1012, 102, 101, 1996, 2801, 2003, 2714, 2000, 1996, 2801, 2369, 1000, 17634, 4184, 1000, 2006, 1996, 4274, 1006, 1041, 29625, 2290, 29625, 1010, 7479, 29625, 5017, 29123, 29625, 9006, 1998, 7479, 29625, 5302, 5910, 18471, 29625, 9006, 1007, 1010, 8419, 2000, 9572, 1996, 3006, 2373, 1997, 3265, 7226, 13375, 1012, 102, 101, 1996, 2047, 9792, 2003, 2008, 6168, 1999, 1037, 17634, 2252, 2045, 2003, 1037, 3819, 12139, 1997, 1996, 2536, 17394, 1005, 5426, 1006, 2144, 2045, 1996, 2062, 17394, 3693, 1999, 1037, 5309, 1996, 2896, 1996, 3976, 2005, 3071, 1007, 1010, 1999, 1037, 17534, 2252, 2045, 2003, 1037, 2062, 3375, 6143, 6656, 102, 101, 2000, 6100, 4728, 1010, 2000, 16360, 12083, 13602, 1010, 2000, 2695, 2006, 14903, 2030, 2000, 2417, 2923, 3089, 8569, 2618, 2000, 7201, 1010, 5942, 3188, 3563, 6656, 1998, 1013, 2030, 1037, 7408, 1012, 102, 101, 14925, 1005, 4002, 1010, 2255, 2459, 1011, 2322, 1010, 2456, 1010, 11334, 1010, 5135, 1012, 102, 101, 9385, 2456, 9353, 2213, 1015, 1011, 27814, 14526, 2509, 29624, 22907, 2475, 29624, 2581, 1013, 4002, 29626, 8889, 10790, 1012, 102, 101, 1002, 1019, 29625, 8889, 3276, 2426, 2068, 1010, 1998, 1996, 17534, 2252, 3513, 2442, 2022, 2881, 11914, 29625, 5886, 2063, 1005, 2015, 1037, 3722, 2742, 1012, 102, 101, 5136, 2019, 10470, 2007, 1037, 2309, 14939, 1010, 1998, 2416, 4022, 17394, 1012, 102, 101, 7868, 2008, 2093, 1997, 1996, 4022, 17394, 1011, 1037, 1010, 1038, 1998, 1039, 1010, 2007, 7978, 1006, 3595, 1007, 26004, 2015, 1058, 2487, 1028, 1058, 2475, 1028, 1058, 2509, 1011, 3535, 2000, 13530, 2037, 17534, 1012, 102, 101, 7868, 1996, 10470, 2003, 1037, 2034, 1011, 3976, 10470, 1012, 102, 101, 2104, 2092, 2124, 17568, 2013, 1996, 10470, 3906, 1010, 2009, 2052, 2022, 1996, 3037, 1997, 2169, 7226, 4063, 2000, 7226, 3599, 1019, 29626, 2575, 1997, 2010, 2995, 3643, 1999, 1996, 10470, 1012, 102, 101, 2947, 1037, 2052, 2203, 2039, 2007, 1037, 15726, 1997, 1058, 2487, 1013, 1020, 1006, 2065, 2002, 5222, 1996, 10470, 1007, 2030, 1014, 1006, 2065, 2002, 2515, 1050, 29618, 2102, 1007, 1010, 1998, 1038, 1998, 1039, 2007, 1037, 15726, 1997, 1014, 1012, 102, 101, 2003, 2045, 2070, 3653, 29624, 8490, 9910, 3672, 1037, 1010, 1038, 1998, 1039, 2064, 2191, 2008, 2097, 3426, 2035, 1997, 2068, 2000, 2272, 2041, 1997, 1996, 10470, 2012, 2560, 2004, 2092, 2125, 1010, 1998, 2070, 1997, 2068, 9975, 2488, 2125, 1029, 102, 101, 2028, 2071, 6583, 1074, 1104, 15985, 18279, 1074, 1104, 15985, 2100, 2360, 2008, 2027, 2052, 2169, 7487, 2037, 26004, 2015, 2000, 2028, 2178, 16191, 2008, 2069, 1996, 3284, 2052, 2175, 2006, 2000, 1996, 10470, 1025, 1037, 2052, 3568, 2022, 1996, 2028, 2183, 2006, 1010, 1998, 2043, 2002, 20723, 1999, 1996, 10470, 2002, 2052, 7226, 2896, 102, 101, 1996, 5793, 28450, 1999, 2023, 7337, 2003, 2008, 1037, 1010, 1038, 1998, 1039, 2097, 2031, 20438, 2000, 4682, 1999, 2023, 3988, 4403, 1025, 2023, 2071, 2145, 2022, 2995, 2065, 1037, 2020, 14723, 2000, 3477, 1038, 1998, 1039, 1037, 3056, 3815, 2065, 2027, 2938, 2009, 2041, 1998, 2002, 2180, 1996, 10470, 29625, 10760, 102, 101, 1999, 2236, 1010, 2445, 2070, 3078, 7337, 1006, 4050, 1010, 2019, 10470, 1007, 1010, 1037, 17534, 2252, 8778, 2003, 2004, 4076, 1024, 1015, 1012, 102, 101, 2070, 2275, 1997, 7226, 13375, 2024, 4778, 2000, 3693, 1996, 17534, 2252, 1010, 1998, 6727, 1997, 2049, 3513, 1012, 102, 101, 1996, 2060, 7226, 13375, 2024, 2025, 2081, 5204, 1997, 1996, 4598, 1997, 1996, 17534, 2252, 1025, 2057, 7868, 2182, 2008, 2027, 2024, 2025, 2130, 5204, 1997, 1996, 6061, 1997, 2049, 4598, 1012, 2475, 1012, 102, 101, 1996, 7226, 13375, 2031, 1996, 4071, 2000, 3693, 1996, 2252, 2030, 2025, 1012, 102, 101, 2065, 2027, 2079, 2009, 2003, 5071, 2008, 2027, 2024, 12361, 2000, 3582, 2049, 3513, 1012, 102, 101, 1015, 6820, 4244, 1010, 2129, 1996, 2372, 2323, 16582, 1999, 1996, 3078, 7337, 2241, 2006, 1996, 2592, 2027, 2035, 4425, 1012, 2629, 1012, 102, 101, 1996, 10669, 2089, 2036, 5646, 1006, 1998, 16306, 1007, 3176, 12194, 15210, 1997, 1996, 2252, 2372, 1010, 2241, 2006, 1996, 3463, 1997, 1996, 2364, 7337, 1012, 2575, 1012, 102, 101, 1996, 10669, 4490, 2069, 2004, 1037, 4387, 1997, 7226, 13375, 29625, 4183, 2089, 4025, 3019, 2000, 3198, 2339, 1037, 10669, 2323, 2022, 5627, 1998, 1013, 2030, 2583, 2000, 3853, 2004, 1037, 9480, 2353, 2283, 1010, 2302, 3086, 2383, 2042, 3825, 2000, 2049, 2219, 21134, 1012, 102, 101, 2057, 2903, 2008, 2009, 2003, 2190, 2025, 2000, 2156, 1996, 10669, 2004, 1037, 2283, 1006, 2007, 5426, 1997, 2049, 2219, 1007, 2012, 2035, 1025, 2738, 1010, 2057, 9530, 3401, 3512, 1997, 1037, 10669, 2004, 1037, 4007, 4005, 2029, 2003, 2583, 2000, 2552, 2069, 2429, 2000, 2049, 1006, 4141, 1011, 2124, 1007, 4730, 102, 101, 2009, 2003, 3568, 2825, 2005, 1996, 10669, 2000, 2552, 2128, 6632, 6321, 5685, 2005, 6074, 2000, 2022, 9657, 2008, 1996, 10669, 2097, 2552, 2128, 6632, 6321, 1011, 2130, 1999, 3572, 2073, 1996, 10669, 4832, 2000, 5114, 2498, 2083, 2049, 4073, 1012, 102, 101, 2057, 2079, 7868, 2008, 10669, 2015, 2323, 2025, 3465, 2769, 2000, 5452, 1011, 2035, 1997, 2256, 10669, 2015, 2024, 5166, 1011, 12042, 3272, 2005, 2028, 2008, 1006, 14477, 6767, 8524, 6321, 999, 1007, 102, 101, 2633, 1010, 2057, 2031, 2411, 2042, 2356, 2055, 1996, 3423, 3314, 4193, 1996, 2224, 1997, 17534, 4184, 1012, 102, 101, 2096, 2023, 2003, 2019, 5875, 1998, 2566, 10196, 3372, 3160, 1010, 2009, 23651, 2119, 2256, 11532, 1998, 1996, 9531, 1997, 2023, 3259, 29625, 4183, 4332, 2041, 2008, 1010, 2096, 1996, 3722, 7337, 14801, 3041, 11896, 1010, 1037, 2062, 12138, 2028, 2097, 5676, 2008, 1038, 1998, 1039, 2079, 2025, 5589, 1999, 1996, 3078, 10470, 1010, 102, 101, 2062, 3227, 1010, 1996, 5857, 1997, 2023, 3259, 2024, 2004, 4076, 1024, 1015, 1012, 102, 101, 2057, 2556, 1037, 8778, 2005, 2969, 1011, 27455, 6792, 1999, 2117, 1011, 3976, 10470, 2015, 2005, 7681, 5350, 1012, 2475, 1012, 102, 101, 2057, 2556, 1037, 8778, 2005, 2969, 1011, 27455, 6792, 1999, 2117, 1011, 3976, 10470, 2015, 2005, 21053, 5350, 1012, 2509, 1012, 102, 101, 2057, 2556, 1037, 8778, 2005, 2969, 1011, 27455, 8902, 24117, 1999, 2034, 1011, 3976, 1006, 2004, 2092, 2004, 3803, 1007, 10470, 2015, 1010, 1999, 2029, 2069, 2070, 1997, 1996, 6074, 13530, 2037, 3450, 1010, 1998, 2029, 2515, 2025, 2191, 2151, 2224, 1997, 12194, 15210, 1012, 2549, 1012, 102, 101, 2057, 2556, 1037, 8778, 2005, 2969, 1011, 27455, 6792, 1999, 2236, 10470, 2015, 1998, 3171, 10595, 1010, 2043, 1996, 6074, 1005, 4127, 1006, 1041, 29625, 2290, 29625, 26004, 2015, 2005, 5350, 1007, 2024, 2579, 2013, 1037, 10713, 2275, 1012, 102, 101, 1996, 6143, 8290, 2426, 2969, 1011, 4699, 6074, 2003, 1037, 3078, 8476, 1997, 2817, 1999, 12702, 23035, 2015, 1031, 1018, 1033, 1998, 2208, 3399, 1031, 1015, 1033, 1012, 102, 101, 1999, 3327, 1010, 1996, 2640, 1997, 16744, 2005, 6143, 10266, 2003, 1996, 3395, 1997, 1996, 2492, 12061, 7337, 2640, 1031, 1015, 1033, 1012, 102, 101, 1996, 2535, 1997, 1037, 7337, 1006, 1999, 3327, 1010, 10470, 1007, 5859, 2003, 2000, 9375, 1037, 2208, 3005, 14442, 9942, 2024, 16166, 1999, 2070, 4847, 2030, 2178, 1012, 102, 101, 2947, 1010, 1996, 2640, 1997, 1037, 17534, 2252, 3774, 1997, 2635, 1037, 2445, 7337, 1011, 1996, 3078, 10470, 1011, 1998, 3810, 2009, 2046, 1037, 2062, 9603, 2028, 1010, 8419, 2028, 2007, 2019, 2794, 2034, 2754, 1999, 2029, 1037, 16745, 1997, 1996, 2867, 2377, 1999, 2070, 4397, 1011, 2881, 2208, 1006, 102, 101, 2470, 2006, 6143, 5919, 1997, 4800, 29624, 4270, 3372, 4023, 1999, 7976, 4454, 2038, 4961, 5901, 1999, 1996, 3522, 2086, 1012, 102, 101, 2023, 2147, 2038, 8279, 2006, 1996, 2640, 1997, 16744, 2005, 6074, 1005, 8290, 1031, 1021, 29623, 2509, 29623, 2683, 1033, 1010, 1998, 6661, 2172, 1999, 2691, 2007, 2147, 2006, 7337, 2640, 1999, 5543, 1012, 102, 101, 2116, 6481, 1998, 4784, 3473, 2039, 2013, 1996, 7337, 2640, 3906, 1010, 1998, 2031, 2042, 5967, 2000, 1996, 9932, 6123, 29625, 2389, 2705, 10593, 1996, 2817, 1997, 9144, 2426, 6074, 2038, 2363, 2172, 3086, 1999, 1996, 9932, 3906, 1006, 2156, 1041, 29625, 2290, 29625, 1031, 1021, 1033, 1007, 1010, 1998, 2348, 1996, 2817, 1998, 2640, 1997, 8311, 102, 101, 1999, 3327, 1010, 1996, 3906, 2006, 8902, 24117, 1999, 10470, 2015, 2003, 5399, 3962, 3723, 1012, 102, 101, 2009, 2003, 2145, 2205, 5041, 2000, 2507, 1037, 3143, 19184, 1997, 2009, 1010, 1998, 1996, 9625, 1997, 2009, 2003, 11900, 1012, 102, 101, 1999, 1996, 5337, 3906, 2006, 1996, 8476, 1010, 1996, 3463, 2024, 3243, 3563, 1010, 1998, 5121, 2079, 2025, 6611, 1999, 10906, 1997, 5903, 10470, 2015, 1006, 2007, 2593, 4942, 16643, 8525, 2696, 8553, 2030, 13711, 8486, 3723, 2426, 5350, 1007, 1010, 2034, 1011, 3976, 10470, 2015, 2302, 2217, 1011, 10504, 1010, 1998, 2236, 10595, 1010, 2029, 2024, 1996, 102, 101, 1996, 7541, 2765, 2013, 1996, 3906, 1997, 2029, 2057, 2024, 5204, 2003, 2011, 5846, 1998, 5832, 1031, 1016, 1033, 1010, 2040, 2556, 1037, 8778, 2005, 2969, 1011, 27455, 8902, 24117, 2011, 1037, 16745, 1997, 1996, 6818, 1997, 1037, 1006, 2309, 1011, 2204, 1007, 2117, 1011, 3976, 10470, 1012, 102, 101, 2057, 6848, 2023, 2765, 2917, 1012, 102, 101, 3176, 3141, 2817, 1997, 8902, 24117, 1999, 10470, 2015, 2064, 2022, 2179, 1999, 1031, 1019, 1033, 1012, 102, 101, 2057, 2085, 2556, 2070, 3653, 17960, 3981, 5134, 1997, 10470, 3399, 1010, 2004, 2092, 2004, 1037, 6412, 1997, 1996, 4556, 10470, 2944, 6936, 1999, 1996, 3259, 1998, 2256, 5903, 10470, 2944, 1012, 102, 101, 2019, 10470, 7709, 2005, 4855, 1037, 2309, 2204, 2000, 2028, 1997, 1050, 4022, 6818, 1010, 1050, 1027, 1063, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1050, 1065, 2003, 7356, 2011, 1018, 11709, 1010, 1049, 1010, 1043, 1010, 1039, 1010, 1040, 1024, 1049, 2003, 1996, 2275, 1997, 2825, 7696, 1037, 102, 101, 2009, 2003, 5071, 2008, 6074, 2089, 5630, 2025, 2000, 5589, 1999, 2019, 10470, 29625, 2378, 2344, 2000, 17908, 10470, 2015, 2057, 2031, 2000, 6848, 1996, 2592, 2800, 2000, 1996, 6818, 1012, 102, 101, 2057, 7868, 1996, 2981, 2797, 5300, 2944, 1010, 2007, 2053, 6327, 6447, 1012, 102, 101, 2169, 4005, 1045, 2003, 5071, 2000, 2031, 1037, 26004, 6819, 3479, 2013, 1996, 13483, 1997, 2613, 3616, 1031, 1014, 29623, 2487, 1033, 2030, 2013, 1037, 10713, 5884, 1010, 2029, 19566, 2049, 29160, 19732, 2000, 3477, 2005, 1996, 2204, 1012, 102, 101, 2057, 2582, 7868, 2008, 2023, 26004, 2003, 3479, 2013, 1996, 6375, 4353, 2006, 1996, 13483, 1031, 1014, 29623, 2487, 1033, 2030, 2006, 1037, 10713, 5884, 1012, 102, 101, 2005, 7496, 1997, 8312, 2057, 2097, 7868, 1996, 7142, 2553, 1010, 13343, 1996, 2930, 2006, 2236, 10595, 1010, 2073, 1996, 11213, 2008, 1996, 2275, 1997, 2825, 26004, 2015, 2003, 10713, 2003, 3223, 2005, 2256, 2765, 1012, 102, 101, 2065, 4005, 1045, 6855, 2015, 1996, 2204, 1998, 2003, 2356, 2000, 3477, 1052, 1010, 2004, 2092, 2004, 1037, 6577, 7408, 1040, 1010, 2059, 2049, 9710, 1010, 21318, 1010, 2003, 2445, 2011, 6819, 1597, 1052, 1597, 1040, 1025, 4728, 1010, 2065, 2009, 2003, 2025, 4137, 2151, 2204, 2059, 2049, 9710, 2003, 1597, 102, 101, 1996, 2682, 11859, 1037, 3016, 25253, 2208, 1010, 2073, 1037, 5656, 2005, 2019, 4005, 2003, 1037, 3247, 2055, 1996, 4471, 2000, 2022, 2741, 2445, 2049, 26004, 1010, 1998, 1996, 3477, 27475, 2024, 4340, 2004, 2682, 1012, 102, 101, 1996, 5576, 1997, 2023, 2208, 2003, 2445, 2011, 9798, 1037, 1006, 3016, 25253, 10594, 1007, 14442, 1997, 2009, 1024, 1037, 4101, 5656, 1997, 1996, 6074, 2107, 2008, 2009, 2003, 23179, 2005, 2169, 4005, 2000, 14386, 3686, 2013, 2049, 5656, 1010, 2445, 2008, 2035, 1997, 1996, 2060, 6074, 6293, 2000, 2037, 5656, 1012, 102, 101, 2445, 2019, 14442, 5656, 1038, 1027, 1006, 29491, 1010, 1038, 2475, 1010, 1012, 1012, 1012, 1010, 24869, 1007, 1010, 2028, 2064, 24134, 5622, 1006, 1038, 1007, 1010, 1996, 3517, 9710, 1997, 4005, 1045, 1999, 14442, 1997, 1996, 7978, 2208, 1012, 102, 101, 1999, 1037, 2553, 2073, 2045, 2003, 2062, 2084, 2028, 14442, 5622, 1006, 1038, 1007, 2003, 2579, 2004, 1996, 7290, 3517, 9710, 2058, 2035, 1996, 1041, 26147, 12322, 4360, 1012, 102, 101, 2582, 6594, 1997, 14442, 4310, 2791, 2003, 16647, 2013, 2023, 3259, 29625, 5643, 1997, 1996, 2190, 1011, 2124, 10470, 10595, 2003, 1996, 2117, 18098, 6610, 10470, 1012, 102, 101, 1999, 2107, 2019, 10470, 1010, 2169, 13180, 12040, 2015, 1037, 7226, 1999, 1037, 10203, 11255, 1012, 102, 101, 1996, 4005, 2007, 1996, 3284, 7226, 5222, 1996, 2204, 1998, 12778, 1996, 3815, 1997, 1996, 2117, 1011, 3284, 7226, 1010, 1998, 2035, 2060, 6818, 3477, 2498, 1012, 102, 101, 1999, 1037, 2553, 1997, 1037, 5495, 1010, 1996, 3453, 1997, 1996, 10470, 2003, 3479, 18154, 1010, 2007, 6375, 9723, 1012, 102, 101, 2065, 2045, 2003, 2053, 6577, 7408, 2059, 6577, 1999, 2117, 1011, 3976, 10470, 2015, 2003, 2467, 11581, 1012, 102, 101, 3606, 8669, 1010, 1045, 29625, 2063, 29625, 12170, 1006, 6819, 1007, 1027, 6819, 1010, 2003, 2019, 14442, 1997, 1996, 2117, 1011, 3976, 10470, 1006, 1999, 2755, 1010, 2009, 2003, 2019, 14442, 1999, 7444, 9942, 1007, 1012, 102, 101, 2178, 2759, 10470, 2003, 1996, 2034, 1011, 3976, 10470, 1012, 102, 101, 2122, 10470, 2015, 2024, 4146, 6660, 2000, 2117, 1011, 3976, 10470, 2015, 1010, 3272, 2008, 1996, 3453, 12778, 1996, 3815, 1997, 2010, 2219, 7226, 1012, 102, 101, 1996, 14442, 4106, 1997, 2034, 1011, 3976, 10470, 2015, 2003, 3243, 3115, 1012, 102, 101, 2005, 2742, 1010, 2065, 26004, 2015, 2024, 3479, 2429, 2000, 1996, 6375, 4353, 2006, 1031, 1014, 29623, 2487, 1033, 1998, 2045, 2003, 2053, 6577, 7408, 1010, 2059, 1996, 5656, 1997, 4005, 1045, 1999, 14442, 2003, 12170, 1006, 6819, 1007, 1027, 1050, 1597, 1015, 1050, 6819, 1012, 102, 101, 2062, 3227, 1010, 2195, 10470, 2015, 2089, 2022, 4146, 1999, 5903, 1012, 102, 101, 2057, 2034, 5136, 1996, 2553, 1997, 2048, 5903, 10470, 2015, 1997, 2714, 5350, 1012, 102, 101, 1037, 5903, 10470, 2003, 2445, 1999, 2023, 2553, 2011, 1037, 3940, 1037, 1027, 1006, 17350, 1010, 22441, 1007, 1010, 2073, 9932, 1027, 1050, 1010, 1043, 1010, 1039, 1010, 1040, 1010, 1006, 1045, 1027, 1015, 1010, 1016, 1007, 2004, 2077, 29625, 5643, 2107, 3291, 2003, 1037, 5903, 10470, 2005, 7681, 5350, 1010, 1999, 102, 101, 4005, 1045, 1055, 5656, 3774, 1997, 2048, 3033, 1024, 1015, 1012, 102, 101, 2009, 27034, 2012, 2087, 2028, 1997, 1996, 10470, 2015, 1010, 1999, 2029, 2009, 2097, 5589, 1012, 2475, 1012, 102, 101, 2009, 12040, 2015, 1037, 7226, 1999, 1996, 3479, 10470, 29625, 28689, 6216, 2140, 10470, 2015, 2005, 7681, 5350, 9375, 1037, 3016, 25253, 2208, 1999, 1037, 3019, 2126, 1012, 102, 101, 2005, 2742, 1010, 2065, 1996, 10470, 2015, 2024, 2117, 1011, 3976, 10470, 2015, 1010, 2059, 2019, 6413, 14442, 1997, 1996, 7978, 5903, 10470, 2003, 2004, 4076, 1024, 2169, 4005, 18154, 27034, 2028, 1997, 1996, 10470, 2015, 1010, 1998, 10255, 2010, 5025, 26004, 2004, 2010, 7226, 2045, 29625, 6761, 12399, 2828, 1997, 5903, 10470, 2003, 1996, 5903, 102, 101, 2182, 2057, 2031, 2048, 2714, 10470, 2015, 1010, 1041, 29625, 2290, 29625, 2117, 1011, 3976, 10470, 2015, 1010, 2005, 2048, 2367, 5350, 1043, 2487, 1998, 1043, 2475, 1012, 102, 101, 1996, 2275, 1997, 6074, 1050, 1027, 1050, 2487, 1605, 1050, 2475, 1605, 27937, 3774, 1997, 2093, 3033, 1024, 1528, 1050, 2487, 2024, 6074, 2008, 2024, 4699, 2069, 1999, 1043, 2487, 1528, 1050, 2475, 2024, 6074, 2008, 2024, 4699, 2069, 1999, 1043, 2475, 1528, 27937, 2024, 6074, 2008, 2031, 26004, 1014, 2005, 1043, 2487, 1998, 2005, 1043, 1016, 102, 101, 2005, 7496, 1997, 13080, 2057, 2097, 7868, 2008, 2057, 2064, 10782, 3251, 2019, 4005, 2003, 2013, 2177, 1050, 2487, 1010, 1050, 2475, 1010, 2030, 27937, 1010, 1998, 2008, 1996, 6074, 1999, 27937, 2031, 5186, 2152, 4997, 9710, 2005, 6409, 1012, 102, 101, 2023, 2117, 11213, 2965, 2008, 2019, 4005, 2097, 2196, 12040, 20723, 1999, 2119, 10470, 2015, 1025, 5060, 2008, 2057, 5071, 2008, 2019, 4005, 2040, 2003, 4699, 1999, 11381, 1037, 3940, 1997, 5350, 2038, 1037, 26004, 1997, 1014, 2005, 2893, 2069, 2028, 1997, 2068, 1010, 1998, 3568, 2011, 17534, 1999, 2048, 10470, 2015, 102, 101, 6516, 1010, 2057, 2097, 7868, 2008, 1996, 9942, 2800, 2000, 1996, 6074, 2024, 2004, 1999, 1996, 2553, 1997, 7681, 5350, 29625, 8545, 2097, 11160, 2006, 1996, 9366, 1997, 15726, 1999, 2256, 9312, 1997, 10669, 2015, 2005, 5903, 10470, 2015, 1012, 102, 101, 1996, 15726, 1997, 2019, 16169, 2003, 4225, 2004, 1996, 7680, 1997, 6074, 1005, 26004, 2015, 2005, 2008, 16169, 1012, 102, 101, 2005, 2742, 1010, 1999, 1037, 5903, 10470, 2005, 7681, 5350, 1996, 15726, 1997, 2019, 16169, 2008, 24022, 2204, 1043, 2487, 1999, 10470, 1015, 2000, 4005, 1045, 1010, 1998, 24022, 2204, 1043, 2475, 1999, 10470, 1016, 2000, 4005, 1046, 1010, 2003, 1058, 2487, 1006, 1043, 2487, 1007, 1009, 1058, 2475, 1006, 1043, 2475, 1007, 1006, 1045, 29625, 2063, 29625, 1010, 102, 101, 2292, 1043, 1610, 1050, 1010, 2073, 1015, 1026, 1064, 1043, 1064, 1026, 1050, 29625, 1059, 29625, 2140, 29625, 2080, 29625, 2290, 2292, 1996, 3787, 1997, 1043, 2022, 1063, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1064, 1043, 1064, 1065, 1012, 102, 101, 2445, 2019, 10470, 1037, 1010, 19090, 2011, 1176, 2072, 1006, 1037, 1007, 1006, 1015, 1608, 1045, 1608, 1050, 1007, 1996, 2275, 1997, 9942, 2800, 2000, 4005, 1045, 1596, 1050, 1012, 102, 101, 2445, 1037, 2275, 1997, 10669, 7696, 1010, 11338, 1010, 2029, 2057, 2202, 1059, 29625, 2140, 29625, 2080, 29625, 2290, 2000, 2022, 1054, 1009, 1010, 1037, 1006, 17534, 2252, 1007, 10669, 2003, 1037, 3940, 1997, 4972, 2278, 1006, 1037, 1010, 1043, 1007, 1027, 1006, 1056, 2487, 1006, 1037, 1010, 1043, 1007, 1010, 1056, 2475, 1006, 1037, 1010, 1043, 1007, 1007, 102, 101, 1999, 2804, 1010, 2206, 1996, 3247, 2081, 2011, 1056, 2487, 1006, 1037, 1010, 1043, 1007, 1010, 1998, 2445, 1996, 7696, 2741, 1999, 1996, 2364, 10470, 1037, 2011, 2372, 1997, 1050, 1032, 1043, 1010, 2019, 3176, 7909, 1056, 1039, 1045, 2089, 2022, 9770, 2006, 4005, 1045, 1012, 102, 101, 1996, 7909, 2064, 2022, 4997, 1010, 3893, 1010, 2030, 5717, 1012, 102, 101, 11338, 3397, 1996, 19701, 4471, 1041, 2008, 4136, 1996, 10669, 2008, 1996, 7978, 4005, 2003, 2025, 5627, 2000, 5589, 1999, 1996, 12016, 4023, 1012, 102, 101, 2023, 4005, 2097, 2022, 2489, 2000, 5589, 1999, 1996, 10470, 2011, 2993, 1010, 1998, 2097, 2025, 2022, 2356, 2000, 2191, 2151, 10504, 2000, 1996, 10669, 1012, 102, 101, 1037, 3145, 11213, 2003, 2008, 6818, 1999, 1050, 1032, 1043, 2024, 11499, 1997, 2130, 1996, 6061, 1997, 1996, 4598, 1997, 1037, 10669, 1010, 1998, 2008, 2027, 2552, 2429, 2000, 2019, 14442, 1997, 1037, 1012, 102, 101, 2057, 19090, 1996, 2208, 4663, 2011, 9530, 16280, 19833, 2075, 1039, 1006, 1037, 1010, 1043, 1007, 1998, 1037, 1010, 2011, 100, 1039, 1006, 1037, 1010, 1043, 1007, 1012, 102, 101, 2005, 2296, 4005, 1045, 1010, 2292, 5622, 1006, 1037, 1007, 2022, 1996, 4005, 1005, 2015, 3517, 9710, 1999, 2019, 14442, 1997, 1037, 1010, 1998, 2292, 5622, 1006, 100, 1039, 1006, 1037, 1010, 1043, 1007, 1007, 2022, 1996, 4005, 1005, 2015, 3517, 9710, 1999, 2019, 14442, 1997, 100, 1039, 1006, 1037, 1010, 1043, 102, 101, 2445, 2019, 10470, 1037, 1010, 1998, 1037, 1043, 1610, 1050, 2004, 2077, 1010, 2057, 2097, 2360, 2008, 1037, 6577, 1011, 15224, 10669, 2005, 1043, 1999, 1037, 6526, 1010, 2065, 2045, 6526, 1039, 1006, 1037, 1010, 1043, 1007, 1010, 2107, 2008, 2296, 4005, 1045, 1596, 1043, 2008, 2052, 2031, 2018, 4194, 102, 101, 2057, 2360, 2008, 1037, 9710, 1011, 9229, 10669, 6526, 2065, 2045, 6526, 1037, 6577, 1011, 15224, 10669, 1010, 1998, 5622, 1006, 100, 1039, 1006, 1037, 1010, 1043, 1007, 1007, 1028, 5622, 1006, 1037, 1007, 1006, 1045, 29625, 2063, 29625, 6577, 1999, 1996, 17534, 2252, 2003, 15189, 1007, 1012, 102, 101, 1996, 4598, 1997, 1037, 9710, 1011, 9229, 10669, 2005, 2019, 10470, 16437, 12748, 1037, 2969, 1011, 27455, 10791, 5656, 2005, 1037, 2177, 1997, 6074, 29625, 3207, 16294, 22753, 1017, 1012, 102, 101, 2057, 2360, 2008, 1037, 15726, 1011, 9229, 10669, 2005, 1043, 1999, 1037, 6526, 2065, 2045, 6526, 1037, 1039, 1006, 1037, 1010, 1043, 1007, 2008, 2003, 6577, 1011, 15224, 1010, 1998, 1996, 3517, 15726, 1997, 1996, 2372, 1997, 1043, 1999, 100, 1039, 1006, 1037, 1010, 1043, 1007, 2003, 3618, 2084, 2037, 102, 101, 4661, 1996, 8089, 2008, 4445, 4145, 12748, 1996, 2060, 1010, 1996, 6594, 1997, 1996, 4434, 2090, 9710, 5714, 21572, 6455, 1998, 15726, 1011, 9229, 10669, 2015, 2003, 2187, 2000, 1996, 2440, 3259, 1012, 102, 101, 1996, 2553, 1997, 8902, 24117, 1999, 2117, 1011, 3976, 10470, 2015, 2003, 6936, 1999, 1031, 1016, 1033, 1012, 102, 101, 1996, 2206, 9872, 2089, 2022, 2139, 28901, 2013, 2023, 2147, 1025, 2057, 2556, 1996, 2765, 2182, 2005, 1996, 8739, 1997, 3143, 2791, 1012, 102, 101, 5136, 1037, 2117, 1011, 3976, 10470, 1012, 102, 101, 1999, 1996, 2553, 1997, 1037, 2117, 18098, 6610, 10470, 1037, 2177, 1997, 17394, 2089, 4299, 2000, 4468, 7079, 1037, 6577, 7408, 1010, 2030, 14084, 7226, 13375, 2040, 2097, 5121, 4558, 2089, 2215, 2000, 4374, 5083, 5060, 1012, 102, 101, 2004, 2009, 4332, 2041, 1010, 2107, 5248, 2064, 2022, 4663, 1024, 9872, 1015, 1012, 102, 101, 2045, 6526, 1037, 9710, 1011, 9229, 10669, 2005, 2117, 1011, 3976, 10470, 2015, 1012, 102, 101, 1999, 1996, 2553, 1997, 1037, 2117, 1011, 3976, 10470, 1010, 2053, 17568, 2006, 1996, 4353, 1997, 1996, 6074, 1005, 26004, 2015, 2342, 2000, 2022, 2081, 1012, 102, 101, 2057, 2097, 7868, 2008, 2045, 2003, 1037, 6577, 7408, 1040, 1028, 1014, 1010, 1998, 2265, 1037, 12016, 8778, 2008, 12939, 1996, 2372, 1997, 1996, 2177, 1043, 2040, 2079, 2025, 2031, 1996, 3284, 26004, 2000, 4468, 7079, 1040, 1012, 102, 101, 2057, 2224, 1996, 2206, 8778, 1024, 1015, 1012, 102, 101, 1996, 6074, 1999, 1043, 2024, 2356, 2000, 12040, 2037, 26004, 2015, 2000, 1996, 10669, 1012, 2475, 1012, 102, 101, 2292, 1058, 2487, 1998, 1058, 2475, 19090, 1996, 3284, 1998, 2117, 3284, 26004, 2015, 1010, 2623, 2011, 6074, 1015, 1998, 1016, 1010, 4414, 1012, 102, 101, 2069, 4005, 1015, 2003, 3421, 1999, 1996, 2364, 10470, 1010, 1998, 2010, 7226, 2045, 2097, 2022, 1058, 2487, 1012, 102, 101, 1062, 1010, 1998, 1062, 1026, 1058, 2475, 1010, 2059, 4005, 1015, 2097, 3477, 1058, 2475, 1597, 1062, 2000, 1996, 10669, 29625, 8545, 2265, 2008, 2065, 1996, 6074, 5589, 1999, 1996, 3653, 29624, 4887, 7542, 1998, 7487, 2037, 2995, 26004, 2015, 2045, 1010, 2059, 2023, 6792, 2097, 2022, 15189, 2000, 2068, 1012, 102, 101, 1996, 4005, 2007, 1996, 3284, 26004, 2064, 2025, 4558, 1010, 2138, 2010, 5248, 1998, 3517, 5114, 2097, 2022, 2004, 1999, 1996, 2553, 2073, 2045, 2001, 2053, 10669, 1012, 102, 101, 1996, 2060, 6074, 2097, 5114, 2349, 2000, 1996, 2755, 2027, 24185, 1050, 29618, 2102, 2342, 2000, 3477, 1996, 6577, 7408, 29625, 8663, 7363, 2099, 2085, 1996, 4005, 1045, 1596, 1043, 2007, 1996, 3284, 26004, 1010, 1998, 7868, 2008, 1996, 2060, 6074, 1999, 1043, 2024, 3606, 2890, 3726, 21682, 6074, 1012, 102, 101, 2445, 2008, 3606, 1011, 8669, 2003, 2019, 14442, 1997, 2117, 1011, 3976, 10470, 2015, 1010, 6074, 1999, 1050, 1032, 1043, 2024, 2579, 2000, 2022, 3606, 1011, 8669, 2004, 2092, 1012, 102, 101, 2445, 2008, 2065, 1996, 4005, 1045, 5222, 1996, 2364, 10470, 1010, 2059, 2002, 12778, 3599, 1996, 3284, 26004, 1999, 1050, 1597, 1063, 1045, 1065, 1006, 2138, 2002, 2097, 3477, 1996, 4555, 1997, 1996, 10470, 1005, 2015, 2117, 1011, 3284, 7226, 1998, 1058, 2475, 1007, 1012, 102, 101, 3115, 2117, 1011, 3976, 10470, 4106, 16189, 2008, 2009, 2003, 23179, 2005, 1045, 2000, 14386, 3686, 2013, 3606, 1011, 8669, 2000, 1996, 8874, 1997, 1037, 3020, 26004, 1012, 102, 101, 2065, 4005, 1045, 2001, 5627, 2000, 5589, 1999, 1996, 2364, 10470, 2059, 4415, 2002, 2515, 2025, 4299, 2000, 4558, 1996, 3653, 29624, 4887, 7542, 1998, 3568, 13856, 1037, 2896, 26004, 2084, 2010, 5025, 2028, 2003, 23179, 2205, 1012, 102, 101, 4415, 1010, 2296, 4005, 1046, 1027, 1045, 1010, 1046, 1596, 1043, 2515, 2025, 2031, 2151, 20438, 2000, 21910, 2065, 1996, 2500, 2024, 3606, 1011, 8669, 1012, 102, 101, 2002, 2064, 2069, 4558, 2065, 2011, 16789, 2002, 2097, 2022, 4217, 2000, 5589, 1999, 1996, 2364, 10470, 29625, 4183, 2003, 3733, 2000, 2156, 2008, 2256, 2765, 4324, 2005, 2887, 10470, 2015, 2004, 2092, 1012, 102, 101, 1999, 1037, 2887, 10470, 2019, 10470, 11510, 4627, 2007, 1037, 2659, 4851, 3976, 1010, 1998, 10843, 4297, 28578, 11187, 2023, 3976, 2004, 2146, 2004, 2024, 2145, 3674, 6074, 5627, 2000, 3477, 1996, 2783, 3976, 1012, 102, 101, 2320, 2069, 1037, 2309, 4005, 3464, 1010, 2002, 2097, 2131, 1996, 2204, 2005, 1996, 2783, 4851, 3976, 1012, 102, 101, 1996, 2755, 2256, 2765, 4324, 2036, 2005, 2887, 10470, 2015, 2003, 3202, 13339, 2011, 1996, 2755, 2008, 1999, 2119, 2887, 10470, 2015, 1998, 2117, 1011, 3976, 10470, 2015, 1996, 2204, 2003, 2853, 2000, 1996, 4005, 2007, 1996, 3284, 26004, 1010, 2012, 1037, 3976, 2008, 19635, 1996, 2117, 1011, 3284, 26004, 1012, 102, 101, 1999, 2023, 2930, 2057, 3066, 2007, 5903, 10470, 2015, 1997, 7681, 5350, 1012, 102, 101, 2182, 1996, 2801, 1997, 1996, 10669, 2003, 2000, 5676, 2008, 1996, 2048, 6074, 2007, 1996, 3284, 26004, 2015, 1999, 1996, 2177, 1043, 2097, 5566, 2005, 2367, 5350, 2738, 2084, 2426, 3209, 1012, 102, 101, 2023, 2097, 9585, 2000, 5335, 2588, 1996, 15726, 1997, 1996, 2372, 1997, 1043, 1012, 102, 101, 2057, 2064, 2265, 1024, 9872, 1016, 1012, 102, 101, 2045, 6526, 1037, 15726, 1011, 9229, 10669, 2005, 5903, 2117, 1011, 3976, 10470, 2015, 1997, 7681, 5350, 1012, 102, 101, 1996, 6074, 1999, 1043, 2024, 2356, 2000, 12040, 2037, 26004, 2015, 2000, 1996, 10669, 1012, 2475, 1012, 102, 101, 2292, 1058, 1015, 1010, 1058, 1016, 1010, 1998, 1058, 2509, 19090, 1996, 3284, 1010, 1996, 2117, 3284, 1010, 1998, 1996, 2353, 3284, 26004, 2015, 2029, 2031, 2042, 2623, 1010, 4414, 1012, 102, 101, 2069, 1996, 6074, 2007, 1996, 3284, 1998, 2117, 3284, 26004, 2015, 2097, 5589, 1999, 1996, 2364, 10470, 1012, 102, 101, 1996, 6074, 2097, 2022, 18154, 4137, 2000, 2367, 10470, 2015, 1012, 2549, 1012, 102, 101, 2065, 2019, 4005, 4152, 1996, 4874, 1999, 10470, 9932, 2005, 1996, 3976, 1061, 1026, 1058, 2509, 1010, 2059, 2002, 2097, 3477, 1058, 2509, 1597, 1061, 2000, 1996, 10669, 29625, 4183, 2003, 3154, 2008, 2065, 2035, 6074, 15470, 1996, 10669, 1005, 2015, 8778, 1010, 1998, 4604, 2037, 5025, 26004, 2015, 2000, 1996, 10669, 1010, 2059, 1996, 6074, 102, 101, 1999, 14442, 6074, 2097, 2215, 2000, 5589, 1025, 2005, 2742, 1010, 5136, 6074, 1015, 1998, 1016, 1010, 2383, 1996, 2048, 3284, 20723, 7864, 2000, 1996, 10669, 1012, 102, 101, 2004, 1037, 2765, 1997, 1996, 12016, 1996, 2034, 4005, 2097, 2031, 1037, 2896, 3517, 7909, 1010, 2144, 2002, 2097, 2467, 3477, 2070, 3815, 2625, 2084, 1058, 2475, 1010, 2096, 1996, 2117, 4005, 2097, 2031, 1037, 3618, 3382, 1997, 3045, 1010, 2144, 2002, 2097, 2196, 2022, 2041, 17062, 2011, 4005, 1015, 1012, 102, 101, 2057, 2085, 2265, 2008, 3606, 1011, 8669, 2003, 2019, 14442, 1012, 102, 101, 5136, 2019, 4005, 1045, 2487, 1010, 2007, 1996, 3284, 26004, 1999, 1043, 1010, 1058, 2487, 1010, 1998, 7868, 2008, 1996, 2717, 1997, 1996, 6074, 2024, 3606, 1011, 8669, 1012, 102, 101, 2065, 4005, 1015, 4311, 1037, 26004, 3020, 2084, 1058, 2487, 1010, 1998, 6855, 2015, 2004, 1037, 2765, 1997, 2023, 1037, 2204, 2002, 2071, 2025, 6855, 4728, 1010, 2059, 2009, 2442, 2022, 1996, 2553, 2008, 2010, 7909, 2003, 3020, 2084, 2010, 26004, 1010, 2029, 3084, 2008, 24353, 23179, 1012, 102, 101, 2009, 2003, 3154, 2008, 7316, 2006, 1037, 26004, 2896, 2084, 1058, 1015, 2515, 2025, 2393, 4005, 1015, 1012, 102, 101, 5136, 2019, 4005, 1045, 2475, 1010, 2007, 1996, 2117, 1011, 3284, 26004, 1999, 1043, 1010, 1058, 2475, 1010, 1998, 7868, 1996, 2060, 6074, 2024, 3606, 1011, 8669, 1012, 102, 101, 2065, 1996, 4005, 4311, 1037, 3020, 26004, 2084, 1058, 2487, 2059, 2002, 2097, 2022, 1996, 3284, 1011, 5464, 7226, 4063, 1999, 1996, 3653, 29624, 4887, 7542, 2738, 2084, 1996, 2117, 3284, 1011, 5464, 1010, 2021, 2023, 2097, 2025, 5770, 2032, 2004, 1996, 2327, 2048, 7226, 13375, 2024, 4137, 2000, 10470, 2015, 18154, 1012, 102, 101, 1996, 2717, 1997, 1996, 4106, 2003, 1996, 2168, 2004, 2005, 1045, 2487, 29625, 8663, 7363, 2099, 2019, 4005, 1045, 2509, 1010, 2007, 1996, 2353, 1011, 3284, 26004, 1999, 1043, 1010, 1058, 2509, 1010, 1998, 7868, 1996, 2060, 6074, 2024, 3606, 1011, 8669, 1012, 102, 101, 2065, 1996, 4005, 4311, 1037, 26004, 2008, 5320, 2009, 2000, 5114, 1996, 3653, 4887, 7542, 1010, 2059, 2049, 7909, 2097, 2022, 2012, 2560, 1058, 2475, 1028, 1058, 2509, 1010, 2029, 3084, 2107, 24353, 23179, 1012, 102, 101, 2714, 4106, 2097, 2907, 2005, 6074, 2007, 2896, 26004, 2015, 1012, 102, 101, 1999, 2023, 2930, 2057, 3066, 2007, 5903, 10470, 2015, 2005, 21053, 5350, 1012, 102, 101, 2256, 6614, 2003, 2000, 3499, 1996, 6818, 1999, 1043, 2000, 6855, 1037, 3020, 15726, 2084, 2054, 2027, 2071, 6855, 2302, 1996, 10669, 1012, 102, 101, 2057, 7868, 2008, 1999, 1043, 2057, 2031, 2012, 2560, 2048, 4505, 1997, 1050, 2487, 1010, 1050, 2475, 1998, 27937, 1012, 102, 101, 2057, 2064, 2265, 1024, 9872, 1017, 1012, 102, 101, 2045, 6526, 1037, 15726, 1011, 9229, 10669, 2005, 5903, 2117, 1011, 3976, 10470, 2015, 1997, 21053, 5350, 1012, 102, 101, 2292, 1014, 1026, 1047, 1026, 29629, 1015, 2022, 1037, 4141, 1011, 2124, 5377, 1012, 102, 101, 2057, 2097, 2224, 1996, 2206, 10669, 1018, 1024, 1015, 1012, 102, 101, 1996, 10669, 5176, 1996, 6074, 2008, 2024, 4699, 1999, 1996, 2309, 5350, 2005, 2037, 26004, 2015, 1016, 1012, 102, 101, 1996, 10669, 27034, 2048, 6074, 1010, 1055, 2487, 1998, 1055, 2475, 1010, 2040, 2988, 1996, 3284, 26004, 2015, 2005, 5350, 1043, 2487, 1998, 1043, 2475, 1010, 1058, 2487, 1998, 1058, 2475, 4414, 1012, 2509, 1012, 102, 101, 2065, 2151, 4005, 2013, 1050, 2487, 1055, 1050, 2475, 6430, 2000, 5589, 1010, 1996, 10669, 12040, 2015, 20723, 1999, 1996, 6413, 10470, 2015, 2005, 2035, 6074, 1999, 1050, 2487, 1055, 1050, 2475, 2040, 2106, 11322, 2000, 5589, 1010, 2007, 1037, 3976, 3749, 5020, 2000, 1996, 6074, 1005, 3090, 26004, 2015, 1010, 1998, 1996, 8778, 2003, 3143, 1012, 102, 101, 4728, 1010, 2065, 2035, 6074, 2700, 2000, 5589, 1010, 2057, 10838, 2000, 3357, 1018, 29625, 2549, 1012, 102, 101, 1996, 10669, 17472, 1058, 2487, 1998, 1058, 2475, 2000, 2035, 1997, 1996, 6818, 1999, 1043, 29625, 1019, 1012, 102, 101, 1996, 10669, 5176, 1996, 6074, 2008, 2024, 4699, 1999, 1996, 3940, 1997, 5350, 2005, 2037, 26004, 2015, 1012, 2575, 1012, 102, 101, 1996, 10669, 18154, 27034, 2019, 4005, 1010, 1055, 1052, 1010, 2040, 2988, 1037, 26004, 21210, 2005, 1996, 3940, 1997, 5350, 1010, 2107, 2008, 1058, 2487, 1009, 1058, 2475, 1009, 1016, 2243, 1026, 21210, 1006, 2065, 2107, 2019, 4005, 6526, 1007, 1012, 2581, 1012, 102, 101, 1996, 10669, 20723, 1058, 2487, 1999, 17350, 1010, 1998, 1058, 2475, 1999, 22441, 1012, 102, 101, 1018, 2023, 5942, 1037, 3243, 19647, 14080, 2000, 1996, 6210, 1997, 10669, 2015, 1010, 2029, 2057, 13558, 1012, 102, 101, 8419, 1010, 1037, 10669, 2064, 2448, 1037, 4800, 29624, 9153, 3351, 2208, 2612, 1997, 1996, 3853, 1056, 2487, 1006, 1037, 1010, 1043, 1007, 1012, 2620, 1012, 102, 101, 2065, 1996, 10669, 5222, 2119, 10470, 2015, 1010, 1998, 2019, 4005, 11867, 6526, 1010, 2059, 11867, 2097, 2131, 1996, 3940, 1997, 5350, 1998, 3477, 5443, 8586, 1015, 1009, 5443, 8586, 1016, 2000, 1996, 10669, 1010, 2073, 5443, 8586, 1045, 2003, 1996, 2117, 4048, 5603, 4355, 7226, 1999, 9932, 1012, 102, 101, 4005, 11867, 2097, 2036, 3477, 4005, 1045, 1006, 1045, 1027, 1015, 1010, 1016, 1007, 1047, 1009, 4098, 1006, 1014, 1010, 1058, 1045, 1597, 5443, 8586, 1045, 1007, 1012, 2683, 1012, 102, 101, 2065, 1996, 10669, 2069, 5222, 10470, 1045, 1010, 2030, 2065, 1996, 10669, 5222, 2119, 10470, 2015, 2021, 2045, 2515, 2025, 4839, 2019, 4005, 11867, 1010, 2059, 4005, 9033, 4152, 1996, 2204, 1998, 12778, 5443, 8586, 1045, 2000, 1996, 10669, 29625, 8663, 7363, 2099, 2019, 14442, 1997, 1996, 7978, 100, 1039, 1006, 1037, 1010, 1043, 1007, 1010, 102, 101, 2009, 2003, 3154, 2008, 1999, 14442, 1055, 1045, 2097, 5589, 1999, 1039, 1006, 1037, 1010, 1043, 1007, 1998, 2008, 1996, 12339, 1997, 1037, 26004, 2029, 2003, 2012, 2560, 2004, 2152, 2004, 1055, 1045, 1005, 2015, 26004, 2011, 1055, 1045, 29532, 1996, 12339, 1997, 1037, 2896, 26004, 1012, 102, 101, 2023, 2003, 2349, 2000, 1996, 2755, 2008, 2011, 12040, 3436, 1037, 26004, 2008, 2003, 2896, 2084, 2010, 5025, 26004, 2019, 4005, 2064, 2069, 4558, 1010, 2445, 2008, 2023, 2003, 1037, 2117, 1011, 3976, 10470, 1012, 102, 101, 1996, 4005, 2064, 2025, 4558, 2011, 8019, 1999, 1996, 3653, 29624, 4887, 7542, 1010, 2144, 2009, 2003, 12361, 2000, 2131, 2012, 2560, 1996, 4489, 2090, 2049, 3090, 26004, 1998, 1996, 2117, 4048, 5603, 4355, 7226, 1010, 2065, 2049, 3090, 26004, 2003, 1996, 3284, 1012, 102, 101, 9308, 1010, 2065, 4005, 11867, 5222, 1996, 2204, 2059, 1055, 1045, 2089, 2036, 2131, 1037, 7909, 1997, 1047, 1028, 1014, 1012, 102, 101, 2005, 2023, 3114, 1010, 1998, 2036, 2138, 5443, 8586, 1045, 2089, 2022, 2625, 2084, 1996, 3284, 5837, 7226, 2013, 9152, 1056, 1043, 1010, 3606, 11449, 2097, 2025, 2022, 1999, 1996, 2190, 3037, 1997, 4005, 1055, 1045, 1012, 102, 101, 2612, 1010, 2002, 2097, 12040, 1037, 7226, 2008, 23651, 2010, 2995, 26004, 29625, 5856, 8159, 1996, 2682, 1010, 2019, 4005, 11867, 1010, 2040, 2038, 3037, 1999, 1996, 3940, 1997, 5350, 2097, 2022, 5627, 2000, 5589, 1999, 1996, 10669, 1005, 2015, 8778, 2065, 1058, 2487, 1009, 1058, 2475, 1009, 1016, 2243, 1026, 21210, 1012, 102, 101, 3602, 2008, 2035, 6074, 2024, 5204, 1997, 1047, 2077, 6885, 2037, 20723, 1012, 102, 101, 2009, 2003, 3733, 2000, 4638, 2008, 2009, 2003, 23179, 2005, 1055, 1052, 2000, 4604, 1037, 4471, 2008, 2071, 2663, 1996, 3653, 29624, 4887, 7542, 2065, 2049, 26004, 2003, 3760, 2084, 1058, 2487, 1009, 1058, 2475, 1009, 1016, 2243, 1010, 1998, 10655, 2009, 2003, 23179, 2005, 11867, 2000, 23123, 12040, 1037, 26004, 3760, 2084, 1058, 2487, 1009, 1058, 2475, 102, 101, 4728, 1996, 3815, 7864, 2011, 11867, 2003, 22537, 1010, 2004, 1996, 10669, 15867, 18154, 2090, 7792, 6074, 1999, 27937, 1012, 102, 101, 2947, 1010, 3517, 15726, 2003, 3445, 2011, 2023, 8778, 1012, 102, 101, 2045, 6526, 1037, 9710, 1011, 9229, 10669, 2005, 2034, 1011, 3976, 10470, 2015, 1012, 102, 101, 9131, 2008, 2057, 7868, 2008, 1996, 6074, 1005, 26004, 2015, 2024, 4567, 27423, 2013, 1996, 13483, 1031, 1014, 29623, 2487, 1033, 1012, 102, 101, 2256, 8778, 2064, 2022, 4089, 6310, 2000, 3066, 2007, 2060, 20611, 2006, 1996, 6074, 1005, 4127, 1012, 102, 101, 2292, 1049, 2022, 1996, 2193, 1997, 6074, 2040, 2097, 5589, 1999, 1996, 2364, 10470, 1010, 2040, 2024, 2025, 2372, 1997, 1996, 17534, 2252, 1006, 1998, 2040, 2024, 2947, 5071, 2025, 2000, 2022, 5204, 2130, 1997, 1996, 6061, 1997, 2049, 4598, 1007, 1012, 102, 101, 2057, 2224, 1996, 2206, 8778, 1024, 1015, 1012, 102, 101, 13260, 1996, 6074, 1999, 1043, 2000, 12040, 2037, 26004, 2015, 2000, 1996, 10669, 1012, 2475, 1012, 102, 101, 2065, 2151, 4005, 26451, 2000, 5589, 1010, 12040, 20723, 2005, 2035, 6074, 2008, 2106, 11322, 2000, 5589, 1010, 2007, 1037, 3976, 3749, 1997, 1050, 1597, 1015, 1050, 6819, 1010, 1998, 1996, 8778, 2003, 3143, 1012, 102, 101, 4728, 1010, 2065, 2035, 6074, 2700, 2000, 5589, 1010, 2057, 10838, 2000, 3357, 1017, 29625, 2509, 1012, 102, 101, 2292, 1996, 2048, 6074, 2007, 1996, 3284, 2988, 26004, 2015, 2022, 6074, 1015, 1998, 1016, 1010, 2007, 2988, 26004, 2015, 1058, 2487, 1998, 1058, 2475, 4414, 1012, 2549, 1012, 102, 101, 2065, 1058, 1015, 1050, 1050, 1026, 1058, 2475, 1049, 1087, 1006, 1058, 2487, 1597, 1058, 2475, 1007, 1010, 12040, 1037, 7226, 2069, 2005, 4005, 1015, 1010, 2007, 1037, 3976, 3749, 1997, 1058, 2475, 1012, 2629, 1012, 102, 101, 4728, 1010, 12040, 20723, 2005, 2035, 6074, 1045, 1596, 1043, 1010, 2007, 3976, 3749, 1050, 1597, 1015, 1050, 6819, 29625, 8873, 12096, 1010, 2057, 2265, 2008, 2065, 1996, 6074, 7487, 2037, 2995, 26004, 2015, 2059, 15189, 6792, 4372, 6342, 2229, 1012, 102, 101, 2009, 2003, 3154, 2008, 1996, 2069, 4005, 2040, 2064, 5114, 2003, 1996, 4005, 2007, 1996, 3284, 26004, 1010, 1058, 2487, 1010, 2096, 1996, 2060, 6074, 2079, 2025, 4558, 1012, 102, 101, 3602, 2008, 1058, 1015, 1050, 1050, 2003, 1996, 3517, 9710, 1997, 4005, 1015, 2012, 1996, 14442, 1999, 1996, 2434, 7337, 1010, 2096, 1058, 2475, 1049, 1087, 1006, 1058, 2487, 1597, 1058, 2475, 1007, 2003, 2010, 3517, 9710, 2065, 2002, 12040, 2015, 1037, 7226, 1997, 1058, 2475, 1999, 1037, 6310, 7337, 2007, 1049, 1009, 1015, 6818, 102, 101, 1058, 2487, 6666, 2138, 1996, 8778, 2003, 21727, 4919, 2000, 2032, 1024, 1996, 10669, 4107, 4005, 1015, 1996, 3601, 1997, 8019, 1999, 1996, 2434, 7337, 2012, 2049, 14442, 1010, 2030, 1997, 15349, 2070, 7226, 13375, 2013, 1996, 10470, 1998, 17534, 1058, 2475, 1012, 102, 101, 1999, 2296, 3663, 1010, 1996, 10669, 27034, 1996, 4522, 2008, 4005, 1015, 2052, 9544, 1010, 2445, 2010, 3090, 26004, 1012, 102, 101, 1006, 3602, 2008, 2045, 6526, 1037, 2275, 2007, 2512, 29624, 6290, 2080, 5468, 1997, 5300, 1997, 1058, 2487, 1998, 1058, 1016, 17087, 1996, 4650, 1999, 3357, 1017, 1997, 1996, 8778, 1025, 1996, 10467, 1997, 2023, 2755, 2003, 2187, 2000, 1996, 2440, 2544, 1997, 1996, 3259, 1012, 1007, 102, 101, 2012, 1996, 2168, 2051, 1010, 2053, 7226, 4063, 17567, 2013, 2108, 5892, 1024, 2169, 5892, 7226, 4063, 2003, 8916, 2008, 1037, 7226, 2097, 2022, 2872, 1999, 1996, 2364, 10470, 17003, 2010, 26004, 1012, 102, 101, 2085, 2057, 2265, 2008, 1996, 8778, 5260, 1996, 6074, 2000, 7487, 2037, 2995, 26004, 2015, 1012, 102, 101, 2004, 1037, 2765, 1010, 6577, 2097, 2022, 11581, 2005, 2035, 6074, 1012, 102, 101, 2000, 2265, 2008, 3606, 1011, 11449, 2003, 2019, 14442, 1010, 7868, 2008, 2035, 2021, 2028, 1997, 1996, 6074, 12040, 2037, 2995, 26004, 2015, 1012, 102, 101, 5060, 2008, 2144, 2069, 4005, 1015, 2064, 5618, 2013, 1996, 17534, 2252, 1010, 1996, 2069, 3114, 2008, 2151, 4005, 2060, 2084, 4005, 1015, 2052, 4682, 2003, 2000, 2468, 1996, 4005, 2007, 1996, 3284, 26004, 1012, 102, 101, 2174, 1010, 2023, 4005, 2052, 2059, 2593, 2022, 3421, 1999, 1996, 2434, 7337, 2682, 1996, 14442, 1010, 2030, 2022, 2081, 2000, 7226, 1058, 2487, 1010, 2062, 2084, 2010, 26004, 1012, 102, 101, 4005, 1015, 2038, 2053, 3114, 2000, 4682, 2138, 1996, 7337, 2003, 21727, 3599, 2000, 2032, 1010, 2004, 2649, 2682, 29625, 22074, 2008, 1010, 20506, 15004, 1010, 1996, 17534, 2252, 2064, 2036, 5770, 7226, 13375, 2040, 2079, 1050, 29618, 2102, 2130, 2113, 1997, 2049, 4598, 999, 102, 101, 2023, 2003, 2349, 2000, 1996, 2755, 2008, 1999, 14442, 1997, 2034, 1011, 3976, 10470, 2015, 1010, 20723, 2024, 16922, 2004, 1037, 3853, 1997, 1996, 2193, 1997, 6818, 1010, 1998, 2057, 7868, 2008, 2035, 6074, 2024, 2081, 5204, 1997, 1996, 2193, 1997, 7226, 13375, 8019, 1999, 1996, 2364, 10470, 1012, 102, 101, 1019, 7226, 13375, 2040, 2024, 11499, 1997, 1996, 17534, 2252, 2097, 2947, 12040, 2896, 20723, 2065, 1996, 17534, 2252, 11027, 2015, 7226, 13375, 2084, 2065, 2009, 2515, 2025, 1012, 102, 101, 2057, 2079, 2025, 17908, 1996, 2553, 2073, 7226, 13375, 2040, 2024, 11499, 1997, 1996, 17534, 2252, 2024, 5204, 1997, 1996, 2561, 2193, 1997, 7226, 13375, 2164, 2216, 5892, 2011, 1996, 10669, 1010, 2144, 2023, 3716, 2052, 2599, 2068, 2000, 3716, 1997, 1996, 17534, 2252, 1005, 2015, 4598, 1006, 2043, 2027, 5159, 2008, 1037, 102, 101, 1019, 2057, 7868, 2008, 1996, 2193, 1997, 7226, 13375, 8019, 1999, 1996, 10470, 2003, 4340, 2429, 2000, 1996, 2193, 1997, 5664, 7226, 13375, 5782, 2000, 12040, 20723, 1012, 102, 101, 2947, 2065, 1996, 10669, 3182, 2069, 2028, 7226, 1999, 1996, 2364, 10470, 2059, 7226, 13375, 2040, 2024, 11499, 1997, 1996, 17534, 2252, 2097, 2036, 2022, 11499, 1997, 7226, 13375, 2040, 2020, 5892, 1999, 1996, 17534, 2252, 1005, 2015, 3653, 29624, 4887, 7542, 1012, 102, 101, 2009, 2003, 3733, 2000, 2156, 2008, 2256, 2765, 4324, 2005, 3803, 10470, 2015, 2004, 2092, 1012, 102, 101, 1999, 1037, 3803, 10470, 1996, 10470, 11510, 4627, 2007, 1037, 2152, 4851, 3976, 1010, 1998, 2059, 10843, 11703, 28578, 11187, 2023, 3976, 2127, 2019, 4005, 4447, 1996, 2204, 2005, 1996, 2783, 3976, 1012, 102, 101, 1996, 2755, 2256, 2765, 4324, 2036, 2005, 3803, 10470, 2015, 2003, 3202, 13339, 2011, 1996, 6143, 27841, 2090, 2034, 1011, 3976, 10470, 2015, 1998, 3803, 10470, 2015, 1012, 102, 101, 1996, 2034, 1011, 3976, 1998, 1996, 2117, 3976, 10470, 2015, 2024, 2048, 4387, 10470, 2015, 1010, 2021, 2116, 2060, 10470, 2015, 1010, 2004, 2092, 2004, 2060, 3171, 10595, 1006, 2536, 4127, 1997, 14279, 1010, 7776, 1010, 4385, 29625, 1007, 1010, 2024, 2036, 6936, 1999, 1996, 3906, 1012, 102, 101, 1999, 2023, 2930, 2057, 2265, 2008, 9710, 1011, 9229, 10669, 2015, 4839, 2005, 2116, 2060, 3141, 18046, 2004, 2092, 29625, 6914, 21673, 10595, 2024, 2788, 16578, 2478, 3016, 25253, 2399, 1012, 102, 101, 1999, 1037, 3016, 25253, 2208, 2169, 4005, 2038, 1037, 2275, 1997, 2825, 4127, 1010, 1998, 2019, 4005, 1005, 2015, 5656, 2003, 1037, 3247, 1997, 2010, 2895, 2004, 1037, 3853, 1997, 2010, 2828, 1012, 102, 101, 1996, 5025, 2828, 1997, 1996, 4005, 2003, 2124, 2000, 2032, 1010, 1998, 2003, 3479, 2013, 1037, 4141, 2124, 4353, 3853, 1012, 102, 101, 1996, 3477, 7245, 1997, 2169, 4005, 2003, 1037, 3853, 1997, 2119, 1996, 4101, 5656, 1997, 1996, 6074, 1998, 1996, 3327, 2828, 1997, 1996, 4005, 1012, 102, 101, 1999, 1996, 6123, 1997, 10470, 2015, 1010, 1996, 4127, 1997, 1996, 6074, 6523, 2000, 2037, 26004, 2015, 1012, 102, 101, 1996, 6210, 1998, 4106, 1997, 14442, 9942, 2005, 2236, 10595, 2097, 3568, 2022, 2714, 2000, 2054, 2057, 2649, 1999, 2930, 1017, 2005, 1996, 2553, 1997, 10470, 2015, 29625, 2378, 2344, 2000, 6011, 3463, 2008, 2024, 2236, 1998, 2907, 2005, 2151, 7337, 1010, 6950, 2031, 2109, 1996, 2206, 8089, 1010, 2029, 2003, 1037, 3622, 102, 101, 2009, 4332, 2041, 2008, 2009, 2003, 2438, 2000, 5136, 2069, 10595, 2107, 2008, 1999, 1996, 14442, 1997, 1996, 7978, 3016, 25253, 2208, 1996, 6074, 2097, 7487, 2037, 2995, 4127, 1012, 102, 101, 2429, 2000, 2023, 8089, 1010, 12061, 1996, 11449, 6958, 1010, 2009, 2003, 3019, 2000, 21573, 2256, 3086, 2000, 1006, 2364, 1007, 10595, 2029, 2191, 1037, 3247, 2241, 2006, 2995, 2592, 8127, 2011, 1996, 6074, 29625, 15222, 2015, 7545, 2149, 2000, 1996, 2206, 2236, 3291, 1012, 102, 101, 7868, 2008, 1996, 6074, 1005, 4127, 2024, 3479, 2013, 1037, 10713, 2275, 1010, 1998, 2008, 1996, 6074, 2024, 2055, 2000, 5589, 1999, 1037, 2445, 3606, 8669, 7337, 1049, 1012, 102, 101, 7868, 2008, 1996, 14442, 1997, 1996, 2208, 3378, 2007, 2008, 7337, 5260, 2000, 1037, 2512, 11968, 18903, 1011, 15502, 9560, 2005, 2012, 2560, 2028, 10722, 10814, 1997, 4005, 4127, 1006, 1045, 29625, 2063, 29625, 2005, 2023, 10722, 10814, 1997, 4127, 1996, 6074, 2052, 2488, 4685, 1037, 4101, 5656, 2008, 2003, 2367, 2013, 1996, 14442, 5656, 1007, 102, 101, 2064, 1037, 10669, 2022, 2109, 1999, 2344, 2000, 2191, 1037, 10791, 1006, 15189, 1998, 20438, 11892, 1007, 3066, 2426, 1996, 6074, 1029, 102, 101, 1999, 1996, 8297, 1010, 2057, 7868, 2008, 1996, 26004, 2015, 1997, 1996, 6074, 2024, 2579, 2013, 1058, 1027, 1063, 1058, 2487, 1010, 1012, 1012, 1012, 1010, 1058, 2213, 1065, 2073, 6819, 1026, 6819, 1009, 2487, 2005, 2296, 1045, 1012, 102, 101, 2057, 2064, 2265, 1024, 9872, 1019, 1012, 102, 101, 5136, 1037, 3606, 8669, 7337, 2007, 4310, 9384, 3016, 25253, 14442, 1010, 2008, 5260, 2000, 1037, 2512, 11968, 18903, 7361, 3775, 9067, 9560, 2005, 2012, 2560, 2028, 10722, 10814, 1997, 4005, 4127, 1012, 102, 101, 2059, 1010, 1037, 9710, 1011, 9229, 10669, 6526, 29625, 22083, 2594, 2801, 2369, 6947, 1024, 2169, 4005, 2097, 2022, 4778, 2000, 4604, 2010, 26004, 2000, 1996, 10669, 1012, 102, 101, 1996, 10669, 2097, 18422, 1037, 10722, 10814, 1997, 2060, 26004, 2015, 2008, 2052, 5770, 1996, 6074, 1006, 10262, 2027, 2988, 2037, 5025, 26004, 2015, 1007, 1010, 2065, 7864, 2000, 1996, 2364, 7337, 1012, 102, 101, 5060, 2008, 2096, 2019, 4005, 2052, 4558, 1999, 14442, 2011, 14386, 5844, 2013, 3606, 2890, 15985, 3370, 1999, 1996, 2434, 7337, 1010, 6016, 2995, 26004, 2015, 2003, 2025, 9352, 2019, 14442, 2065, 1996, 10669, 12040, 2015, 1996, 2047, 10722, 10814, 1012, 102, 101, 2174, 1010, 2057, 2064, 2265, 2008, 2045, 6526, 1037, 6179, 10669, 2029, 2036, 9319, 20438, 21778, 1012, 2487, 1012, 102, 101, 13260, 1996, 6074, 2000, 12040, 2037, 26004, 2015, 2000, 1996, 10669, 1012, 2475, 1012, 102, 101, 2065, 2151, 4005, 26451, 2000, 5589, 1010, 12040, 1996, 4161, 26004, 2015, 1997, 2035, 8019, 6074, 2000, 1996, 2364, 7337, 1012, 2509, 1012, 102, 101, 4728, 1010, 12040, 1996, 2047, 10722, 10814, 1997, 26004, 2015, 2000, 1996, 2364, 7337, 2006, 6852, 1997, 2035, 6074, 2007, 9723, 1052, 1025, 2007, 9723, 1015, 1597, 1052, 12040, 1996, 26004, 2015, 2988, 2011, 1996, 6074, 29625, 10760, 9723, 1052, 2003, 4340, 2004, 4076, 1012, 102, 101, 5136, 2019, 4005, 1045, 1010, 2040, 2081, 1996, 8874, 6819, 1012, 102, 101, 2034, 1010, 2057, 2064, 24134, 1996, 4555, 3517, 5114, 1010, 1043, 1045, 1010, 2008, 1045, 2071, 6162, 2011, 12040, 3436, 1037, 26004, 1058, 1045, 1027, 6819, 1012, 102, 101, 2117, 1010, 2057, 2064, 24134, 1045, 1005, 2015, 10479, 3517, 3279, 1999, 1996, 2434, 7337, 1010, 5622, 1010, 2065, 6819, 2003, 1037, 6270, 26004, 1012, 102, 101, 5060, 2008, 5622, 2003, 3893, 1010, 2445, 1996, 11213, 2008, 3606, 1011, 11449, 2003, 1037, 9384, 10594, 14442, 1012, 102, 101, 1999, 2023, 3259, 2057, 2031, 3591, 1996, 9366, 1997, 17534, 4184, 1998, 2049, 2224, 1999, 11381, 2969, 1011, 27455, 6792, 1999, 4556, 10470, 16437, 2015, 1012, 102, 101, 2057, 2031, 3591, 16744, 2005, 5903, 2117, 1011, 3976, 10470, 2015, 2005, 4942, 16643, 8525, 10880, 1998, 19394, 5649, 5350, 1010, 2005, 2034, 1011, 3976, 10470, 2015, 2005, 2309, 5350, 1010, 1998, 2005, 2236, 10595, 2104, 2536, 17568, 1012, 102, 101, 2256, 2147, 2064, 2022, 2641, 2004, 1037, 2034, 3535, 2000, 5337, 4697, 1000, 6143, 17394, 1005, 4184, 1000, 1010, 2073, 6818, 2089, 21910, 2055, 2037, 26004, 2015, 1998, 2061, 1996, 2252, 1005, 2015, 8778, 2442, 2022, 2881, 5362, 2438, 2000, 4070, 2005, 2023, 6061, 1012, 102, 101, 1996, 2817, 1997, 17534, 4184, 2003, 21053, 2000, 1996, 4138, 2147, 2006, 8114, 3006, 2640, 1031, 1018, 29623, 2487, 29623, 2575, 1033, 1012, 102, 101, 17534, 4184, 2202, 1996, 6074, 1005, 7339, 1999, 9229, 2037, 3663, 1999, 4493, 6089, 1010, 2738, 2084, 2635, 1037, 2415, 1005, 2015, 7339, 2006, 15502, 1010, 6599, 20446, 6026, 3006, 2640, 1012, 102], "tgt": [1, 17534, 4184, 1037, 16745, 1997, 1037, 2831, 2445, 2012, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 4901, 25866, 2669, 1011, 2829, 10930, 11431, 26822, 3511, 27123, 2702, 10224, 14854, 5753, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1016, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2054, 2785, 1997, 9414, 2291, 2071, 2393, 7226, 13375, 1999, 2019, 10470, 1029, 3, 24540, 7226, 13375, 1006, 1041, 15907, 1010, 4385, 29625, 1007, 2428, 2074, 10938, 2394, 2046, 3416, 1011, 3976, 10470, 19309, 28041, 1997, 2592, 2013, 2367, 10470, 2015, 17534, 6040, 1010, 3247, 2490, 17534, 4184, 2612, 1997, 5094, 2028, 5310, 1010, 2393, 1037, 2177, 9572, 7226, 13375, 3006, 2373, 4406, 17634, 4184, 1010, 7226, 13375, 5426, 2025, 13115, 2969, 1011, 27455, 8902, 7393, 3512, 3820, 1024, 3623, 3517, 9710, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1017, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 8902, 24117, 2742, 5674, 1037, 2034, 1011, 3976, 10470, 2007, 1020, 7226, 13375, 1010, 1017, 1997, 3183, 5630, 2000, 8902, 7630, 3207, 1999, 5083, 2003, 2045, 1037, 3653, 29624, 8490, 9910, 3672, 2008, 2064, 5770, 2070, 1010, 2021, 18476, 4697, 3904, 1029, 3, 12847, 6378, 1024, 2169, 7226, 4063, 12040, 2015, 2014, 26004, 1996, 2048, 2659, 7226, 13375, 4530, 2041, 1996, 7226, 4063, 2007, 1996, 3284, 26004, 20723, 2896, 1999, 1996, 2364, 10470, 7226, 13375, 2031, 2019, 20438, 2000, 4682, 1999, 1996, 3653, 29624, 4887, 7542, 999, 3, 2023, 2003, 2995, 2130, 2065, 1996, 2152, 7226, 4063, 12778, 1996, 2060, 2048, 2000, 4530, 2041, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1018, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 17534, 4184, 1008, 2007, 1061, 29625, 26822, 3511, 1010, 1049, 29625, 2702, 10224, 14854, 5753, 1006, 14925, 8889, 1007, 7226, 13375, 1024, 1050, 1027, 1063, 1015, 1010, 1016, 1010, 1010, 1050, 1065, 1024, 1037, 2275, 1997, 7226, 13375, 2040, 2097, 5589, 1999, 2019, 10470, 1010, 1037, 1043, 1050, 1024, 1037, 2275, 1997, 7226, 13375, 2040, 2024, 4778, 2000, 5589, 1999, 1037, 3653, 29624, 4887, 7542, 10669, 1039, 1024, 2064, 1039, 2907, 1037, 3653, 29624, 4887, 7542, 2008, 2097, 5770, 2070, 1997, 1043, 1998, 18476, 4697, 3904, 1029, 3, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1019, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 17568, 1024, 10669, 1996, 10669, 1024, 18675, 2070, 16745, 1997, 7226, 13375, 2000, 5589, 2512, 29624, 8428, 4667, 8468, 2089, 16306, 10504, 2013, 1010, 2090, 7226, 13375, 2064, 2025, 3465, 2769, 2000, 5452, 4490, 2069, 2004, 1037, 4387, 1997, 7226, 13375, 2339, 2064, 2009, 2022, 9480, 2000, 2552, 2128, 6632, 6321, 1029, 3, 2028, 2126, 1997, 2559, 2012, 2009, 2003, 2008, 1039, 13585, 2007, 1037, 2000, 2433, 1037, 2047, 7337, 20116, 5248, 2003, 3929, 9675, 1010, 2691, 3716, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1020, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 17568, 1024, 7226, 13375, 12997, 2615, 2944, 1010, 2053, 6327, 6447, 2462, 2094, 2013, 4353, 1042, 2034, 1011, 3976, 10470, 14442, 7226, 1024, 1038, 1006, 1042, 1010, 1050, 1010, 1058, 1007, 1042, 3180, 1024, 1038, 1006, 1042, 1010, 1050, 1009, 2487, 1010, 6819, 1007, 1028, 1038, 1006, 1042, 1010, 1050, 1010, 6819, 1007, 1010, 1050, 1016, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1021, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 24353, 2013, 3115, 14181, 4292, 4895, 2378, 25217, 2094, 6074, 2024, 2025, 5204, 1997, 1996, 6061, 1997, 1996, 4598, 1997, 1037, 10669, 2027, 2903, 2008, 2169, 7226, 2872, 14788, 2000, 1037, 2309, 7226, 4063, 2027, 2089, 2022, 3308, 2055, 1996, 2193, 1997, 7226, 13375, 2941, 8019, 1999, 10470, 2003, 2023, 12689, 1029, 3, 2672, 2061, 2005, 4816, 10470, 2015, 1012, 3, 14442, 4145, 3016, 2229, 1011, 10594, 2007, 28616, 8663, 24422, 2015, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1022, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 17534, 2252, 8778, 1015, 1012, 3, 10669, 1039, 18675, 6074, 2013, 1043, 2000, 5589, 1999, 1037, 3653, 29624, 4887, 7542, 1016, 1012, 3, 7226, 13375, 5630, 3251, 2000, 5138, 1996, 8468, 1017, 1012, 3, 1039, 5176, 6074, 2005, 2037, 26004, 2015, 6074, 2089, 4682, 999, 3, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 1023, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 3291, 14614, 1006, 10262, 2035, 4778, 7226, 13375, 5589, 1999, 1996, 3653, 29624, 4887, 7542, 1007, 1038, 1064, 1043, 1064, 29491, 20116, 3653, 29624, 4887, 7542, 2364, 10470, 1038, 1064, 1043, 1064, 1009, 2487, 24869, 1039, 12040, 2015, 1037, 2275, 1997, 20723, 2241, 2006, 20723, 1999, 1996, 3653, 29624, 4887, 7542, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2184, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 9710, 1011, 9229, 10669, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2340, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2117, 1011, 3976, 10470, 1024, 8778, 1008, 1999, 1996, 4382, 1997, 5846, 1004, 5832, 1010, 3055, 1037, 9710, 1011, 9229, 10669, 6526, 2005, 2117, 1011, 3976, 10470, 2015, 1012, 3, 1015, 1012, 3, 6074, 2013, 1043, 12040, 26004, 2015, 2000, 10669, 1039, 1016, 1012, 3, 2065, 2151, 4005, 4900, 2025, 2000, 5589, 1024, 12040, 1037, 7226, 2005, 2169, 4005, 1045, 2040, 2106, 11322, 2000, 5589, 2007, 3976, 3749, 6819, 1010, 1998, 2203, 1996, 8778, 5443, 8586, 1010, 1014, 1007, 2000, 1039, 1020, 1012, 3, 1039, 3957, 1037, 7909, 1997, 1052, 2000, 2035, 6074, 1999, 1043, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2260, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 20177, 1052, 7868, 6074, 3606, 3993, 1010, 5589, 2635, 2046, 4070, 2069, 1050, 1010, 1064, 1043, 1064, 1010, 1042, 1010, 2009, 2003, 2825, 2005, 1039, 2000, 18422, 2010, 3517, 5114, 1010, 1043, 1039, 12154, 7188, 2119, 1996, 3795, 3284, 1998, 2117, 4048, 5603, 4355, 20723, 2024, 2372, 1997, 1996, 17534, 2252, 4060, 2151, 1055, 1064, 1043, 1064, 1025, 2275, 1052, 1027, 1043, 1013, 1055, 2006, 17626, 1039, 2097, 1024, 2022, 5166, 12042, 2043, 1055, 1027, 1064, 1043, 1064, 2191, 1037, 5618, 2043, 1055, 1028, 1064, 1043, 1064, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2410, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2339, 2023, 2573, 20438, 21778, 1024, 2007, 1052, 1027, 1014, 1010, 1996, 16169, 3627, 1998, 7909, 3627, 2024, 3599, 1996, 2168, 2004, 1999, 2117, 1011, 3976, 10470, 1996, 3115, 6685, 2005, 20438, 21778, 12033, 1052, 2515, 2025, 12530, 2006, 6074, 8170, 2015, 1010, 2061, 2023, 7909, 2515, 2025, 7461, 6074, 9942, 1996, 17534, 2252, 7457, 6074, 3517, 5114, 3599, 1996, 2168, 9560, 2004, 1999, 2117, 1011, 3976, 10470, 2021, 1024, 2035, 7226, 13375, 4374, 2019, 3176, 7909, 1997, 1052, 1028, 1014, 13993, 6577, 2003, 2025, 12367, 8082, 1024, 2035, 7226, 13375, 2013, 1043, 2097, 7226, 2037, 26004, 2015, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2403, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 9420, 1996, 10669, 2015, 4555, 3279, 1999, 1037, 2445, 2461, 2003, 1064, 1043, 1064, 1052, 1027, 1064, 1043, 1064, 1043, 1013, 1055, 1012, 3, 2144, 1055, 2089, 2022, 12098, 16313, 19848, 6588, 2502, 1010, 4555, 3279, 2089, 2022, 2275, 12098, 16313, 19848, 6588, 2485, 2000, 1014, 1039, 7906, 2035, 2021, 2019, 12098, 16313, 19848, 6588, 2235, 12884, 1997, 1043, 8122, 1997, 1996, 10470, 2003, 6560, 6599, 27841, 1024, 2515, 23961, 2907, 2138, 1037, 7226, 4063, 1999, 1043, 2040, 20723, 1014, 2064, 2145, 5114, 1052, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2321, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2034, 1011, 3976, 10470, 1024, 8778, 1037, 9710, 1011, 9229, 10669, 6526, 2005, 2034, 1011, 3976, 10470, 2015, 12040, 1037, 7226, 2005, 2169, 4005, 1045, 2040, 2106, 11322, 2000, 5589, 2007, 3976, 3749, 1038, 1006, 1042, 1010, 1050, 1010, 6819, 1007, 1010, 1998, 2203, 1996, 8778, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2385, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 20177, 1052, 7868, 6074, 3606, 3993, 1010, 5589, 2635, 2046, 4070, 2069, 1050, 1010, 1064, 1043, 1064, 1010, 1042, 1010, 2009, 2003, 2825, 2005, 1039, 2000, 18422, 2010, 3517, 5114, 1010, 1043, 1039, 12154, 1038, 1006, 1042, 1010, 1050, 1010, 1058, 2487, 1007, 1011, 1038, 1006, 1042, 1010, 1049, 1010, 1058, 2487, 1007, 7188, 1996, 16452, 3284, 7226, 4063, 2003, 1037, 2266, 1997, 1043, 4060, 2151, 1055, 1064, 1043, 1064, 1025, 2275, 1052, 1027, 1043, 1013, 1055, 2004, 2077, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2459, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2339, 2023, 2573, 20438, 21778, 1024, 2007, 1052, 1027, 1014, 1010, 1996, 16169, 3627, 1998, 7909, 3627, 2024, 3599, 1996, 2168, 2004, 1999, 2034, 1011, 3976, 10470, 1039, 22164, 1037, 11449, 7337, 1052, 2515, 2025, 12530, 2006, 6074, 8170, 2015, 1010, 2061, 2023, 7909, 2515, 2025, 7461, 6074, 9942, 1996, 17534, 2252, 7457, 6074, 3517, 5114, 3599, 1996, 2168, 9560, 2004, 1999, 2034, 1011, 3976, 10470, 2021, 1024, 2035, 7226, 13375, 4374, 2019, 3176, 7909, 1997, 1052, 1028, 1014, 13993, 6577, 2003, 2025, 12367, 8082, 1024, 2296, 4005, 1999, 1043, 2097, 3582, 1996, 14442, 5656, 1996, 17534, 2252, 6666, 6074, 2648, 1043, 2037, 14442, 20723, 2024, 4359, 18558, 3630, 22924, 8395, 1010, 5003, 14083, 13149, 2102, 2324, 27439, 4710, 1010, 2251, 2410, 1010, 2541, 2060, 17534, 2252, 16744, 4921, 2063, 2649, 1024, 2117, 1011, 3976, 1006, 1013, 2887, 1007, 2034, 1011, 3976, 1006, 1013, 3803, 1007, 2060, 16744, 1024, 2236, 10595, 2007, 26004, 2015, 4567, 2013, 1037, 10713, 2275, 1050, 5903, 3416, 1011, 3976, 10470, 2015, 2005, 7681, 5350, 2048, 5903, 10470, 2015, 2005, 21053, 5350, 2], "src_sent_labels": [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], "segs": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "clss": [0, 23, 81, 102, 131, 147, 167, 201, 245, 294, 333, 383, 435, 470, 487, 509, 537, 552, 590, 602, 636, 679, 722, 779, 833, 859, 880, 916, 931, 948, 973, 1003, 1050, 1104, 1147, 1182, 1202, 1258, 1274, 1297, 1320, 1369, 1410, 1440, 1465, 1495, 1547, 1570, 1606, 1665, 1683, 1706, 1766, 1816, 1824, 1843, 1877, 1929, 1962, 1977, 2018, 2046, 2084, 2137, 2175, 2229, 2271, 2302, 2331, 2349, 2378, 2400, 2420, 2458, 2470, 2497, 2512, 2560, 2574, 2590, 2644, 2657, 2677, 2707, 2765, 2795, 2854, 2896, 2950, 2992, 3013, 3074, 3117, 3149, 3210, 3258, 3271, 3297, 3325, 3361, 3391, 3445, 3497, 3547, 3579, 3631, 3666, 3686, 3711, 3720, 3759, 3775, 3791, 3819, 3859, 3869, 3888, 3914, 3935, 3988, 4018, 4070, 4102, 4149, 4179, 4219, 4247, 4283, 4320, 4340, 4393, 4408, 4442, 4458, 4467, 4487, 4506, 4539, 4559, 4574, 4632, 4661, 4714, 4727, 4758, 4808, 4828, 4858, 4913, 4958, 4995, 5008, 5023, 5048, 5070, 5079, 5099, 5115, 5127, 5147, 5184, 5243, 5262, 5282, 5304, 5349, 5365, 5385, 5413, 5464, 5496, 5554, 5603, 5640, 5686, 5709, 5748, 5803, 5818, 5878, 5900, 5912, 5928, 5952, 5971, 6015, 6025, 6043, 6080, 6099, 6130, 6168, 6211, 6242, 6299, 6344, 6366, 6415, 6450, 6468, 6482, 6508, 6545, 6577, 6624, 6675, 6706, 6761, 6791, 6836, 6854, 6889, 6919, 6968, 7001, 7036, 7059, 7086, 7106, 7161, 7193, 7240, 7271, 7329, 7353, 7394, 7403, 7438, 7468, 7503, 7546, 7567, 7583, 7608, 7655, 7668, 7697, 7724, 7745, 7773, 7814, 7861, 7886], "src_txt": ["we introduce a class of mechanisms , called bidding clubs , for agents to coordinate their bidding in auctions .", "in a bidding club agents first conduct a \" pre-auction \" within the club ; depending on the outcome of the pre-auction some subset of the members of the club bid in the primary auction in a prescribed way ; and , in some cases , certain monetary transfers take place after the auction .", "bidding clubs have self - enforcing collusion properties in the context of second - price auctions .", "we show that this is still true when multiple auctions take place for substitutable goods , as well as for complementary goods .", "we also present a bidding club protocol for first - price auctions .", "finally , we show cases where bidding clubs have self - enforcing cooperation protocols in arbitrary mechanisms .", "with the exploding popularity of auctions on the internet and elsewhere has come increased interest in systems to assist ( software or human ) agents bidding in such auctions .", "most of these systems have to date done little more than aggregate information from multiple auctions and present it to the user in a convenient fashion ( e.g. , www.auctionwatch.com ) .", "there is now beginning to emerge a second generation of systems which actually provide bidding advice and automation services to bidders , going beyond the familiar proxy - bidding feature prevalent in online auctions to the realm of bona - fide decision support .", "this paper looks even beyond such systems , which are geared towards assisting a single bidder , and presents a class of systems to assist a collection of bidders , \" bidding clubs \" .", "the idea is similar to the idea behind \" buyer clubs \" on the internet ( e.g. , www.merkata.com and www.mobshop.com ) , namely to aggregate the market power of individual bidders .", "the new twist is that whereas in a buyer club there is a perfect alignment of the various buyers ' interests ( since there the more buyers join in a purchase the lower the price for everyone ) , in a bidding club there is a more complex strategic permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page .", "to copy otherwise , to republish , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee .", "ec ' 00 , october 17 - 20 , 2000 , minneapolis , minnesota .", "copyright 2000 acm 1 -58113-272-7 / 00/0010 .", "$ 5.00 relationship among them , and the bidding club rules must be designed accordingly.here 's a simple example .", "consider an auction with a single seller , and six potential buyers .", "assume that three of the potential buyers - a , b and c , with corresponding ( secret ) valuations v1 > v2 > v3 - attempt to coordinate their bidding .", "assume the auction is a first - price auction .", "under well known assumptions from the auction literature , it would be the interest of each bidder to bid exactly 5/6 of his true value in the auction .", "thus a would end up with a surplus of v1 / 6 ( if he wins the auction ) or 0 ( if he does n't ) , and b and c with a surplus of 0 .", "is there some pre-agreement a , b and c can make that will cause all of them to come out of the auction at least as well off , and some of them strictly better off ?", "one could na \u00a8 \u0131velyna \u00a8 \u0131vely say that they would each reveal their valuations to one another agreeing that only the highest would go on to the auction ; a would therefore be the one going on , and when he bids in the auction he would bid lower than 5v1 / 6 ( a bid of 3v1 / 4 will work , given the above - mentioned assumptions ) , and thus increase his expected surplus .", "the obvious flaw in this mechanism is that a , b and c will have incentive to lie in this initial phase ; this could still be true if a were obliged to pay b and c a certain amount if they sat it out and he won the auction.the above protocol is a simple instance of the class bidding clubs .", "in general , given some primary mechanism ( typically , an auction ) , a bidding club protocol is as follows : 1 .", "some set of bidders are invited to join the bidding club , and informed of its rules .", "the other bidders are not made aware of the existence of the bidding club ; we assume here that they are not even aware of the possibility of its existence .2 .", "the bidders have the freedom to join the club or not .", "if they do it is assumed that they are guaranteed to follow its rules .", "1rules , how the members should behave in the primary mechanism based on the information they all supply .5 .", "the coordinator may also determine ( and enforce ) additional monetary transfers of the club members , based on the results of the main mechanism .6 .", "the coordinator acts only as a representative of bidders.it may seem natural to ask why a coordinator should be willing and / or able to function as a trusted third party , without attention having been paid to its own incentives .", "we believe that it is best not to see the coordinator as a party ( with interests of its own ) at all ; rather , we conceive of a coordinator as a software agent which is able to act only according to its ( commonly - known ) programming .", "it is therefore possible for the coordinator to act reliablyand for agents to be confident that the coordinator will act reliably - even in cases where the coordinator stands to gain nothing through its efforts .", "we do assume that coordinators should not cost money to operate - all of our coordinators are budget - balanced except for one that ( unavoidably ! )", "finally , we have often been asked about the legal issues surrounding the use of bidding clubs .", "while this is an interesting and pertinent question , it exceeds both our expertise and the scope of this paper.it turns out that , while the simple mechanism outlined earlier fails , a more sophisticated one will ensure that b and c do not participate in the primary auction , and that a is therefore assured higher expected payoff in the auction .", "more generally , the contributions of this paper are as follows : 1 .", "we present a protocol for self - enforcing cooperation in second - price auctions for substitute goods .2 .", "we present a protocol for self - enforcing cooperation in second - price auctions for complementary goods .3 .", "we present a protocol for self - enforcing collusion in first - price ( as well as dutch ) auctions , in which only some of the agents coordinate their activities , and which does not make any use of monetary transfers .4 .", "we present a protocol for self - enforcing cooperation in general auctions and economic mechanisms , when the agents ' types ( e.g. valuations for goods ) are taken from a finite set .", "the strategic interaction among self - interested agents is a primary topic of study in microeconomics [ 4 ] and game theory [ 1 ] .", "in particular , the design of protocols for strategic interactions is the subject of the field termed mechanism design [ 1 ] .", "the role of a mechanism ( in particular , auction ) designer is to define a game whose equilibrium strategies are desirable in some respect or another .", "thus , the design of a bidding club consists of taking a given mechanism - the primary auction - and turning it into a more elaborate one , namely one with an added first stage in which a subset of the players play in some newly - designed game ( as well as some additional rules regarding behavior in the primary auction and possible side payments after the auction ) .", "research on strategic aspects of multi-agent activity in artificial intelligence has grown rapidly in the recent years .", "this work has concentrated on the design of protocols for agents ' interaction [ 7,3,9 ] , and shares much in common with work on mechanism design in economics .", "many principles and ideas grew up from the mechanism design literature , and have been adapted to the ai context.although the study of deals among agents has received much attention in the ai literature ( see e.g. [ 7 ] ) , and although the study and design of contracts is central to information economics [ 4 ] ( and received much attention in the recent ai literature [ 8 ] ) , the literature on cooperation under incomplete information in auctions and trades is quite limited .", "in particular , the literature on collusion in auctions is somewhat spotty .", "it is still too broad to give a complete overview of it , and the bulk of it is informal .", "in the formal literature on the topic , the results are quite specific , and certainly do not apply in settings of parallel auctions ( with either substitutability or complementarity among goods ) , first - price auctions without side - payments , and general mechanisms , which are the focus of our technical results .", "the closest result from the literature of which we are aware is by graham and marshall [ 2 ] , who present a protocol for self - enforcing collusion by a subset of the participants of a ( single - good ) second - price auction .", "we discuss this result below .", "additional related study of collusion in auctions can be found in [ 5 ] .", "we now present some preliminaries of auction theory , as well as a description of the classical auction model discussed in the paper and our parallel auction model .", "an auction procedure for selling a single good to one of n potential participants , n = { 1 , 2 , . . . , n } is characterized by 4 parameters , m , g , c , d : m is the set of possible messages a participant may submit ; g = ( g1 , g2 , . . . , gn ) , gi : m n \u2192 [ 0,1 ] , is an allocation function , where gi determines the probability the winner of the auction will be agent i ; c : m n \u2192 r determines the payment by the winner of the auction ; d is a participation fee .", "it is assumed that agents may decide not to participate in an auction.in order to analyze auctions we have to discuss the information available to the participants .", "we assume the independent private values model , with no externalities .", "each agent i is assumed to have a valuation vi selected from the interval of real numbers [ 0,1 ] or from a finite domain , which captures its maximal willingness to pay for the good .", "we further assume that this valuation is selected from the uniform distribution on the interval [ 0,1 ] or on a finite domain .", "for ease of presentation we will assume the continuous case , excluding the section on general mechanisms , where the assumption that the set of possible valuations is finite is required for our result .", "if agent i obtains the good and is asked to pay p , as well as a participation fee d , then its utility , ui , is given by vi \u2212 p \u2212 d ; otherwise , if it is not assigned any good then its utility is \u2212 d ; if the agent does not participate in the auction then its utility is 0 .", "the above defines a bayesian game , where a strategy for an agent is a decision about the message to be sent given its valuation , and the payoffs are determined as above .", "the solution of this game is given by computing a ( bayesian nash ) equilibrium of it : a joint strategy of the agents such that it is irrational for each agent to deviate from its strategy , given that all of the other agents stick to their strategy .", "given an equilibrium strategy b = ( b1 , b2 , . . . , bn ) , one can compute li ( b ) , the expected utility of agent i in equilibrium of the corresponding game .", "in a case where there is more than one equilibrium li ( b ) is taken as the lowest expected utility over all the equilibria .", "further discussion of equilibrium uniqueness is omitted from this paper.one of the best - known auction mechanisms is the secondprice auction .", "in such an auction , each participant submits a bid in a sealed envelope .", "the agent with the highest bid wins the good and pays the amount of the second - highest bid , and all other participants pay nothing .", "in a case of a tie , the winner of the auction is selected randomly , with uniform probability .", "if there is no participation fee then participation in second - price auctions is always rational .", "truth revealing , i.e. bi ( vi ) = vi , is an equilibrium of the second - price auction ( in fact , it is an equilibrium in dominant strategies ) .", "another popular auction is the first - price auction .", "these auctions are conducted similarly to second - price auctions , except that the winner pays the amount of his own bid .", "the equilibrium analysis of first - price auctions is quite standard .", "for example , if valuations are selected according to the uniform distribution on [ 0,1 ] and there is no participation fee , then the strategy of agent i in equilibrium is bi ( vi ) = n \u2212 1 n vi .", "more generally , several auctions may be conducted in parallel .", "we first consider the case of two parallel auctions of similar goods .", "a parallel auction is given in this case by a pair a = ( a1 , a2 ) , where ai = n , g , c , d , ( i = 1 , 2 ) as before.one such problem is a parallel auction for substitute goods , in which the set of possible buyers n is shared among a1 and a2 , and each agent 's valuation for the pair of goods { g1 , g2 } equals its valuation for g1 which equals its valuation for g2 .", "agent i s strategy consists of two parts : 1 .", "it selects at most one of the auctions , in which it will participate .2 .", "it submits a bid in the selected auction.parallel auctions for substitute goods define a bayesian game in a natural way .", "for example , if the auctions are second - price auctions , then an appropriate equilibrium of the corresponding parallel auction is as follows : each agent randomly selects one of the auctions , and sends his actual valuation as his bid there.another type of parallel auction is the parallel auction for complementary goods .", "here we have two similar auctions , e.g. second - price auctions , for two different goods g1 and g2 .", "the set of agents n = n1 \u222a n2 \u222a np consists of three parts : \u2022 n1 are agents that are interested only in g1 \u2022 n2 are agents that are interested only in g2 \u2022 np are agents that have valuation 0 for g1 and for g 2 , but their valuation for the pair { g1 , g2 } is uniformly distributed on the interval [ 0,2 ] .", "for ease of exposition we will assume that we can distinguish whether an agent is from group n1 , n2 , or np , and that the agents in np have extremely high negative utility for losses .", "this second assumption means that an agent will never submit bids in both auctions ; notice that we assumed that an agent who is interested in obtaining a pair of goods has a valuation of 0 for getting only one of them , and therefore by bidding in two auctions the agent may end up getting and paying for only one good .", "hence , we will assume that the strategies available to the agents are as in the case of substitute goods.we will rely on the notion of surplus in our evaluation of coordinators for parallel auctions .", "the surplus of an allocation is defined as the sum of agents ' valuations for that allocation .", "for example , in a parallel auction for substitute goods the surplus of an allocation that assigns good g1 in auction 1 to agent i , and assigns good g2 in auction 2 to agent j , is v1 ( g1 ) + v2 ( g2 ) ( i.e. , the sum of these agents ' valuations for the goods they are assigned ) .", "let g \u2282 n , where 1 < | g | < n. w.l.o.g let the elements of g be { 1 , 2 , . . . , | g | } .", "given an auction a , denote by \u03c6i ( a ) ( 1 \u2264 i \u2264 n ) the set of strategies available to agent i \u2208 n .", "given a set of coordinator messages , mc , which we take w.l.o.g to be r + , a ( bidding club ) coordinator is a pair of functionsc ( a , g ) = ( t1 ( a , g ) , t2 ( a , g ) ) , where t1 ( a , g ) : m | g | c \u2192 \u03c6i ( a ) | g | and t2 ( a , g ) = ( t c 1 , t c 2 , . . . , t c | g | ) , t c i : m | g | c \u00d7 m n \u2192 r.namely , a coordinator is a mechanism that asks the agents in g for some information and decides on the way they will behave in a ; this is determined by the function t1 ( a , g ) .", "in addition , following the decision made by t1 ( a , g ) , and given the messages sent in the main auction a by members of n \\ g , an additional payment t c i may be imposed on agent i .", "the payment can be negative , positive , or zero .", "mc contains the null message e that tells the coordinator that the corresponding agent is not willing to participate in the coordination activity .", "this agent will be free to participate in the auction by itself , and will not be asked to make any payments to the coordinator .", "a key assumption is that participants in n \\ g are unaware of even the possibility of the existence of a coordinator , and that they act according to an equilibrium of a .", "we denote the game obtained by concatenating c ( a , g ) and a , by \u00af c ( a , g ) .", "for every agent i , let li ( a ) be the agent 's expected utility in an equilibrium of a , and let li ( \u00af c ( a , g ) ) be the agent 's expected utility in an equilibrium of \u00af c ( a , g ) .", "given an auction a , and a g \u2282 n as before , we will say that a participation - preserving coordinator for g in a exists , if there exists c ( a , g ) , such that every agent i \u2208 g that would have had participated in a will also participate in c ( a , g ) ( in equilibrium of \u00af c ( a , g ) ) .", "we say that a utility - improving coordinator exists if there exists a participation - preserving coordinator , and li ( \u00af c ( a , g ) ) > li ( a ) ( i.e. participation in the bidding club is beneficial ) .", "the existence of a utility - improving coordinator for an auction setup implies a self - enforcing cooperative strategy for a group of agents.definition 3 .", "we say that a surplus - improving coordinator for g in a exists if there exists a c ( a , g ) that is participation - preserving , and the expected surplus of the members of g in \u00af c ( a , g ) is greater than their expected surplus in a.when dealing with parallel auctions in sections 5.2 and 5.3 , we will be interested in surplus - improving coordinators .", "besides the observation that neither concept implies the other , the discussion of the connection between utilityimproving and surplus - improving coordinators is left to the full paper .", "the case of collusion in second - price auctions is discussed in [ 2 ] .", "the following theorem may be deduced from this work ; we present the result here for the sake of completeness .", "consider a second - price auction .", "in the case of a secondprice auction a group of buyers may wish to avoid paying a participation fee , or alternatively bidders who will certainly lose may want to receive advance notice .", "as it turns out , such behavior can be obtained : theorem 1 .", "there exists a utility - improving coordinator for second - price auctions .", "in the case of a second - price auction , no assumptions on the distribution of the agents ' valuations need to be made .", "we will assume that there is a participation fee d > 0 , and show a coordination protocol that enables the members of the group g who do not have the highest valuation to avoid paying d .", "we use the following protocol : 1 .", "the agents in g are asked to submit their valuations to the coordinator .2 .", "let v1 and v2 denote the highest and second highest valuations , announced by agents 1 and 2 , respectively .", "only agent 1 is represented in the main auction , and his bid there will be v1 .", "z , and z < v2 , then agent 1 will pay v2 \u2212 z to the coordinator.we show that if the agents participate in the pre-auction and reveal their true valuations there , then this cooperation will be beneficial to them .", "the agent with the highest valuation can not lose , because his behavior and expected gain will be as in the case where there was no coordinator .", "the other agents will gain due to the fact they wo n't need to pay the participation fee.consider now the agent i \u2208 g with the highest valuation , and assume that the other agents in g are truthrevealing agents .", "given that truth - revealing is an equilibrium of second - price auctions , agents in n \\ g are taken to be truth - revealing as well .", "given that if the agent i wins the main auction , then he pays exactly the highest valuation in n \u2212 { i } ( because he will pay the maximum of the auction 's second - highest bid and v2 ) .", "standard second - price auction analysis yields that it is irrational for i to deviate from truth - revealing to the announcement of a higher valuation .", "if agent i was willing to participate in the main auction then clearly he does not wish to lose the pre-auction and therefore announcing a lower valuation than his actual one is irrational too .", "clearly , every agent j = i , j \u2208 g does not have any incentive to cheat if the others are truth - revealing .", "he can only lose if by cheating he will be chosen to participate in the main auction.it is easy to see that our result holds for japanese auctions as well .", "in a japanese auction an auctioneer starts with a low asking price , and continuously increments this price as long as are still multiple agents willing to pay the current price .", "once only a single agent remains , he will get the good for the current asking price .", "the fact our result holds also for japanese auctions is immediately implied by the fact that in both japanese auctions and second - price auctions the good is sold to the agent with the highest valuation , at a price that equals the second - highest valuation .", "in this section we deal with parallel auctions of substitute goods .", "here the idea of the coordinator is to ensure that the two agents with the highest valuations in the group g will compete for different goods rather than among themselves .", "this will enable to improve upon the surplus of the members of g .", "we can show : theorem 2 .", "there exists a surplus - improving coordinator for parallel second - price auctions of substitute goods .", "the agents in g are asked to submit their valuations to the coordinator .2 .", "let v 1 , v 2 , and v3 denote the highest , the second highest , and the third highest valuations which have been announced , respectively .", "only the agents with the highest and second highest valuations will participate in the main auction .", "the agents will be randomly assigned to different auctions .4 .", "if an agent gets the object in auction ai for the price y < v3 , then he will pay v3 \u2212 y to the coordinator.it is clear that if all agents obey the coordinator 's protocol , and send their actual valuations to the coordinator , then the agents will improve upon their surplus .", "in equilibrium agents will want to participate ; for example , consider agents 1 and 2 , having the two highest bids submitted to the coordinator .", "as a result of the coordination the first agent will have a lower expected payment , since he will always pay some amount less than v2 , while the second agent will have a greater chance of winning , since he will never be outbid by agent 1 .", "we now show that truth - revealing is an equilibrium .", "consider an agent i1 , with the highest valuation in g , v1 , and assume that the rest of the agents are truth - revealing .", "if agent 1 reports a valuation higher than v1 , and obtains as a result of this a good he could not obtain otherwise , then it must be the case that his payment is higher than his valuation , which makes that deviation irrational .", "it is clear that reporting on a valuation lower than v 1 does not help agent 1 .", "consider an agent i2 , with the second - highest valuation in g , v2 , and assume the other agents are truth - revealing .", "if the agent reports a higher valuation than v1 then he will be the highest - ranking bidder in the pre-auction rather than the second highest - ranking , but this will not benefit him as the top two bidders are assigned to auctions randomly .", "the rest of the analysis is the same as for i1.consider an agent i3 , with the third - highest valuation in g , v3 , and assume the other agents are truth - revealing .", "if the agent reports a valuation that causes it to gain the preauction , then its payment will be at least v2 > v3 , which makes such deviation irrational .", "similar analysis will hold for agents with lower valuations .", "in this section we deal with parallel auctions for complementary goods .", "our aim is to allow the participants in g to obtain a higher surplus than what they could obtain without the coordinator .", "we assume that in g we have at least two representatives of n1 , n2 and np .", "we can show : theorem 3 .", "there exists a surplus - improving coordinator for parallel second - price auctions of complementary goods .", "let 0 < k << 1 be a commonly - known constant .", "we will use the following coordinator 4 : 1 .", "the coordinator asks the agents that are interested in the single goods for their valuations 2 .", "the coordinator selects two agents , s1 and s2 , who reported the highest valuations for goods g1 and g2 , v1 and v2 respectively .3 .", "if any agent from n1 s n2 declined to participate , the coordinator submits bids in the appropriate auctions for all agents in n1 s n2 who did elect to participate , with a price offer equal to the agents ' stated valuations , and the protocol is complete .", "otherwise , if all agents elected to participate , we proceed to step 4.4 .", "the coordinator announces v1 and v2 to all of the participants in g. 5 .", "the coordinator asks the agents that are interested in the pair of goods for their valuations .6 .", "the coordinator randomly selects an agent , s p , who reported a valuation vp for the pair of goods , such that v1 + v2 + 2k < vp ( if such an agent exists ) .7 .", "the coordinator bids v1 in a1 , and v2 in a2 .", "4 this requires a quite straightforward modification to the definition of coordinators , which we skip .", "namely , a coordinator can run a multi-stage game instead of the function t1 ( a , g ) .8 .", "if the coordinator wins both auctions , and an agent sp exists , then sp will get the pair of goods and pay vsec 1 + vsec 2 to the coordinator , where vsec i is the secondhighest bid in ai .", "agent sp will also pay agent i ( i = 1 , 2 ) k + max ( 0 , v i \u2212 vsec i ) .9 .", "if the coordinator only wins auction i , or if the coordinator wins both auctions but there does not exist an agent sp , then agent si gets the good and pays vsec i to the coordinator.consider an equilibrium of the corresponding \u00af c ( a , g ) , and an agent s i \u2208 ni \u2229 g ( i = 1 , 2 ) .", "it is clear that in equilibrium s i will participate in c ( a , g ) and that the submission of a valuation which is at least as high as s i 's valuation by s i dominates the submission of a lower valuation .", "this is due to the fact that by submitting a valuation that is lower than his actual valuation an agent can only lose , given that this is a second - price auction .", "the agent can not lose by participating in the pre-auction , since it is guaranteed to get at least the difference between its stated valuation and the secondhighest bid , if its stated valuation is the highest .", "moreover , if agent sp wins the good then s i may also get a payment of k > 0 .", "for this reason , and also because vsec i may be less than the highest rejected bid from ni t g , truth revelation will not be in the best interest of agent s i .", "instead , he will submit a bid that exceeds his true valuation.given the above , an agent sp , who has interest in the pair of goods will be willing to participate in the coordinator 's protocol if v1 + v2 + 2k < vp .", "note that all agents are aware of k before placing their bids .", "it is easy to check that it is irrational for s p to send a message that could win the pre-auction if its valuation is smaller than v1 + v2 + 2k , and likewise it is irrational for sp to falsely submit a valuation smaller than v1 + v2 + 2k .", "otherwise the amount submitted by sp is irrelevant , as the coordinator chooses randomly between eligible agents in np .", "thus , expected surplus is increased by this protocol .", "there exists a utility - improving coordinator for first - price auctions .", "recall that we assume that the agents ' valuations are drawn uniformly from the interval [ 0,1 ] .", "our protocol can be easily modified to deal with other distributions on the agents ' types .", "let m be the number of agents who will participate in the main auction , who are not members of the bidding club ( and who are thus assumed not to be aware even of the possibility of its existence ) .", "we use the following protocol : 1 .", "invite the agents in g to submit their valuations to the coordinator .2 .", "if any agent declines to participate , submit bids for all agents that did elect to participate , with a price offer of n \u2212 1 n vi , and the protocol is complete .", "otherwise , if all agents elected to participate , we proceed to step 3.3 .", "let the two agents with the highest reported valuations be agents 1 and 2 , with reported valuations v1 and v2 respectively .4 .", "if v 1 n n < v2 m \u00b7 ( v1 \u2212 v2 ) , submit a bid only for agent 1 , with a price offer of v2 .5 .", "otherwise , submit bids for all agents i \u2208 g , with price offer n \u2212 1 n vi.first , we show that if the agents reveal their true valuations then beneficial cooperation ensues .", "it is clear that the only agent who can gain is the agent with the highest valuation , v1 , while the other agents do not lose .", "note that v 1 n n is the expected utility of agent 1 at the equilibrium in the original mechanism , while v2 m \u00b7 ( v1 \u2212 v2 ) is his expected utility if he submits a bid of v2 in a modified mechanism with m + 1 participants .", "v1 benefits because the protocol is tailored specifically to him : the coordinator offers agent 1 the choice of participating in the original mechanism at its equilibrium , or of eliminating some bidders from the auction and bidding v2 .", "in every situation , the coordinator selects the alternative that agent 1 would prefer , given his stated valuation .", "( note that there exists a set with non-zero measure of values of v1 and v 2 satisfying the condition in step 3 of the protocol ; the demonstration of this fact is left to the full version of the paper . )", "at the same time , no bidder suffers from being eliminated : each eliminated bidder is assured that a bid will be placed in the main auction exceeding his valuation .", "now we show that the protocol leads the agents to reveal their true valuations .", "as a result , participation will be rational for all agents .", "to show that truth - revelation is an equilibrium , assume that all but one of the agents submit their true valuations .", "notice that since only agent 1 can profit from the bidding club , the only reason that any agent other than agent 1 would lie is to become the agent with the highest valuation .", "however , this agent would then either be represented in the original mechanism above the equilibrium , or be made to bid v1 , more than his valuation .", "agent 1 has no reason to lie because the mechanism is tailored exactly to him , as described above.note that , paradoxically , the bidding club can also benefit bidders who do n't even know of its existence !", "this is due to the fact that in equilibrium of first - price auctions , bids are decreasing as a function of the number of participants , and we assume that all agents are made aware of the number of bidders participating in the main auction .", "5 bidders who are unaware of the bidding club will thus submit lower bids if the bidding club eliminates bidders than if it does not .", "we do not analyze the case where bidders who are unaware of the bidding club are aware of the total number of bidders including those eliminated by the coordinator , since this knowledge would lead them to knowledge of the bidding club 's existence ( when they observed that a smaller number of bids were actually entered in the auction ) , violating a key assumption of our model .", "5 we assume that the number of bidders participating in the auction is determined according to the number of distinct bidders wanting to submit bids .", "thus if the coordinator places only one bid in the main auction then bidders who are unaware of the bidding club will also be unaware of bidders who were eliminated in the bidding club 's pre-auction .", "it is easy to see that our result holds for dutch auctions as well .", "in a dutch auction the auctioneer starts with a high asking price , and then continuously decrements this price until an agent claims the good for the current price .", "the fact our result holds also for dutch auctions is immediately implied by the strategic equivalence between first - price auctions and dutch auctions .", "the first - price and the second price auctions are two representative auctions , but many other auctions , as well as other economic mechanisms ( various types of trades , negotiations , etc. ) , are also discussed in the literature .", "in this section we show that utility - improving coordinators exist for many other related contexts as well.general mechanisms are usually analyzed using bayesian games .", "in a bayesian game each agent has a set of possible types , and an agent 's strategy is a decision of his action as a function of his type .", "the actual type of the agent is known to him , and is selected from a commonly known distribution function .", "the payoff of each agent is a function of both the joint strategy of the agents and the particular type of the agent .", "in the context of auctions , the types of the agents refer to their valuations .", "the definition and analysis of equilibrium strategies for general mechanisms will therefore be similar to what we described in section 3 for the case of auctions.in order to prove results that are general and hold for any mechanism , researchers have used the following observation , which is a direct implication of the definition of an equilibrium of a bayesian game .", "it turns out that it is enough to consider only mechanisms such that in the equilibrium of the corresponding bayesian game the agents will reveal their true types .", "according to this observation , termed the revelation principle , it is natural to restrict our attention to ( main ) mechanisms which make a decision based on true information supplied by the agents.this brings us to the following general problem .", "assume that the agents ' types are selected from a finite set , and that the agents are about to participate in a given truth revealing mechanism m .", "assume that the equilibrium of the game associated with that mechanism leads to a non pareto - optimal outcome for at least one tuple of agent types ( i.e. for this tuple of types the agents would better perform a joint strategy that is different from the equilibrium strategy ) .", "can a coordinator be used in order to make a cooperative ( beneficial and incentive compatible ) deal among the agents ?", "in the sequel , we assume that the valuations of the agents are taken from v = { v1 , . . . , vm } where vi < vi +1 for every i .", "we can show : theorem 5 .", "consider a truth revealing mechanism with unique strict bayesian equilibrium , that leads to a non paretooptimal outcome for at least one tuple of agent types .", "then , a utility - improving coordinator exists.basic idea behind proof : each agent will be invited to send his valuation to the coordinator .", "the coordinator will calculate a tuple of other valuations that would benefit the agents ( assuming they reported their actual valuations ) , if submitted to the main mechanism .", "notice that while an agent would lose in equilibrium by deviating from truthrevelation in the original mechanism , sending true valuations is not necessarily an equilibrium if the coordinator submits the new tuple .", "however , we can show that there exists a useful coordinator which also maintains incentive compatibility .1 .", "invite the agents to submit their valuations to the coordinator .2 .", "if any agent declines to participate , submit the declared valuations of all participating agents to the main mechanism .3 .", "otherwise , submit the new tuple of valuations to the main mechanism on behalf of all agents with probability p ; with probability 1 \u2212 p submit the valuations reported by the agents.the probability p is determined as follows .", "consider an agent i , who made the announcement vi .", "first , we can compute the maximum expected gain , g i , that i could achieve by submitting a valuation v i = vi .", "second , we can compute i 's smallest expected loss in the original mechanism , li , if vi is a false valuation .", "notice that li is positive , given the assumption that truth - revelation is a strict nash equilibrium .", "in this paper we have presented the notion of bidding clubs and its use in obtaining self - enforcing cooperation in classical auction setups .", "we have presented protocols for parallel second - price auctions for substitutable and complimentary goods , for first - price auctions for single goods , and for general mechanisms under various assumptions .", "our work can be considered as a first attempt to formalize \" strategic buyers ' clubs \" , where participants may cheat about their valuations and so the club 's protocol must be designed carefully enough to account for this possibility .", "the study of bidding clubs is complementary to the rich work on efficient market design [ 4,1,6 ] .", "bidding clubs take the agents ' perspective in improving their situation in existing markets , rather than taking a center 's perspective on optimal , revenue maximizing market design ."], "tgt_txt": "bidding clubs a subset of a talk given at infonomics workshop , maastricht kevin leyton - brown yoav shoham moshe tennenholtz infonomics workshop , maastricht 2friday , july 13 , 2001 what kind of intelligent system could help bidders in an auction ?<q>proxy bidders ( ebay , etc. ) really just transform english into 2nd - price auction automation aggregation of information from different auctions bidding advice , decision support bidding clubs instead of helping one user , help a group aggregate bidders market power unlike buyer clubs , bidders interests not aligned self - enforcing collusive agreement : increase expected utility infonomics workshop , maastricht 3friday , july 13 , 2001 collusion example imagine a first - price auction with 6 bidders , 3 of whom decide to collude in advance is there a pre-agreement that can benefit some , but penalize none ?<q>nave proposal : each bidder submits her valuation the two low bidders drop out the bidder with the highest valuation bids lower in the main auction bidders have an incentive to lie in the pre-auction !<q>this is true even if the high bidder pays the other two to drop out infonomics workshop , maastricht 4friday , july 13 , 2001 bidding clubs * with y. shoham , m. tennenholtz ( ec00 ) bidders : n = { 1 , 2 , , n } : a set of bidders who will participate in an auction , a g n : a set of bidders who are invited to participate in a pre-auction coordinator c : can c hold a pre-auction that will benefit some of g and penalize none ?<q>infonomics workshop , maastricht 5friday , july 13 , 2001 assumptions : coordinator the coordinator : invites some subset of bidders to participate non-binding invitation may enforce payments from , between bidders can not cost money to operate acts only as a representative of bidders why can it be trusted to act reliably ?<q>one way of looking at it is that c combines with a to form a new mechanism cs behavior is fully specified , common knowledge infonomics workshop , maastricht 6friday , july 13 , 2001 assumptions : bidders ipv model , no externalities iid from distribution f first - price auction equilibrium bid : b ( f , n , v ) f regular : b ( f , n +1 , vi ) > b ( f , n , vi ) , n 2 infonomics workshop , maastricht 7friday , july 13 , 2001 deviation from standard gt setting uninvited agents are not aware of the possibility of the existence of a coordinator they believe that each bid placed corresponds to a single bidder they may be wrong about the number of bidders actually participating in auction is this realistic ?<q>maybe so for electronic auctions .<q>equilibrium concept bayes - nash with misconceptions infonomics workshop , maastricht 8friday , july 13 , 2001 bidding club protocol 1 .<q>coordinator c invites agents from g to participate in a pre-auction 2 .<q>bidders decide whether to accept the invitation 3 .<q>c asks agents for their valuations agents may lie !<q>infonomics workshop , maastricht 9friday , july 13 , 2001 problem illustration ( assuming all invited bidders participate in the pre-auction ) b | g | b1 cs pre-auction main auction b | g | +1 bn c submits a set of bids based on bids in the pre-auction infonomics workshop , maastricht 10friday , july 13 , 2001 utility - improving coordinator infonomics workshop , maastricht 11friday , july 13 , 2001 second - price auction : protocol * in the spirit of graham & marshall , 1987 a utility - improving coordinator exists for second - price auctions .<q>1 .<q>agents from g submit valuations to coordinator c 2 .<q>if any agent chose not to participate : submit a bid for each agent i who did elect to participate with price offer vi , and end the protocol vsec , 0 ) to c 6 .<q>c gives a payment of p to all agents in g infonomics workshop , maastricht 12friday , july 13 , 2001 calculating p assume agents truthful , participate taking into account only n , | g | , f , it is possible for c to calculate his expected gain , g c gains whenever both the global highest and secondhighest bids are members of the bidding club pick any s | g | ; set p = g / s on expectation c will : be budget balanced when s = | g | make a profit when s > | g | infonomics workshop , maastricht 13friday , july 13 , 2001 why this works incentive compatibility : with p = 0 , the allocation rule and payment rule are exactly the same as in second - price auction the standard argument for incentive compatibility applies p does not depend on agents declarations , so this payment does not affect agents strategies the bidding club increases agents expected gain exactly the same outcome as in second - price auction but : all bidders receive an additional payment of p > 0 declining participation is not informative : all bidders from g will bid their valuations infonomics workshop , maastricht 14friday , july 13 , 2001 observations the coordinators maximum loss in a given round is | g | p = | g | g / s .<q>since s may be arbitrarily big , maximum loss may be set arbitrarily close to 0 c keeps all but an arbitrarily small fraction of g efficiency of the auction is preserved revenue equivalence : does nt hold because a bidder in g who bids 0 can still gain p infonomics workshop , maastricht 15friday , july 13 , 2001 first - price auction : protocol a utility - improving coordinator exists for first - price auctions submit a bid for each agent i who did elect to participate with price offer b ( f , n , vi ) , and end the protocol infonomics workshop , maastricht 16friday , july 13 , 2001 calculating p assume agents truthful , participate taking into account only n , | g | , f , it is possible for c to calculate his expected gain , g c gains b ( f , n , v1 ) - b ( f , m , v1 ) whenever the globally highest bidder is a member of g pick any s | g | ; set p = g / s as before infonomics workshop , maastricht 17friday , july 13 , 2001 why this works incentive compatibility : with p = 0 , the allocation rule and payment rule are exactly the same as in first - price auction c implements a revelation mechanism p does not depend on agents declarations , so this payment does not affect agents strategies the bidding club increases agents expected gain exactly the same outcome as in first - price auction but : all bidders receive an additional payment of p > 0 declining participation is not informative : every agent in g will follow the equilibrium strategy the bidding club benefits agents outside g their equilibrium bids are reduced infonomics workshop , maastricht 18friday , july 13 , 2001 other bidding club protocols ive described : second - price ( / japanese ) first - price ( / dutch ) other protocols : general mechanisms with valuations drawn from a finite set n parallel 2nd - price auctions for substitute goods two parallel auctions for complementary goods", "sections": [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17], "token_sections}