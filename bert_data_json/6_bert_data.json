{"src": [101, 2057, 2817, 1996, 3014, 2000, 2029, 2235, 28892, 1999, 5366, 1999, 2092, 1011, 3273, 4022, 2399, 2064, 4254, 1996, 2765, 1997, 3019, 2190, 1011, 3433, 1998, 5301, 1011, 3433, 10949, 1012, 102, 101, 2057, 2655, 2023, 1996, 3976, 1997, 12503, 1998, 2817, 2009, 1999, 1037, 2898, 3528, 1997, 4022, 2399, 1006, 4297, 7630, 2094, 1011, 13749, 4189, 3465, 1011, 6631, 2399, 1010, 2275, 1011, 3104, 2399, 1010, 16972, 2399, 1010, 1998, 3105, 1011, 19940, 2399, 1007, 1010, 4531, 1037, 2193, 1997, 11341, 3463, 1012, 102, 101, 1999, 3327, 1010, 2057, 2265, 2008, 1999, 3056, 3572, 1010, 2130, 5186, 2235, 28892, 2064, 3426, 2122, 10949, 2000, 6714, 2041, 1997, 2491, 1998, 2693, 2000, 2163, 1997, 2172, 3020, 2591, 3465, 1010, 6168, 1999, 2060, 3572, 2122, 10949, 2024, 2172, 2062, 6540, 2130, 2000, 2312, 5445, 1997, 19857, 6593, 14505, 1012, 102, 101, 2057, 2036, 5136, 1996, 24501, 18622, 10127, 1997, 2122, 10949, 2000, 1037, 2235, 2193, 1997, 8734, 2867, 2055, 2029, 2053, 17568, 2024, 2081, 1012, 102, 101, 2057, 2265, 2153, 1037, 5688, 2090, 2367, 2399, 1012, 102, 101, 1999, 3056, 3572, 1006, 1041, 29625, 2290, 29625, 1010, 4189, 3465, 1011, 6631, 1010, 2275, 1011, 5266, 1010, 3105, 1011, 19940, 1007, 2130, 1037, 2309, 8734, 2447, 2064, 3426, 2190, 1011, 3433, 10949, 2000, 6653, 2000, 2163, 1997, 12381, 3020, 3465, 1010, 6168, 1999, 2500, 1006, 1041, 29625, 2290, 29625, 1010, 1996, 2465, 1997, 1156, 1011, 102, 101, 2009, 2003, 4235, 3970, 2008, 11581, 6074, 1999, 6975, 10058, 2064, 2022, 7021, 2004, 9710, 25845, 2869, 1012, 102, 101, 3171, 3399, 2038, 2908, 2000, 2307, 10742, 2000, 16114, 2023, 11213, 1010, 1998, 4315, 14966, 2009, 2013, 3937, 24286, 22260, 29178, 1012, 102, 101, 2350, 19199, 2015, 1999, 2023, 2240, 1997, 2470, 2421, 3854, 1011, 22860, 1998, 22822, 21230, 9589, 1031, 2603, 1033, 1010, 2139, 2986, 6916, 1031, 1023, 1033, 1998, 9576, 1031, 2539, 1033, 1012, 102, 101, 1999, 11305, 1010, 2122, 3463, 7532, 2090, 6074, 1005, 18394, 1010, 16593, 2015, 1997, 2824, 1010, 1998, 9710, 4972, 1012, 102, 101, 1006, 2057, 2323, 17674, 2008, 2045, 2003, 1037, 2240, 1997, 2147, 1999, 14260, 5543, 2029, 7860, 2023, 3921, 1010, 2005, 2742, 1996, 2092, 2124, 2573, 1997, 19361, 16704, 1998, 2694, 2545, 4801, 1031, 2538, 1033, 1012, 1007, 102, 101, 1999, 2023, 2147, 2057, 8849, 2129, 2235, 28892, 2030, 9662, 7368, 2055, 6074, 1005, 2219, 16548, 2064, 12381, 7461, 2591, 7574, 2043, 2867, 3582, 3019, 10949, 29625, 2378, 2116, 3572, 2057, 2064, 3193, 1996, 6074, 1005, 9710, 4972, 2004, 2108, 2241, 2006, 11702, 1997, 2070, 3558, 12450, 1012, 102, 101, 2005, 2742, 1999, 3105, 19940, 1010, 1996, 3177, 1997, 2169, 3698, 2003, 1037, 3558, 11712, 2029, 16463, 1996, 7170, 2006, 2169, 3698, 1012, 102, 101, 2019, 4005, 2038, 2000, 15796, 2023, 3177, 2013, 2049, 8089, 1010, 2073, 1996, 21304, 2126, 2003, 2000, 5136, 1996, 6463, 1997, 6434, 11712, 1998, 2051, 1012, 102, 101, 2130, 2065, 1996, 6434, 11712, 2003, 2445, 1010, 2367, 6074, 2453, 2031, 1006, 3621, 1007, 2367, 11702, 1997, 2051, 1010, 2029, 2097, 3426, 2068, 2000, 24134, 3621, 2367, 3698, 10898, 1012, 102, 101, 2130, 1996, 2168, 4005, 2453, 1044, 22571, 14573, 2229, 4697, 2367, 10898, 2005, 1996, 2168, 3698, 2012, 2367, 2335, 1010, 2349, 2000, 29238, 3258, 1999, 2049, 5119, 1012, 102, 101, 2057, 2064, 2944, 2023, 9575, 2004, 4076, 1012, 102, 101, 2057, 7868, 2008, 2169, 3698, 2038, 2019, 7619, 3177, 1055, 1010, 1998, 2012, 2169, 2051, 1056, 2169, 4005, 1045, 24451, 1037, 3177, 1055, 1056, 1045, 1596, 1031, 1055, 1013, 1006, 1015, 1009, 100, 1007, 1010, 1055, 1006, 1015, 1009, 100, 1007, 1033, 1010, 2005, 2070, 12503, 16381, 100, 1028, 1014, 102, 101, 2023, 11643, 1997, 12503, 2003, 14563, 1997, 1996, 7778, 23032, 4083, 2944, 1997, 17710, 23549, 1031, 2260, 1033, 1012, 102, 101, 1999, 2060, 8146, 1010, 2130, 2302, 12503, 1999, 10903, 1010, 1996, 10318, 2208, 2993, 2089, 8327, 2235, 28892, 1999, 3465, 1012, 102, 101, 2005, 2742, 1010, 5136, 1037, 5193, 3291, 2073, 2169, 4005, 27034, 1037, 2799, 1012, 102, 101, 2057, 2453, 2944, 7926, 2004, 2383, 8536, 4972, 2008, 2024, 1010, 2360, 1010, 7399, 1999, 1996, 3815, 1997, 4026, 2006, 2068, 1010, 2021, 1999, 4507, 14350, 2089, 2036, 12530, 2006, 6327, 4483, 5876, 2029, 2031, 2042, 10061, 2098, 2041, 1997, 1996, 2944, 1012, 102, 101, 3568, 14350, 2052, 2025, 2022, 3599, 7235, 2012, 2048, 2367, 2335, 2130, 2065, 1996, 3815, 1997, 4026, 2012, 2216, 2335, 2003, 1996, 2168, 1012, 102, 101, 2057, 2064, 2153, 3193, 2023, 6660, 1024, 2012, 2169, 2051, 1056, 1010, 7692, 1046, 2038, 3465, 1039, 1056, 1046, 1596, 1031, 1039, 3501, 1013, 1006, 1015, 1009, 100, 1007, 1010, 1039, 3501, 1006, 1015, 1009, 100, 1007, 1033, 2073, 1039, 3501, 2003, 1996, 1000, 2918, 1000, 3465, 1997, 2008, 7692, 1010, 1998, 100, 102, 101, 1999, 2755, 1010, 2023, 2168, 3277, 1997, 28892, 1999, 5025, 1006, 1999, 2804, 2000, 8690, 1007, 5366, 2089, 5258, 1999, 3105, 19940, 2004, 2092, 29625, 10760, 3160, 2057, 2024, 4699, 1999, 2003, 1024, 2064, 2122, 28892, 1006, 1999, 2593, 8690, 2030, 5025, 5366, 1007, 3426, 2190, 1011, 3433, 1998, 5301, 6072, 26029, 3366, 10949, 2000, 102, 101, 2054, 5300, 1997, 100, 2064, 2367, 2092, 1011, 3273, 2399, 19242, 1029, 102, 101, 2057, 3579, 2006, 4022, 2399, 1010, 2073, 2107, 10949, 2024, 2926, 3019, 1010, 1998, 9375, 1037, 2047, 5468, 2057, 2655, 1996, 3976, 1997, 12503, 1006, 13433, 2226, 1007, 1010, 2008, 4275, 1996, 3466, 2122, 2566, 20689, 23757, 2015, 2064, 3426, 1012, 102, 101, 2000, 9375, 1996, 13433, 2226, 2057, 7868, 2012, 2169, 3357, 1056, 2019, 4005, 2515, 1037, 2190, 1006, 2030, 5301, 1007, 3433, 2000, 1996, 3465, 3853, 2012, 2051, 1056, 1012, 102, 101, 1996, 13433, 2226, 1997, 1037, 2445, 2208, 19202, 1996, 6463, 1997, 1996, 3988, 2591, 7574, 2000, 1996, 2591, 7574, 1997, 2151, 2110, 2008, 2064, 2022, 2584, 1999, 2107, 1037, 8790, 1012, 102, 101, 1015, 1037, 2235, 13433, 2226, 12748, 2008, 1996, 2291, 2064, 2025, 28283, 25346, 3686, 2349, 2000, 2107, 2566, 20689, 23757, 2015, 1999, 5366, 1010, 1998, 3640, 1037, 3056, 3014, 1997, 15873, 2791, 2000, 1996, 2291, 1025, 1037, 2312, 13433, 2226, 2965, 2008, 26118, 2071, 2022, 5729, 1012, 102, 101, 3602, 2008, 2035, 1996, 2399, 2057, 5136, 2031, 2069, 1037, 2235, 6578, 2090, 4022, 1998, 3465, 1010, 2061, 2302, 2151, 28892, 1010, 2122, 10949, 2052, 2196, 3426, 2591, 7574, 2000, 28283, 25346, 3686, 12381, 1012, 102, 101, 1999, 2804, 1010, 2035, 1996, 2399, 2057, 5136, 2031, 2379, 1011, 15502, 1041, 26147, 12322, 4360, 1006, 2037, 3976, 1997, 9211, 2003, 2659, 1007, 1010, 1998, 2027, 3613, 2000, 2079, 2061, 2130, 2044, 2566, 20689, 23757, 1024, 2947, 1010, 1996, 3466, 2057, 2024, 5702, 2003, 2025, 2008, 1996, 2291, 5829, 2000, 1037, 3532, 2110, 2138, 102, 101, 2256, 3463, 1024, 2057, 17908, 1037, 2193, 1997, 2092, 1011, 3273, 4022, 2399, 2013, 2023, 7339, 1010, 2164, 3465, 1011, 6631, 1031, 1016, 1033, 1010, 13523, 22943, 2399, 1031, 1015, 1033, 1010, 3105, 1011, 19940, 1031, 2410, 29623, 2620, 1033, 1010, 1998, 1996, 2465, 1997, 1156, 1011, 3835, 2399, 1031, 1017, 1033, 1010, 102, 101, 2256, 4106, 3065, 1037, 2193, 1997, 11341, 25995, 2090, 2122, 2399, 1010, 2004, 2092, 2004, 2090, 2122, 2048, 10949, 1012, 102, 101, 1999, 2070, 3572, 1010, 2057, 2265, 2130, 27258, 2135, 2235, 2566, 20689, 23757, 2015, 2064, 2765, 1999, 23956, 7457, 1999, 3465, 1025, 1999, 2500, 1010, 17505, 2135, 1011, 2235, 2566, 20689, 23757, 2015, 2024, 7182, 2000, 5676, 2204, 5248, 1010, 1998, 2633, 2070, 2024, 24501, 18622, 4765, 2130, 2000, 5377, 1011, 7451, 28892, 1012, 102, 101, 2005, 2742, 1010, 1999, 4189, 3465, 1011, 6631, 2399, 2007, 2116, 2867, 1997, 2169, 2828, 1010, 2057, 2265, 2008, 2007, 2190, 1011, 3433, 10949, 1010, 1996, 3976, 1997, 12503, 2003, 5377, 2130, 2005, 5377, 100, 1028, 1014, 1012, 102, 101, 2174, 1010, 2007, 5301, 1011, 3433, 10949, 1010, 2130, 27258, 2135, 2235, 28892, 2064, 3426, 2019, 27258, 2135, 2312, 3623, 1999, 1996, 3465, 1997, 1996, 2291, 1012, 102, 101, 2006, 1996, 2060, 2192, 1010, 2007, 2261, 2867, 1997, 2169, 2828, 1010, 1996, 2208, 4150, 2625, 24501, 18622, 4765, 1010, 1998, 5377, 1011, 2946, 28892, 2064, 3426, 2130, 2190, 1011, 3433, 10949, 2000, 4297, 3126, 1037, 13433, 2226, 1997, 1179, 1006, 1050, 1007, 1010, 2073, 1050, 2003, 1996, 2193, 1997, 2867, 1010, 3048, 2013, 102, 101, 2005, 2275, 1011, 5266, 2399, 1010, 1037, 3019, 2569, 2553, 1997, 4189, 3465, 1011, 6631, 3273, 2011, 1031, 1020, 1033, 2073, 2867, 2442, 5454, 2029, 2275, 2000, 7141, 2000, 1998, 3975, 1996, 3465, 2007, 2500, 2437, 1996, 2168, 3601, 1010, 2057, 2265, 2119, 2190, 1011, 3433, 1998, 5301, 1011, 3433, 102, 101, 2174, 1010, 2005, 13523, 22943, 2399, 1006, 1037, 5041, 2465, 2008, 2236, 10057, 2275, 1011, 5266, 1998, 2116, 2060, 2399, 1007, 1010, 2096, 2190, 1011, 3433, 10949, 4247, 2000, 8327, 2204, 5248, 1010, 5301, 1011, 3433, 10949, 2153, 2038, 27258, 2135, 2312, 13433, 2226, 2130, 2005, 27258, 2135, 2235, 100, 1006, 27258, 1999, 1996, 4635, 102, 101, 2057, 2036, 2507, 1037, 10892, 17796, 2896, 5391, 1997, 1179, 1006, 100, 1600, 1050, 1013, 8833, 1006, 1015, 1013, 100, 1007, 1007, 2006, 1996, 13433, 2226, 1997, 2190, 1011, 3433, 10949, 2005, 2275, 1011, 5266, 2399, 1010, 4760, 2008, 100, 1026, 26572, 21197, 1006, 1050, 1007, 1013, 1600, 1050, 2003, 4072, 2005, 102, 101, 2633, 1010, 2005, 1996, 2465, 1997, 1156, 1011, 3835, 2399, 1010, 2029, 2005, 5377, 1156, 2950, 20176, 2399, 2007, 7399, 1006, 2030, 5377, 1011, 3014, 17505, 1007, 2397, 9407, 4972, 1010, 3006, 1011, 6631, 2399, 1010, 1998, 2116, 2500, 1031, 1017, 1033, 1010, 2057, 2265, 2008, 2005, 6721, 2344, 2190, 6072, 26029, 3366, 10949, 102, 101, 2174, 1010, 2153, 2005, 5301, 1011, 3433, 10949, 1996, 13433, 2226, 2064, 2022, 27258, 1012, 102, 101, 2057, 2036, 2556, 3463, 2005, 3105, 19940, 2006, 15142, 6681, 1998, 10465, 2399, 1012, 102, 101, 2057, 2036, 8849, 1037, 2367, 2785, 1997, 15873, 2791, 1010, 2029, 2003, 1037, 15873, 2791, 2000, 4748, 14028, 10980, 2140, 1006, 8734, 1007, 2867, 1012, 102, 101, 2023, 2064, 2022, 7021, 2004, 1037, 6346, 1011, 13986, 1997, 1996, 2291, 2000, 1037, 2261, 28616, 4783, 3270, 7178, 6074, 1012, 102, 101, 2005, 2256, 2896, 19202, 1010, 2057, 10152, 2006, 1996, 2553, 1997, 1037, 2309, 4748, 14028, 10980, 2140, 1006, 8734, 1007, 2447, 1010, 1998, 5468, 2000, 2054, 3014, 2064, 2107, 1037, 2447, 2064, 3426, 1996, 2291, 1005, 2015, 2591, 7574, 2000, 28283, 25346, 3686, 1012, 102, 101, 2057, 2265, 4005, 1005, 2015, 5248, 2003, 1996, 2168, 1012, 102, 101, 2036, 1010, 1999, 2236, 2057, 7868, 2008, 1996, 3988, 2110, 2003, 15275, 1012, 102, 101, 2009, 2071, 2022, 2019, 14442, 1010, 1999, 2029, 2553, 1996, 13433, 2226, 2064, 2022, 7021, 2004, 5702, 1996, 9211, 1997, 1996, 14442, 1012, 102, 101, 14084, 1010, 1996, 3988, 2110, 2453, 2765, 2013, 1037, 2689, 1999, 1996, 2291, 1006, 5815, 2030, 9268, 1037, 4957, 1999, 16972, 1010, 2030, 5815, 2030, 9268, 1037, 3698, 1999, 3105, 19940, 1007, 1012, 102, 101, 1999, 2107, 1037, 2553, 1996, 6074, 10949, 2707, 2013, 1037, 2062, 15275, 2110, 1012, 102, 101, 2008, 2005, 2275, 3104, 2399, 1010, 1037, 2309, 8734, 2447, 2064, 3426, 2190, 6072, 26029, 3366, 10949, 2000, 2693, 2013, 2019, 14442, 1997, 3465, 1051, 1006, 23569, 1007, 2000, 2028, 1997, 3465, 1179, 1006, 1050, 1087, 23569, 1007, 1012, 102, 101, 1006, 2023, 2003, 2004, 2919, 1037, 3663, 2004, 2825, 2144, 1996, 3976, 1997, 26395, 1999, 2107, 2399, 2003, 1051, 1006, 1050, 1007, 1012, 1007, 102, 101, 2005, 3105, 19940, 2006, 2048, 15142, 6681, 2057, 2265, 2008, 1037, 2309, 8734, 2447, 2064, 19653, 1037, 8790, 2073, 1996, 3465, 7457, 2013, 1015, 2000, 1179, 1006, 1050, 1007, 1010, 1998, 2008, 1996, 2168, 2003, 2995, 2005, 10465, 2399, 1012, 102, 101, 2005, 2256, 3893, 3463, 1010, 2057, 3499, 2151, 2193, 1997, 8734, 2867, 1012, 102, 101, 2057, 2265, 2008, 2005, 3105, 19940, 2006, 7235, 6681, 1996, 3466, 1997, 8734, 2867, 2003, 2200, 3132, 1012, 102, 101, 2005, 1156, 1011, 3835, 2399, 1010, 2104, 3176, 17568, 2006, 1996, 4254, 1996, 8734, 2867, 2064, 2031, 2006, 1996, 2591, 3465, 1997, 2151, 2445, 2110, 1010, 1998, 10262, 6721, 1011, 2344, 2190, 6072, 26029, 3366, 10949, 1010, 2057, 2064, 2265, 2008, 2012, 2151, 2051, 1056, 1010, 1996, 3517, 2591, 3465, 2064, 2025, 2022, 102, 101, 2256, 2147, 2064, 2022, 2245, 1997, 2004, 4851, 2054, 7957, 1997, 6346, 1011, 13986, 5144, 2057, 2064, 11302, 1999, 4800, 29624, 4270, 3372, 10058, 1012, 102, 101, 2008, 2003, 1010, 2065, 1996, 2291, 2003, 2747, 1999, 1037, 2659, 1011, 3465, 14442, 2110, 1010, 2043, 2064, 2057, 5987, 2009, 2000, 3961, 2061, 2130, 1999, 1996, 3739, 1997, 7263, 2566, 20689, 23757, 2015, 1999, 5366, 2030, 1999, 1996, 3739, 1997, 1037, 2235, 2193, 1997, 28616, 4783, 3270, 6455, 1006, 8734, 1007, 2867, 1012, 102, 101, 2256, 4106, 2036, 2685, 2041, 1037, 25312, 20142, 3012, 1999, 3115, 4022, 1011, 3853, 9918, 1999, 3572, 2073, 1996, 10318, 2944, 2003, 2025, 3243, 3819, 1012, 102, 101, 3141, 2147, 1024, 3522, 2147, 2006, 1996, 1000, 3976, 1997, 28238, 1000, 1998, 3141, 21951, 2031, 2036, 2641, 1996, 3466, 2008, 8734, 2867, 2064, 2031, 1999, 2195, 3019, 2399, 1031, 1018, 29623, 15136, 29623, 16068, 1033, 1012, 102, 101, 1996, 3579, 1997, 2008, 2147, 2038, 2042, 2006, 1996, 3466, 1997, 2107, 2867, 2006, 1996, 3737, 1997, 1996, 5409, 10594, 2030, 20392, 1011, 23900, 1041, 26147, 12322, 4360, 1012, 102, 101, 1999, 5688, 1010, 2057, 2024, 4699, 1999, 1996, 3466, 1997, 2107, 2867, 2006, 2019, 3988, 2110, 2008, 2089, 2022, 2172, 2488, 2084, 1996, 5409, 14442, 1010, 2005, 1037, 2898, 2465, 1997, 4022, 2399, 2007, 1037, 2659, 6578, 2090, 4022, 1998, 3465, 1006, 2061, 2008, 2302, 2151, 2566, 20689, 23757, 2015, 2030, 8734, 2867, 102, 101, 1037, 2208, 2003, 19537, 2011, 1037, 10722, 10814, 1043, 1027, 1050, 1010, 1006, 9033, 1007, 1010, 1006, 3465, 2072, 1007, 2073, 1050, 2003, 1037, 2275, 1997, 1050, 2867, 1010, 9033, 2003, 1996, 10713, 2895, 2686, 1997, 2447, 1045, 1596, 1050, 1010, 1998, 3465, 2072, 2003, 1996, 3465, 3853, 1997, 2447, 1045, 1012, 102, 101, 1996, 4101, 2895, 2686, 1997, 1996, 2867, 2003, 1055, 1027, 1055, 2487, 1095, 1012, 1012, 1012, 1095, 1055, 2078, 1012, 102, 101, 2005, 1037, 4101, 2895, 1055, 1596, 1055, 2057, 19090, 2011, 1055, 1597, 1045, 1996, 4506, 1997, 2867, 1046, 1027, 1045, 1010, 1045, 29625, 2063, 29625, 1010, 1055, 1597, 1045, 1027, 1006, 1055, 2487, 1010, 2133, 1010, 9033, 1597, 1015, 1010, 9033, 1597, 1015, 1010, 2133, 1010, 1055, 2078, 1007, 1012, 102, 101, 7297, 2057, 19090, 2011, 1055, 1612, 1055, 1531, 1045, 1996, 2110, 1006, 1055, 2487, 1010, 2133, 1010, 9033, 1597, 1015, 1010, 1055, 1531, 1045, 1010, 9033, 1597, 1015, 1010, 2133, 1010, 1055, 2078, 1007, 1012, 102, 101, 1996, 3465, 3853, 1997, 2447, 1045, 7341, 1037, 4101, 2895, 1055, 1596, 1055, 2000, 1037, 2613, 2512, 29624, 2638, 26792, 2193, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 2072, 1024, 1055, 1585, 1054, 1009, 1012, 102, 101, 2296, 2208, 2038, 3378, 1037, 2591, 3465, 3853, 3465, 1024, 1055, 1585, 1054, 2008, 7341, 1037, 4101, 2895, 2000, 1037, 2613, 3643, 1012, 102, 101, 1999, 1996, 3572, 6936, 1999, 2023, 3259, 1996, 2591, 3465, 2003, 1037, 3722, 3853, 1997, 1996, 5366, 1997, 1996, 2867, 1012, 102, 101, 1999, 3327, 1010, 2057, 6848, 1996, 7680, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 1006, 1055, 1007, 1027, 1052, 1050, 1045, 1027, 1015, 3465, 2072, 1006, 1055, 1007, 1010, 1998, 1996, 4098, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 1006, 1055, 1007, 1027, 4098, 1050, 1045, 1027, 1015, 3465, 2072, 1006, 1055, 1007, 1012, 102, 101, 1006, 1999, 1996, 6123, 1997, 7170, 20120, 2399, 2057, 2655, 1996, 4555, 2591, 3853, 1996, 3084, 9739, 2591, 3465, 3853, 1012, 1007, 102, 101, 1996, 15502, 2591, 3465, 1997, 1037, 2208, 1043, 2003, 23569, 1006, 1043, 1007, 1027, 8117, 2015, 1596, 1055, 3465, 1006, 1055, 1007, 1012, 102, 101, 2057, 2823, 2058, 11066, 14869, 1998, 2224, 23569, 2005, 1037, 4101, 2895, 1055, 2008, 6162, 2015, 3465, 23569, 1006, 1043, 1007, 1012, 102, 101, 2445, 1037, 4101, 2895, 1055, 1010, 1996, 2190, 3433, 1006, 7987, 1007, 1997, 2447, 1045, 2003, 1996, 2275, 1997, 4506, 7987, 2072, 1006, 1055, 1007, 2008, 18478, 2015, 2049, 3465, 1010, 2445, 1996, 2060, 2867, 4506, 1055, 1597, 1045, 1010, 1045, 29625, 2063, 29625, 1010, 7987, 2072, 1006, 1055, 1597, 1045, 1007, 1027, 12098, 2290, 8117, 2015, 1596, 102, 101, 2445, 1037, 4101, 2895, 1055, 1010, 1996, 5301, 3433, 1006, 20868, 1007, 1997, 2447, 1045, 2003, 1996, 2275, 1997, 4506, 20868, 2072, 1006, 1055, 1007, 2008, 2031, 2896, 3465, 2084, 2049, 2783, 2895, 1010, 1045, 29625, 2063, 29625, 1010, 20868, 2072, 1006, 1055, 1007, 1027, 1063, 1055, 1596, 9033, 1064, 3465, 2072, 1006, 1055, 1010, 1055, 102, 101, 1037, 4101, 2895, 1055, 1596, 1055, 2003, 1037, 5760, 10594, 14442, 1006, 11265, 1007, 2065, 2053, 2447, 1045, 1596, 1050, 2064, 5770, 2013, 4895, 11733, 14621, 9215, 14386, 5844, 2000, 2178, 2895, 1010, 8419, 1010, 2296, 2447, 2003, 2652, 1037, 2190, 3433, 2895, 1999, 1055, 1010, 1045, 29625, 2063, 29625, 1010, 9033, 1596, 7987, 2072, 1006, 1055, 1597, 102, 101, 1037, 2190, 1006, 5301, 1007, 3433, 10949, 2003, 1037, 2832, 1999, 2029, 2012, 2169, 2051, 3357, 1010, 2070, 2447, 2029, 2003, 2025, 2652, 1037, 2190, 3433, 15924, 2049, 2895, 2000, 1037, 2190, 1006, 5301, 1007, 3433, 2895, 1010, 2445, 1996, 2783, 4101, 2895, 1012, 102, 101, 1999, 2023, 3259, 2057, 2097, 10152, 2006, 2399, 1999, 2029, 2151, 2190, 1006, 5301, 1007, 3433, 10949, 28314, 2015, 2000, 1037, 5760, 10594, 14442, 1006, 2029, 2024, 5662, 2000, 1996, 2465, 1997, 2030, 18979, 2140, 4022, 2399, 1031, 2403, 29623, 16576, 1033, 1007, 1012, 102, 101, 2802, 1996, 3259, 2057, 19090, 2011, 6578, 1006, 1043, 1010, 1050, 1007, 1996, 4555, 6463, 2090, 1996, 3465, 1997, 1037, 2445, 4101, 2895, 1998, 1996, 3643, 1997, 1996, 4022, 3853, 2005, 2009, 1010, 2073, 1043, 2003, 1037, 2208, 1997, 1050, 2867, 29625, 7485, 1050, 1006, 1043, 1007, 2022, 1996, 2275, 1997, 10594, 102, 101, 1996, 3976, 1997, 26395, 1006, 13433, 2050, 1007, 2003, 4225, 2004, 1996, 6463, 2090, 1996, 4555, 3465, 1997, 1037, 10594, 14442, 1998, 1996, 2591, 23569, 28591, 1010, 1045, 29625, 2063, 29625, 1010, 1006, 4098, 1055, 1596, 1050, 1006, 1043, 1007, 3465, 1006, 1055, 1007, 1007, 1013, 23569, 1006, 1043, 1007, 1012, 102, 101, 1996, 3976, 1997, 9211, 1006, 13433, 2015, 1007, 2003, 1996, 6463, 2090, 1996, 6263, 3465, 1997, 1037, 10594, 14442, 1998, 1996, 2591, 23569, 28591, 1010, 1045, 29625, 2063, 29625, 1010, 1006, 8117, 1055, 1596, 1050, 1006, 1043, 1007, 3465, 1006, 1055, 1007, 1007, 1013, 23569, 1006, 1043, 1007, 1012, 102, 101, 1999, 2023, 3259, 2057, 8970, 1998, 2817, 1996, 3976, 1997, 12503, 1006, 13433, 2226, 1007, 1012, 102, 101, 2057, 5136, 2093, 2367, 8358, 1012, 102, 101, 4748, 14028, 10980, 2140, 2944, 1024, 5136, 1037, 2208, 1043, 1010, 2013, 1037, 2445, 2465, 1997, 2399, 1043, 1010, 2073, 1996, 6074, 2707, 2012, 2070, 2445, 3988, 9563, 1055, 2692, 1006, 2029, 2453, 2022, 1037, 10594, 14442, 2030, 2025, 1007, 1012, 102, 101, 2085, 2057, 5082, 1999, 12335, 1010, 2073, 1999, 4403, 1056, 1996, 2206, 5158, 1012, 102, 101, 2034, 1010, 2012, 2051, 1056, 1010, 1996, 27248, 2566, 20689, 5910, 1996, 5366, 1997, 1043, 2011, 1037, 2235, 4800, 24759, 25184, 5387, 2013, 2037, 3988, 5300, 1010, 2061, 2008, 2005, 2151, 1055, 1998, 1046, 2057, 2031, 13186, 2102, 1056, 1046, 1006, 1055, 1007, 1596, 1031, 3465, 3501, 1006, 1055, 1007, 1013, 1006, 1015, 1009, 100, 1007, 1010, 102, 101, 1016, 10760, 2078, 1996, 27248, 11214, 2019, 4005, 1045, 2040, 10438, 1037, 2190, 1006, 5301, 1007, 3433, 1010, 1998, 1996, 2047, 9563, 2003, 2358, 29625, 8162, 2364, 5142, 2003, 2000, 3356, 5391, 3465, 1006, 2358, 1007, 1013, 3465, 1006, 1055, 2692, 1007, 2004, 1037, 3853, 1997, 100, 1998, 1996, 2465, 1997, 2399, 1043, 1012, 102, 101, 2062, 10785, 1010, 2292, 2149, 9375, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 1027, 4098, 3465, 1006, 2358, 1007, 1013, 3465, 1006, 1055, 2692, 1007, 1010, 2073, 1996, 4098, 6872, 2003, 2058, 1996, 3988, 9563, 1055, 2692, 1010, 1996, 2193, 1997, 2051, 4084, 1056, 1010, 1998, 1037, 10949, 1997, 1056, 2051, 4084, 102, 101, 2005, 1037, 2465, 1997, 2399, 1043, 1010, 2292, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 2022, 4098, 2290, 1596, 1043, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 1012, 102, 101, 2057, 9375, 6660, 1052, 15068, 4313, 2005, 5301, 3433, 1012, 102, 101, 6721, 2344, 2944, 1024, 2023, 2944, 2003, 2714, 2000, 1996, 4748, 14028, 10980, 2140, 2944, 1010, 3272, 2008, 2012, 2169, 2051, 3357, 1037, 6721, 4005, 1045, 1596, 1050, 2003, 3479, 1012, 102, 101, 2057, 2085, 2729, 2055, 1996, 3517, 3465, 2012, 2051, 1056, 1012, 102, 101, 2057, 17674, 2008, 2348, 1996, 2447, 2003, 3479, 2012, 6721, 1010, 2049, 2895, 2003, 3479, 2004, 2019, 4748, 14028, 10980, 2140, 2190, 1006, 5301, 1007, 3433, 2000, 2019, 4748, 14028, 10980, 9215, 3479, 2566, 20689, 23757, 1997, 2049, 3465, 1012, 102, 101, 1999, 2023, 2553, 2057, 19090, 1996, 3976, 1997, 12503, 2011, 1052, 15068, 1054, 7987, 1012, 102, 101, 1017, 8734, 2944, 1024, 1999, 2023, 2944, 1010, 2738, 2084, 2566, 20689, 10472, 5366, 1010, 1996, 27248, 2612, 2038, 2491, 2058, 1037, 2235, 2193, 1997, 8734, 6074, 1012, 102, 101, 2012, 2169, 2051, 3357, 1056, 1010, 1996, 27248, 5829, 1996, 8734, 6074, 12098, 16313, 19848, 6588, 1010, 1998, 2059, 2019, 4005, 1045, 1596, 1050, 2003, 3479, 1006, 2593, 4748, 14028, 10980, 9215, 2030, 2012, 6721, 1007, 1010, 2040, 2059, 10438, 1037, 2190, 1011, 3433, 1012, 102, 101, 2947, 1010, 2096, 1999, 1996, 2060, 4275, 1996, 27248, 2064, 2566, 20689, 2497, 2035, 5366, 2011, 1037, 2235, 3815, 1010, 1999, 2023, 2944, 1996, 27248, 2064, 3747, 2069, 1037, 2261, 2867, 1010, 2021, 2005, 2216, 2867, 2009, 2038, 2440, 2491, 1012, 102, 101, 2023, 12748, 2008, 1996, 27248, 2064, 4050, 3747, 1996, 5366, 1997, 2069, 1037, 2261, 4219, 2012, 1037, 2051, 1006, 2216, 2109, 2011, 1996, 8734, 2867, 1007, 2011, 2019, 3815, 2008, 9041, 2006, 1996, 2208, 1998, 1996, 2783, 4101, 2895, 1997, 1996, 2867, 29625, 5643, 2064, 3193, 1996, 4748, 14028, 10980, 2140, 2944, 2004, 1037, 2856, 102, 101, 2045, 2003, 1037, 2856, 3341, 2013, 1055, 2000, 1055, 1531, 2065, 2027, 11234, 1999, 1996, 2895, 1997, 2069, 2028, 2447, 1045, 1010, 1998, 1996, 27248, 2064, 3426, 2447, 1045, 2000, 2693, 2013, 2049, 2895, 1999, 1055, 2000, 2049, 2895, 1999, 1055, 1531, 1024, 2005, 5301, 3433, 10949, 1010, 2023, 2965, 102, 101, 1996, 13433, 2226, 2059, 19202, 1996, 6463, 2090, 1996, 2591, 3465, 1999, 1055, 1998, 1996, 4555, 2591, 3465, 1997, 2151, 4101, 2895, 3362, 3085, 2013, 1055, 1010, 1045, 29625, 2063, 29625, 1010, 4098, 2015, 4098, 1058, 1596, 1058, 1006, 1055, 1007, 3465, 1006, 1058, 1007, 1013, 3465, 1006, 1055, 1007, 1012, 102, 101, 1999, 2023, 3259, 2057, 8077, 2817, 20176, 2399, 1998, 2590, 4942, 29624, 26266, 2229, 1997, 2068, 1012, 102, 101, 1037, 20176, 2208, 1043, 2003, 4225, 2011, 1037, 10722, 10814, 1006, 1050, 1010, 1054, 1010, 1006, 9033, 1007, 1010, 1006, 4487, 1007, 1007, 1010, 2073, 1050, 2003, 1996, 2275, 1997, 1050, 2867, 1010, 1054, 2003, 1996, 2275, 1997, 1049, 4219, 1010, 1996, 2895, 1997, 2447, 1045, 2003, 9033, 1611, 1016, 1054, 102, 101, 1996, 3465, 3465, 2072, 1006, 1055, 1007, 1997, 2447, 1045, 2003, 2445, 2011, 1052, 1054, 1596, 1055, 1045, 2852, 1006, 17212, 1006, 1055, 1007, 1007, 1010, 2073, 17212, 1006, 1055, 1007, 2003, 1996, 2193, 1997, 2867, 6631, 7692, 1054, 1999, 2110, 1055, 1998, 2852, 1024, 1050, 1585, 1050, 2003, 1037, 8536, 102, 101, 2057, 2655, 1037, 20176, 2208, 19490, 2065, 2035, 1996, 2867, 3745, 1996, 2168, 2275, 1997, 9942, 1010, 4728, 2057, 2655, 2009, 2004, 24335, 12589, 1012, 102, 101, 3563, 4280, 1997, 20176, 2399, 2008, 2057, 2817, 1999, 2023, 2147, 2024, 3465, 1011, 6631, 2399, 1010, 13523, 22943, 20176, 2399, 1010, 1156, 1011, 3835, 2399, 1010, 1998, 10465, 2399, 1012, 102, 101, 2057, 9375, 2035, 2122, 1999, 2037, 7978, 5433, 1010, 8419, 5433, 1018, 29625, 2487, 1010, 1018, 29625, 2475, 1010, 1019, 29625, 2487, 1998, 1018, 29625, 2509, 1012, 102, 101, 2005, 2399, 2007, 1176, 1006, 1055, 1007, 1609, 3465, 1006, 1055, 1007, 2057, 9375, 6578, 1006, 1043, 1010, 1050, 1007, 2004, 4098, 2015, 1176, 1006, 1055, 1007, 1013, 3465, 1006, 1055, 1007, 1012, 102, 101, 2062, 3227, 1010, 2005, 2399, 2107, 2008, 1176, 1006, 1055, 1007, 1596, 1031, 27723, 13186, 2102, 1006, 1055, 1007, 1010, 29248, 13186, 2102, 1006, 1055, 1007, 1033, 2057, 9375, 6578, 1006, 1043, 1010, 1050, 1007, 1027, 29248, 1013, 27723, 1010, 2073, 2057, 7868, 27723, 1608, 1015, 1608, 29248, 29625, 6761, 12399, 2465, 1997, 2399, 2057, 2817, 2024, 102, 101, 2057, 2707, 2007, 1037, 2261, 3722, 9420, 4953, 1996, 3976, 1997, 12503, 1999, 2236, 1010, 1998, 2005, 20176, 2399, 1999, 3327, 1012, 102, 101, 2034, 1010, 3602, 2008, 2005, 100, 1027, 1014, 2057, 2131, 1996, 1000, 3115, 1000, 2190, 1006, 5301, 1007, 3433, 10949, 1012, 102, 101, 1999, 2023, 2553, 1996, 13433, 2226, 2003, 3432, 4851, 2011, 2129, 2172, 2064, 1996, 2591, 7574, 28283, 25346, 3686, 1010, 10262, 2008, 2035, 1996, 2867, 2024, 14972, 2190, 1006, 5301, 1007, 3433, 10949, 1006, 2130, 2023, 2064, 2022, 3020, 2084, 1996, 13433, 2050, 1010, 2156, 9872, 1017, 29625, 2487, 1007, 1012, 102, 101, 2256, 2034, 8089, 2003, 2008, 2130, 2005, 100, 1027, 1014, 1996, 1052, 15068, 2003, 2012, 2560, 1996, 3976, 1997, 9211, 1012, 102, 101, 2023, 4076, 2144, 2057, 2064, 2707, 2012, 1055, 2692, 2004, 1996, 2591, 15502, 9563, 1010, 1998, 2151, 2190, 3433, 10949, 2097, 3362, 2070, 14442, 2358, 29625, 7011, 6593, 1017, 29625, 2487, 1012, 102, 101, 2005, 2151, 100, 1609, 1014, 2057, 2031, 1024, 2361, 15068, 4313, 1006, 100, 1010, 1043, 1007, 1609, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 1609, 1052, 15068, 19892, 1006, 1014, 1010, 1043, 1007, 1609, 1052, 9808, 1006, 1043, 1007, 1012, 102, 101, 2005, 4189, 3465, 1011, 6631, 2399, 1010, 2755, 1017, 29625, 2487, 12748, 2019, 1179, 1006, 8833, 1050, 1007, 5391, 1010, 2349, 2000, 1996, 3976, 1997, 9211, 3463, 1031, 1016, 1033, 1012, 102, 101, 2117, 1010, 2028, 2323, 5987, 1996, 6463, 2000, 2036, 12530, 2006, 1996, 10194, 1997, 100, 1012, 102, 101, 2005, 2742, 1010, 2005, 2151, 2445, 2208, 1010, 2005, 12949, 2235, 100, 1010, 1996, 2566, 20689, 23757, 2015, 1997, 1996, 27248, 2052, 2031, 2053, 2613, 3466, 1010, 1998, 1996, 6074, 2052, 3432, 3582, 2070, 2190, 1006, 5301, 1007, 3433, 10949, 2013, 1996, 3988, 9563, 1012, 102, 101, 2062, 4919, 1024, 2755, 1017, 29625, 2475, 1012, 102, 101, 2005, 2151, 2208, 2465, 1043, 2045, 2003, 2019, 100, 1028, 1014, 2107, 2008, 2005, 2151, 100, 1026, 100, 1010, 1052, 15068, 4313, 1006, 100, 1010, 1043, 1007, 1027, 1052, 15068, 4313, 1006, 1014, 1010, 1043, 1007, 1998, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 1027, 1052, 15068, 19892, 1006, 1014, 1010, 1043, 1007, 102, 101, 1999, 6635, 4022, 2399, 1010, 2019, 6234, 8089, 2003, 1024, 2755, 1017, 29625, 2509, 1012, 102, 101, 1999, 2151, 6635, 4022, 2208, 2044, 1056, 4084, 1996, 4022, 3853, 7457, 2011, 2012, 2087, 1006, 1015, 1009, 100, 1007, 1016, 2102, 1012, 102, 101, 4415, 1010, 2755, 1017, 29625, 2509, 12748, 2008, 1996, 4022, 3853, 7457, 2011, 2012, 2087, 1006, 1015, 1009, 100, 1007, 1016, 2140, 1010, 2073, 1048, 2003, 1996, 2193, 1997, 22354, 1997, 2867, 1025, 2005, 20176, 2399, 1010, 2144, 2867, 5454, 16745, 2015, 1997, 4219, 1010, 1048, 1608, 1016, 24098, 1012, 102, 101, 2009, 2003, 5875, 2000, 3602, 2008, 2045, 6526, 1043, 2107, 2008, 1052, 15068, 19892, 1006, 1014, 1010, 1043, 1007, 2003, 3469, 2011, 1037, 4800, 24759, 25184, 1179, 1006, 8833, 1050, 1007, 5387, 2084, 1052, 1051, 2050, 1006, 1043, 1007, 1012, 102, 101, 1999, 3327, 2057, 2064, 2265, 1996, 2206, 1012, 102, 101, 2292, 1043, 2022, 1996, 2465, 1997, 3006, 1011, 6631, 2399, 1012, 102, 101, 2059, 1052, 1051, 2050, 1006, 1043, 1007, 1027, 1016, 2096, 1052, 15068, 19892, 1006, 1014, 1010, 1043, 1007, 1027, 1162, 1006, 8833, 1050, 1007, 1012, 102, 101, 1996, 5391, 2006, 1996, 13433, 2050, 2003, 2013, 1031, 2570, 1033, 1012, 102, 101, 2005, 1996, 2896, 5391, 2006, 13433, 2226, 1010, 5136, 2867, 1063, 1016, 1010, 1012, 1012, 1012, 1010, 1050, 1065, 2073, 2447, 1045, 2064, 7276, 2090, 1037, 4056, 2609, 9033, 2007, 5770, 1015, 1013, 1045, 1998, 1037, 4207, 2609, 1055, 2487, 2007, 5770, 1015, 1012, 102, 101, 3322, 1010, 2169, 2447, 1045, 3594, 2049, 4056, 2609, 9033, 1010, 1998, 1996, 2591, 7574, 5770, 2003, 1048, 2078, 1050, 1012, 102, 101, 2085, 2292, 1996, 2867, 4685, 2190, 3433, 1999, 2019, 4852, 2344, 1997, 1996, 29299, 1012, 102, 101, 2447, 1045, 2038, 1037, 5770, 1997, 1015, 1013, 1045, 1010, 1998, 1996, 5770, 2013, 3048, 2000, 1055, 2487, 2003, 1015, 1013, 1006, 1045, 1597, 1015, 1007, 1010, 2061, 2009, 19233, 2000, 2693, 2000, 1055, 2487, 1012, 102, 101, 2023, 12748, 2008, 2012, 1996, 2203, 1997, 1996, 5537, 1996, 2591, 7574, 5770, 2003, 1015, 1012, 102, 101, 1996, 3356, 5391, 4076, 3202, 2013, 1996, 2755, 2008, 1996, 6578, 2090, 4022, 1998, 3465, 1999, 2023, 2208, 2938, 2483, 14213, 6578, 1027, 1051, 1006, 8833, 1050, 1007, 1012, 102, 101, 3602, 2008, 1999, 2107, 3572, 2057, 2024, 5627, 2000, 4558, 1996, 8833, 1050, 5387, 1010, 1998, 2057, 2024, 4699, 1999, 2005, 2054, 5300, 1997, 100, 1996, 3643, 1997, 1052, 15068, 19892, 1006, 100, 1010, 1043, 1007, 2003, 2025, 2172, 3469, 2084, 1052, 15068, 19892, 1006, 1014, 1010, 1043, 1007, 1012, 102, 101, 2633, 1010, 2057, 2391, 2041, 1037, 3722, 3276, 2090, 1996, 2566, 20689, 23757, 1998, 8734, 4275, 1012, 102, 101, 5136, 1037, 2465, 1997, 2399, 1043, 2107, 2008, 1037, 2309, 2447, 2064, 2025, 2689, 1996, 3465, 1997, 2151, 2445, 2110, 1055, 2000, 2151, 2447, 1045, 2011, 2062, 2084, 1037, 5387, 1997, 1155, 1010, 1998, 3005, 3466, 2003, 18847, 5524, 1006, 2005, 2742, 1010, 2005, 4189, 3465, 1011, 6631, 1010, 1037, 2047, 102, 101, 2059, 1010, 2019, 27248, 2007, 100, 1027, 1600, 1155, 1597, 1015, 2064, 26633, 1996, 3466, 1997, 11113, 2100, 13471, 10196, 2447, 2006, 2190, 1011, 3433, 1006, 2030, 5301, 1011, 3433, 1007, 10949, 1012, 102, 101, 2023, 12748, 2008, 2151, 2896, 5391, 2005, 1037, 2309, 8734, 2447, 1006, 2107, 2004, 1999, 9872, 2015, 1020, 29625, 2475, 1010, 1020, 29625, 2509, 1998, 1020, 29625, 2629, 1007, 16315, 2000, 1037, 2896, 5391, 2006, 1052, 15068, 19892, 1006, 1600, 1155, 1597, 1015, 1010, 1043, 1007, 1012, 102, 101, 1999, 2023, 2930, 2057, 2556, 2256, 3463, 1999, 1996, 4748, 14028, 10980, 2140, 2944, 1998, 2507, 3356, 1998, 2896, 5391, 2006, 1052, 15068, 19892, 1998, 1052, 15068, 4313, 2005, 1037, 2193, 1997, 2092, 1011, 3273, 4280, 1997, 2399, 1012, 102, 101, 2057, 4088, 2011, 6195, 2275, 1011, 3104, 2399, 1010, 1037, 3019, 2828, 1997, 3465, 1011, 6631, 2208, 3273, 1999, 1031, 1020, 1033, 1010, 4760, 2008, 2119, 2190, 1011, 3433, 1998, 5301, 1011, 3433, 10949, 2024, 24501, 18622, 4765, 2000, 17505, 2135, 1011, 2235, 28892, 1006, 9872, 1018, 29625, 2487, 1007, 1010, 2021, 2008, 2130, 2005, 102, 101, 2057, 2059, 5136, 2048, 2236, 22318, 1997, 2122, 2399, 1024, 4189, 3465, 6631, 1999, 2236, 2856, 19287, 1031, 1016, 1033, 1010, 1998, 13523, 22943, 2399, 1031, 1015, 1033, 1012, 102, 101, 1999, 2119, 3572, 1010, 2057, 2265, 2008, 2130, 27258, 2135, 2235, 28892, 2064, 3426, 5301, 1011, 3433, 10949, 2000, 2693, 2000, 2152, 3465, 2163, 1006, 3393, 14760, 1018, 29625, 2475, 1998, 9872, 2015, 1018, 29625, 2629, 1998, 1018, 29625, 2620, 1007, 1025, 2174, 1010, 2190, 1011, 3433, 10949, 3464, 24501, 18622, 4765, 2000, 17505, 2135, 26212, 3363, 28892, 1006, 9872, 2015, 1018, 29625, 2509, 1010, 1018, 29625, 2549, 1010, 102, 101, 2057, 2036, 2556, 3463, 2005, 3105, 1011, 19940, 1998, 10465, 2399, 1012, 102, 101, 1999, 2023, 2930, 2057, 5136, 4189, 3465, 6631, 2399, 1006, 4429, 28745, 1007, 1010, 1037, 2465, 1997, 20176, 2399, 4225, 2004, 4076, 1012, 102, 101, 2057, 2024, 2445, 1037, 10629, 1043, 1027, 1006, 1058, 1010, 1041, 1007, 1010, 2029, 2064, 2022, 2856, 2030, 6151, 7442, 10985, 1010, 2073, 2169, 3341, 1041, 1596, 1041, 2038, 1037, 2512, 2638, 26792, 3465, 2057, 1609, 1014, 1012, 102, 101, 2045, 2003, 1037, 2275, 1050, 1027, 1063, 1015, 1010, 2133, 1010, 1050, 1065, 1997, 1050, 2867, 1010, 2073, 2447, 1045, 2003, 3378, 2007, 1037, 3120, 9033, 1998, 1037, 7752, 14841, 1012, 102, 101, 1996, 5656, 2275, 1997, 2447, 1045, 2003, 1996, 2275, 9033, 1997, 9033, 1597, 14841, 10425, 1012, 102, 101, 1999, 2019, 9560, 1997, 1996, 2208, 1010, 2169, 2447, 1045, 15867, 1037, 2309, 4130, 14255, 1596, 9033, 1012, 102, 101, 2445, 2019, 9560, 1055, 1027, 1006, 1052, 2487, 1010, 2133, 1010, 1052, 2078, 1007, 1010, 2292, 11265, 1006, 1055, 1007, 2022, 1996, 2193, 1997, 6074, 3005, 4130, 3397, 3341, 1041, 1012, 102, 101, 1999, 1996, 4189, 3465, 6631, 2208, 1996, 3465, 2000, 4005, 1045, 2003, 3465, 2072, 1006, 1055, 1007, 1027, 1052, 1041, 1596, 1052, 1045, 2057, 11265, 1006, 1055, 1007, 1998, 1996, 3125, 1997, 2169, 4005, 2003, 2000, 7532, 2049, 17703, 2007, 6263, 2561, 3465, 1012, 102, 101, 1996, 2591, 3465, 2003, 4225, 2000, 2022, 21877, 1596, 1605, 1045, 1052, 1045, 8545, 1012, 102, 101, 2009, 2003, 2092, 2124, 2008, 1996, 3976, 1997, 26395, 1999, 2122, 2399, 2003, 1162, 1006, 1050, 1007, 2096, 1996, 3976, 1997, 9211, 2003, 1044, 1006, 1050, 1007, 1031, 1016, 1033, 1010, 2073, 1044, 1006, 1050, 1007, 1027, 1052, 1050, 1045, 1027, 1015, 1015, 1013, 1045, 1027, 1162, 1006, 8833, 1050, 102, 101, 1037, 2092, 2124, 23191, 1997, 1996, 4022, 3853, 1031, 2459, 1033, 1997, 2122, 2399, 1031, 1016, 1033, 2003, 1996, 2206, 29625, 16930, 2863, 1018, 29625, 2487, 1012, 102, 101, 1999, 4189, 3465, 6631, 1010, 2005, 2151, 4101, 2895, 1055, 1596, 1055, 1010, 2057, 2031, 1024, 3465, 1006, 1055, 1007, 1608, 1176, 1006, 1055, 1007, 1608, 1044, 1006, 1050, 1007, 1087, 3465, 1006, 1055, 1007, 1012, 102, 101, 2275, 1011, 3104, 2399, 1006, 8040, 2290, 1007, 2020, 2641, 1999, 1031, 1020, 1033, 1012, 102, 101, 1999, 1037, 2275, 1011, 3104, 2208, 1010, 2045, 2024, 1050, 2867, 1010, 1998, 1049, 16745, 2015, 2058, 1996, 2867, 1012, 102, 101, 1996, 3465, 3378, 2007, 2275, 1045, 2003, 15536, 1012, 102, 101, 2169, 2447, 1046, 2038, 2000, 5454, 2028, 1997, 1996, 4520, 1045, 2008, 3397, 2032, 1998, 4152, 2000, 3975, 1996, 3465, 1997, 1996, 2275, 2007, 2060, 2867, 2040, 5454, 1996, 2168, 2275, 1012, 102, 101, 2275, 1011, 3104, 2399, 2024, 1037, 2569, 2553, 1997, 4189, 3465, 6631, 2399, 1012, 102, 101, 2057, 4088, 2007, 2019, 3356, 5391, 2005, 5301, 1011, 3433, 10949, 1012, 102, 101, 1999, 1996, 2275, 5266, 2208, 1010, 2005, 2151, 100, 1028, 1014, 2057, 2031, 1010, 1052, 15068, 4313, 1006, 100, 1010, 8040, 2290, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 8833, 1050, 29625, 3568, 1010, 2005, 100, 1027, 1051, 1006, 1015, 13221, 1007, 1010, 2057, 2031, 1052, 15068, 4313, 1006, 100, 1010, 8040, 2290, 1007, 102, 101, 6814, 1996, 3988, 9563, 1055, 2692, 2038, 11382, 2867, 2478, 2275, 1013, 3341, 1045, 1997, 3465, 15536, 1012, 102, 101, 2228, 1997, 2023, 2004, 1037, 9991, 1997, 11382, 11772, 1010, 2073, 2057, 3830, 2169, 9090, 2007, 1996, 2171, 1997, 2049, 3988, 2275, 1998, 2049, 2597, 1999, 1996, 9991, 1012, 102, 101, 2061, 1996, 3953, 9090, 2005, 2275, 1045, 2003, 12599, 1006, 1045, 1010, 1015, 1007, 1010, 2059, 1996, 2028, 2682, 2009, 2003, 12599, 1006, 1045, 1010, 1016, 1007, 1010, 1998, 2061, 2006, 1012, 102, 101, 2057, 2097, 2507, 9090, 1006, 1045, 1010, 1046, 1007, 1037, 3643, 1997, 15536, 1013, 1046, 29625, 2061, 1010, 1996, 7680, 1997, 5300, 1997, 1996, 11772, 19635, 1996, 4022, 3853, 1997, 1996, 3988, 9563, 1010, 2029, 2429, 2000, 3393, 14760, 1018, 29625, 2487, 2003, 2012, 2087, 1037, 5387, 1997, 8833, 1050, 3469, 2084, 1996, 2434, 102, 101, 1996, 4366, 2003, 2008, 2057, 5441, 1996, 23915, 2008, 2065, 9090, 1006, 1045, 1010, 1046, 1007, 2003, 2747, 2012, 2070, 2597, 1046, 1531, 2006, 2070, 9991, 1045, 1531, 1010, 2059, 2009, 2442, 2022, 1996, 2553, 2008, 2860, 1045, 1531, 1013, 1046, 1531, 1608, 1006, 15536, 1013, 1046, 1007, 1087, 1006, 1015, 102, 101, 2023, 2097, 19515, 2054, 2057, 2215, 1010, 2138, 2009, 2965, 2008, 2057, 2064, 3477, 2005, 2151, 2047, 2275, 2008, 4152, 2579, 2478, 1996, 3953, 9090, 2006, 2049, 9991, 1012, 102, 101, 1006, 2057, 2024, 2478, 2182, 1996, 2755, 2008, 1037, 9090, 2064, 2069, 2022, 1999, 2028, 9991, 1012, 1007, 102, 101, 1996, 6685, 2005, 1996, 23915, 2003, 2008, 2045, 2024, 2012, 2087, 1049, 1087, 1050, 2367, 4460, 1037, 2445, 9090, 2064, 2022, 1999, 1006, 1049, 20829, 1010, 1050, 4460, 2566, 9991, 1007, 2061, 2065, 2017, 5136, 1996, 4130, 1037, 9090, 3138, 2013, 2049, 3988, 3295, 2000, 2049, 2783, 3295, 1010, 2023, 102, 101, 2144, 2867, 3582, 2019, 5301, 3433, 10949, 1010, 2169, 3357, 1999, 2023, 2693, 5320, 1996, 6463, 1997, 3465, 1997, 1996, 2783, 9991, 2000, 2597, 1999, 1996, 9991, 2000, 3623, 2011, 2012, 2087, 1037, 5387, 1006, 1015, 1009, 100, 1007, 1016, 1012, 102, 101, 2061, 1010, 3452, 1010, 1996, 2561, 3623, 2003, 2012, 2087, 1037, 5387, 1997, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 1012, 102, 101, 2061, 1010, 3465, 1006, 2358, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 3465, 1006, 1055, 2692, 1007, 8833, 1050, 2005, 2035, 1056, 1010, 2004, 9059, 29625, 8545, 2085, 2507, 1037, 2896, 5391, 1010, 4760, 2008, 2005, 100, 100, 8833, 1006, 1050, 1007, 1013, 1600, 1050, 1010, 1996, 3976, 1997, 12503, 2064, 2131, 102, 101, 1999, 1996, 2275, 5266, 2208, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 8040, 2290, 1007, 1027, 1179, 1006, 100, 1600, 1050, 8833, 1006, 1015, 1013, 100, 1007, 1007, 1012, 102, 101, 1996, 6947, 16473, 2006, 1037, 2810, 1999, 2930, 1020, 3228, 1037, 2896, 5391, 1999, 1996, 3739, 1997, 1037, 2309, 8734, 2447, 1010, 2021, 5815, 1999, 2019, 4469, 1000, 11721, 24291, 1000, 1997, 1162, 1006, 1600, 1050, 1013, 100, 1009, 2487, 1013, 100, 1016, 1007, 2867, 2008, 4473, 1996, 27248, 2000, 26633, 1996, 102, 101, 1996, 2810, 1999, 2023, 2896, 5391, 2003, 7199, 17796, 2061, 2057, 13366, 2121, 1996, 6947, 2000, 22524, 1037, 1012, 102, 101, 2057, 2085, 5136, 4189, 3465, 6631, 2399, 1999, 2236, 2856, 19287, 1012, 102, 101, 2057, 2265, 2182, 2008, 2061, 2146, 2004, 1996, 2193, 1997, 2867, 9152, 1997, 2169, 2828, 1006, 1045, 29625, 2063, 29625, 1010, 3378, 2000, 2169, 1006, 9033, 1010, 14841, 1007, 3940, 1007, 2003, 2312, 1010, 2059, 1996, 2208, 2003, 6540, 2130, 2005, 2312, 5300, 1997, 100, 2104, 2190, 1011, 3433, 10949, 1012, 102, 101, 4919, 1010, 2061, 2146, 2004, 9152, 1027, 1179, 1006, 1049, 1007, 2005, 2035, 1045, 1010, 2057, 2031, 1037, 5377, 3976, 1997, 12503, 1012, 102, 101, 2006, 1996, 2060, 2192, 1010, 2005, 5301, 6072, 26029, 3366, 10949, 1010, 2059, 5366, 2064, 4982, 27258, 2135, 2130, 2005, 27258, 2135, 2235, 5300, 1997, 100, 1010, 2130, 2005, 1996, 19490, 1006, 2309, 3120, 1010, 2309, 7752, 1007, 2553, 1012, 102, 101, 1052, 15068, 19892, 1006, 100, 1010, 1042, 20116, 2290, 1007, 1608, 1000, 1015, 1009, 1006, 1015, 1009, 100, 1007, 1016, 1050, 8117, 1000, 1049, 1010, 2073, 22484, 2078, 1027, 7163, 9152, 29625, 15222, 2015, 12748, 2008, 2005, 22484, 2078, 1027, 1179, 1006, 1049, 1007, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 1042, 20116, 2290, 1007, 1027, 1051, 102, 101, 2655, 2019, 3341, 1000, 4417, 1000, 2065, 2009, 2003, 2412, 2109, 2802, 1996, 2190, 1011, 3433, 2832, 1010, 2164, 2216, 2109, 1999, 1996, 3988, 2110, 1055, 2692, 1010, 1998, 2292, 1039, 1008, 2022, 1996, 2561, 3465, 1997, 2035, 4417, 7926, 1012, 102, 101, 2061, 1010, 1039, 1008, 2003, 2019, 3356, 5391, 2006, 1996, 3465, 1997, 1996, 2783, 2110, 1012, 102, 101, 2151, 2051, 1037, 2190, 1011, 3433, 4130, 2005, 2070, 1006, 9033, 1010, 14841, 1007, 3940, 3594, 2019, 25779, 3341, 1010, 1996, 2561, 3465, 1997, 1996, 25779, 7926, 2109, 2003, 2012, 2087, 1006, 1039, 1008, 1013, 9152, 1007, 1087, 1006, 1015, 1009, 100, 1007, 1016, 1010, 2138, 1006, 1039, 1008, 1013, 102, 101, 2023, 1999, 2735, 2003, 2306, 1037, 1006, 1015, 1009, 100, 1007, 5387, 1997, 1996, 5025, 3465, 1997, 2023, 4130, 1012, 102, 101, 2947, 1010, 1039, 1008, 7457, 2011, 2012, 2087, 1037, 4800, 24759, 25184, 1006, 1015, 1009, 1006, 1015, 1009, 100, 1007, 1016, 1013, 9152, 1007, 5387, 1012, 102, 101, 2057, 2064, 2928, 2047, 7926, 2012, 2087, 1049, 2335, 1010, 2061, 1996, 2345, 3465, 2003, 2012, 2087, 3465, 1006, 1055, 2692, 1007, 1006, 1015, 1009, 1006, 1015, 1009, 100, 1007, 1016, 1013, 22484, 2078, 1007, 1049, 1010, 2073, 22484, 2078, 1027, 7163, 9152, 1012, 102, 101, 2023, 12748, 2008, 2004, 2146, 2004, 22484, 2078, 1027, 1179, 1006, 1049, 1007, 2057, 2031, 3465, 1006, 2358, 1007, 1027, 1051, 1006, 3465, 1006, 1055, 2692, 1007, 1007, 1010, 2005, 2035, 1056, 1010, 2004, 9059, 29625, 29278, 19490, 4189, 3465, 6631, 2399, 1006, 8040, 11329, 28745, 1007, 2057, 2064, 2131, 1037, 2659, 3976, 1997, 12503, 2130, 102, 101, 2005, 19490, 4189, 3465, 6631, 2399, 1010, 2073, 1996, 3341, 5366, 2024, 1999, 1996, 2846, 1031, 1059, 10020, 1010, 1059, 17848, 1033, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 16420, 20116, 2290, 1007, 1027, 1051, 1006, 8833, 1050, 1007, 1010, 2005, 100, 1026, 1059, 8117, 1018, 2860, 17848, 1015, 24098, 1006, 1050, 1597, 1015, 102, 101, 2057, 2707, 2007, 2070, 14869, 1012, 102, 101, 2057, 2360, 2008, 2012, 2051, 1056, 1010, 1996, 2190, 1011, 3433, 2447, 1046, 2102, 5829, 2013, 4130, 13866, 2000, 4130, 1052, 1531, 1056, 1010, 4526, 2110, 2358, 29625, 2057, 2097, 2360, 2008, 1037, 2051, 1056, 2003, 1000, 5875, 1000, 2065, 13866, 1009, 2487, 1027, 1052, 1531, 1056, 1024, 2008, 2003, 1010, 2065, 1996, 102, 101, 2292, 2149, 5950, 1996, 5875, 2335, 2004, 1056, 2487, 1010, 1056, 2475, 1010, 1012, 1012, 1012, 1012, 102, 101, 1996, 6685, 2085, 10951, 1999, 2048, 4084, 1024, 2057, 2034, 2265, 2019, 3356, 5391, 2006, 1996, 2193, 1997, 5875, 2051, 4084, 1997, 2226, 1027, 1051, 1006, 1015, 1155, 8833, 1050, 1007, 2005, 1155, 1027, 1059, 8117, 1022, 2860, 17848, 1015, 1050, 1006, 1050, 1597, 1015, 1007, 1049, 1012, 102, 101, 2057, 2059, 6011, 2008, 1996, 4022, 1997, 1996, 2345, 2110, 2358, 2938, 2483, 14213, 1176, 1006, 2358, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2226, 1176, 1006, 1055, 2692, 1007, 1012, 102, 101, 2478, 1996, 2755, 2008, 100, 1026, 1059, 8117, 1018, 2860, 17848, 1015, 24098, 1006, 1050, 1597, 1015, 1007, 8833, 1050, 1998, 1996, 1051, 1006, 8833, 1050, 1007, 6578, 2090, 4022, 1998, 3465, 1999, 2122, 2399, 1010, 2057, 2131, 1996, 9059, 2765, 29625, 7485, 1054, 1047, 19090, 1996, 2995, 1006, 4895, 4842, 20689, 8270, 1007, 3465, 1997, 1996, 102, 101, 2057, 2085, 4366, 2008, 2099, 1047, 1608, 1000, 1054, 1047, 1597, 1015, 1597, 1059, 10020, 1050, 1006, 1050, 1597, 1015, 1007, 1077, 1006, 1015, 1009, 100, 1007, 1016, 1012, 102, 101, 1006, 1018, 29625, 2487, 1007, 4919, 1010, 3602, 2008, 2138, 1052, 1531, 1012, 102, 101, 1999, 3327, 1010, 1059, 8117, 1050, 1006, 1050, 1597, 1015, 1007, 2003, 1037, 2896, 5391, 2006, 1996, 10995, 2550, 2011, 2383, 2028, 2062, 2447, 2006, 1996, 7926, 1999, 2029, 1052, 1531, 1056, 1047, 1597, 1015, 1998, 13866, 1047, 1597, 1015, 1009, 2487, 11234, 1006, 2029, 12748, 1996, 9059, 4861, 2005, 1056, 102, 101, 3568, 1010, 2144, 2447, 1046, 2102, 1047, 2003, 4488, 2190, 3433, 2000, 1996, 2566, 20689, 8270, 5366, 1010, 1996, 2995, 3465, 2099, 1047, 1997, 1052, 1531, 1056, 11382, 2015, 2012, 2087, 1037, 5387, 1006, 1015, 1009, 100, 1007, 1016, 3469, 2084, 1054, 1047, 1597, 1015, 1597, 1059, 8117, 1050, 1006, 1050, 1597, 1015, 1007, 1012, 102, 101, 2005, 2256, 2445, 5300, 1997, 1155, 1998, 100, 1010, 1998, 2478, 1996, 2755, 2008, 1054, 1047, 1597, 1015, 1608, 1059, 17848, 1087, 1049, 1010, 16440, 1006, 1018, 29625, 2487, 1007, 12748, 2008, 1054, 1047, 1608, 1054, 1047, 1597, 1015, 1006, 1015, 1597, 1155, 1007, 1012, 102, 101, 2144, 1054, 2487, 1608, 23569, 1006, 1015, 1009, 100, 1007, 1016, 1998, 2011, 6210, 1997, 23569, 2009, 2442, 2022, 2008, 19387, 1609, 23569, 1013, 1050, 1010, 2057, 2131, 2008, 1996, 2193, 1997, 5875, 2051, 4084, 2003, 2012, 2087, 1057, 1027, 1051, 1006, 1015, 1155, 8833, 1050, 1007, 1012, 102, 101, 2057, 2085, 5391, 1996, 4022, 1999, 3408, 1997, 1996, 2193, 1997, 5875, 2051, 4084, 1012, 102, 101, 4919, 1010, 3602, 2008, 2447, 1046, 2102, 1047, 2071, 2031, 2333, 2000, 4130, 13866, 1047, 1597, 1015, 1009, 2487, 1010, 2029, 2052, 7065, 8743, 1996, 2291, 2000, 2110, 2358, 1047, 1597, 1015, 2138, 2361, 1531, 1056, 1047, 1597, 1015, 1009, 2487, 1027, 13866, 1047, 1597, 1015, 1009, 2475, 1010, 1012, 1012, 1012, 1010, 1052, 1531, 1056, 102, 101, 2138, 13068, 2121, 1046, 2102, 1047, 4900, 4130, 1052, 1531, 1056, 1047, 2612, 1010, 2029, 2001, 2190, 1011, 3433, 2000, 1996, 2566, 20689, 8270, 5366, 1010, 2023, 2965, 1176, 1006, 2358, 1047, 1007, 1608, 1176, 1006, 2358, 1047, 1597, 1015, 1007, 1006, 1015, 1009, 100, 1007, 1016, 1012, 102, 101, 3568, 1010, 1996, 10882, 1011, 6583, 2140, 2110, 2358, 2938, 2483, 14213, 1176, 1006, 2358, 1007, 1608, 1176, 1006, 1055, 2692, 1007, 1006, 1015, 1009, 100, 1007, 1016, 2226, 1010, 7678, 1996, 6685, 29625, 5714, 21572, 7178, 3433, 1996, 2682, 3463, 2507, 3356, 19202, 2005, 2190, 3433, 1999, 4189, 3465, 6631, 2399, 1012, 102, 101, 1999, 5688, 1010, 2057, 2085, 2265, 2008, 2005, 5301, 1011, 3433, 10949, 1010, 1996, 3976, 1997, 12503, 2003, 27258, 2135, 2312, 2130, 2005, 27258, 2135, 1011, 2235, 5300, 1997, 100, 1010, 2130, 2005, 19490, 4189, 3465, 6631, 2399, 1012, 102, 101, 2005, 19490, 4189, 3465, 6631, 1010, 2005, 1037, 2309, 2447, 1006, 1045, 29625, 2063, 29625, 1010, 1050, 1027, 1015, 1007, 1010, 1996, 3976, 1997, 12503, 2005, 5301, 1011, 3433, 10949, 2938, 2483, 14213, 1052, 15068, 4313, 1006, 100, 1010, 16420, 20116, 2290, 1007, 1609, 1015, 1009, 1016, 1006, 1016, 1049, 1013, 1016, 1597, 1015, 1007, 100, 1013, 102, 101, 1996, 10629, 3774, 1997, 1037, 2240, 1997, 5903, 7926, 5412, 2004, 4076, 1012, 102, 101, 2057, 2031, 2048, 5903, 7926, 2013, 1055, 1027, 1058, 2692, 2000, 19449, 1058, 2487, 1997, 3465, 1015, 1998, 1015, 1009, 100, 4414, 1010, 2059, 2048, 5903, 7926, 2013, 1058, 2487, 2000, 19449, 1058, 2475, 1997, 5366, 1015, 1998, 1015, 1009, 100, 1010, 2059, 2048, 5903, 7926, 2013, 1058, 2475, 2000, 1058, 2509, 1997, 5366, 1015, 1998, 102, 101, 2633, 2057, 2292, 7752, 1056, 1027, 1058, 1049, 1013, 1016, 2061, 2057, 2031, 1037, 2561, 1997, 1049, 7926, 1012, 102, 101, 1996, 2447, 4269, 2006, 1996, 10036, 4355, 4130, 1010, 1997, 3465, 1049, 1013, 1016, 1012, 102, 101, 2057, 2064, 6235, 1037, 4130, 2013, 1055, 2000, 1056, 2011, 1037, 12441, 2193, 1038, 1027, 1038, 1049, 1013, 1016, 1597, 1015, 1012, 1012, 1012, 1038, 2475, 2497, 2487, 2497, 2692, 1010, 2073, 2978, 12170, 1027, 1014, 2065, 1996, 4130, 3594, 1996, 3341, 1997, 3465, 1015, 2013, 6819, 2000, 6819, 1009, 2487, 1998, 12170, 1027, 1015, 2065, 102, 101, 2947, 1010, 4130, 1038, 2038, 3465, 3599, 1049, 1013, 1016, 1009, 100, 1010, 1998, 1996, 2447, 4269, 2012, 4130, 1014, 1012, 102, 101, 2057, 2085, 4366, 2008, 2478, 1037, 2186, 1997, 2566, 20689, 23757, 2015, 1998, 5301, 6072, 26029, 3366, 5829, 1010, 2028, 2064, 3426, 1996, 2447, 2000, 8385, 4297, 28578, 4765, 1010, 3048, 2013, 4130, 1038, 2000, 4130, 1038, 1009, 1015, 2127, 1996, 2447, 2633, 6561, 4130, 1016, 1049, 1013, 1016, 1597, 1015, 1010, 10910, 1996, 9059, 5391, 1012, 102, 101, 4919, 1010, 2144, 1996, 4489, 1999, 2995, 3465, 2090, 4130, 1038, 1009, 1015, 1998, 4130, 1038, 2003, 3599, 100, 1010, 2009, 2003, 7182, 2000, 5454, 2070, 15275, 3341, 1999, 4130, 1038, 2008, 2003, 2025, 1999, 4130, 1038, 1009, 1015, 1998, 3623, 2049, 3465, 2011, 1037, 4800, 24759, 25184, 5387, 1015, 1009, 100, 102, 101, 1996, 2236, 3989, 2005, 3674, 2867, 2003, 19647, 1012, 102, 101, 2005, 19490, 2005, 3465, 6631, 1010, 2005, 2151, 2193, 1997, 2867, 1050, 1010, 1996, 3976, 1997, 12503, 2005, 5301, 1011, 3433, 10949, 2938, 2483, 14213, 1052, 15068, 4313, 1006, 100, 1010, 16420, 20116, 2290, 1007, 1609, 1015, 1009, 1016, 1006, 1016, 1049, 1013, 1016, 1597, 1015, 1007, 100, 1013, 1049, 29625, 8545, 2064, 2224, 3393, 14760, 1018, 29625, 2475, 102, 101, 2005, 16972, 2007, 7399, 2397, 9407, 4972, 1010, 1996, 3976, 1997, 12503, 2005, 5301, 1011, 3433, 10949, 2938, 2483, 14213, 1052, 15068, 4313, 1006, 100, 1010, 20996, 2226, 1056, 1999, 1043, 1007, 1609, 1015, 1009, 1016, 1006, 1016, 1049, 1013, 1016, 1597, 1015, 1007, 100, 1013, 1049, 1012, 102, 101, 2057, 2085, 17908, 13523, 22943, 20176, 2399, 1010, 1037, 5041, 2465, 1997, 2399, 2641, 1999, 1031, 1015, 1033, 1012, 102, 101, 2077, 2057, 2507, 1037, 5337, 6210, 1997, 2107, 2399, 1010, 2057, 4780, 8970, 1037, 2261, 3115, 8866, 2055, 13523, 29514, 1025, 2005, 1037, 6851, 6594, 1010, 2057, 6523, 1996, 8068, 2000, 1031, 2322, 1033, 1012, 102, 101, 1037, 10722, 10814, 1049, 1024, 1027, 1006, 1054, 1010, 1045, 1007, 2003, 1037, 13523, 22943, 2065, 1054, 2003, 1037, 10713, 2275, 1997, 4219, 1998, 1045, 2003, 1037, 3904, 27718, 2100, 2155, 1997, 16745, 2015, 1997, 1054, 2107, 2008, 2065, 1045, 1596, 1045, 1998, 1046, 1611, 1045, 1010, 2059, 1046, 1596, 1045, 1010, 1998, 2065, 1045, 102, 101, 2292, 1045, 1610, 1054, 1025, 2065, 1045, 1596, 1045, 2059, 2057, 2655, 1045, 2981, 1010, 4728, 2057, 2655, 2009, 7790, 1012, 102, 101, 2009, 2003, 2092, 2124, 2008, 2035, 29160, 2981, 4520, 1997, 1045, 2031, 1996, 2168, 2946, 1010, 2029, 2003, 19537, 2011, 1996, 4635, 1054, 2243, 1006, 1049, 1007, 1997, 1996, 13523, 22943, 1012, 102, 101, 1037, 29160, 2981, 2275, 1997, 1049, 2003, 2170, 1037, 3978, 1997, 1049, 1012, 102, 101, 2009, 2003, 2092, 2124, 2008, 2107, 1037, 3978, 2064, 2022, 2179, 2011, 1037, 20505, 9896, 1012, 102, 101, 1999, 1996, 2206, 2057, 2110, 2048, 3176, 6179, 5144, 1997, 1996, 13523, 29514, 1012, 102, 101, 2057, 19090, 2011, 1038, 1996, 2275, 1997, 7888, 1997, 1037, 13523, 22943, 1010, 1998, 7868, 2008, 29491, 1010, 1038, 2475, 1596, 1038, 29625, 16930, 2863, 1018, 29625, 2509, 1012, 102, 101, 2292, 1054, 2475, 1596, 1038, 2475, 1032, 29491, 1010, 2059, 2045, 6526, 1054, 2487, 1596, 29491, 1032, 1038, 2475, 2107, 2008, 29491, 1605, 1063, 1054, 2475, 1065, 1032, 1063, 1054, 2487, 1065, 1596, 1038, 29625, 8545, 19090, 2011, 1043, 1006, 29491, 100, 1038, 2475, 1007, 1996, 12170, 19362, 23096, 10629, 1006, 1058, 1010, 1041, 1007, 2007, 1058, 1027, 1006, 29491, 1032, 102, 101, 2059, 2009, 2003, 2124, 2008, 1031, 2322, 1033, 1012, 102, 101, 2057, 2024, 2085, 3201, 2000, 9375, 13523, 22943, 20176, 2399, 1012, 102, 101, 1037, 20176, 2208, 2003, 1037, 13523, 22943, 20176, 2208, 2065, 2005, 2296, 2447, 1045, 1596, 1050, 2057, 2031, 2008, 2771, 1024, 1027, 1006, 1054, 1010, 2462, 1007, 2007, 2462, 1027, 1063, 1045, 1611, 1055, 1064, 1055, 1596, 9033, 1065, 2003, 1037, 13523, 22943, 1998, 9033, 2003, 1996, 2275, 1997, 7888, 1997, 2771, 102, 101, 2057, 19090, 2011, 1054, 2243, 1006, 1049, 1007, 1027, 21510, 1596, 1050, 1054, 2243, 1006, 2771, 1007, 1996, 4635, 1997, 1996, 13523, 22943, 20176, 2208, 1049, 1012, 102, 101, 2005, 2742, 1010, 2275, 1011, 3104, 2399, 2024, 13523, 22943, 2399, 1997, 4635, 1015, 1998, 6089, 18428, 3070, 2399, 2007, 6375, 5366, 2024, 13523, 22943, 2399, 1031, 2340, 1033, 1006, 2295, 2130, 19490, 4189, 3465, 6631, 2342, 2025, 2022, 1037, 13523, 22943, 2208, 1007, 1012, 102, 101, 2057, 2085, 2265, 2008, 2005, 2190, 1011, 3433, 10949, 1010, 13523, 22943, 2399, 2031, 2714, 24501, 18622, 10127, 2000, 28892, 2004, 2275, 1011, 3104, 2399, 1025, 2174, 1010, 2005, 5301, 3433, 2057, 2507, 2019, 27258, 2896, 5391, 1012, 102, 101, 1999, 1037, 13523, 22943, 2208, 1010, 1052, 15068, 19892, 1006, 100, 1010, 1049, 2012, 22943, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 6578, 1006, 1049, 2012, 22943, 1010, 1050, 1007, 1012, 102, 101, 2023, 12748, 2008, 2005, 100, 1027, 1051, 1006, 1015, 1013, 1006, 1050, 1087, 1049, 1007, 1007, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 1049, 2012, 22943, 1007, 1027, 1051, 1006, 6578, 1006, 1049, 2012, 22943, 1010, 1050, 1007, 1007, 1012, 102, 101, 1996, 6947, 10951, 2004, 1999, 9872, 1018, 29625, 2487, 1012, 102, 101, 2174, 1010, 2057, 3322, 2031, 1052, 1045, 1596, 1050, 1054, 2243, 1006, 2771, 1007, 1608, 1050, 1087, 1054, 2243, 1006, 1049, 1007, 11772, 1998, 1996, 3465, 1006, 1055, 2692, 1007, 2003, 2306, 1037, 6578, 1006, 1049, 2012, 22943, 1010, 1050, 1007, 5387, 2013, 1996, 7680, 1997, 1996, 5300, 1997, 1996, 11772, 29625, 7485, 1055, 2022, 1037, 102, 101, 5136, 1996, 12170, 19362, 23096, 10629, 1043, 1006, 1055, 1008, 1045, 100, 9033, 1007, 2029, 3397, 1037, 3819, 9844, 7610, 2429, 2000, 3393, 14760, 1018, 29625, 2549, 1012, 102, 101, 2292, 1055, 1008, 1027, 1055, 1612, 1055, 1008, 1045, 1010, 1998, 11949, 2008, 2005, 2296, 3341, 1006, 1054, 1010, 1054, 1008, 1007, 1596, 7610, 2007, 1054, 1008, 1596, 1055, 1008, 1045, 1032, 9033, 1998, 1054, 1596, 9033, 1032, 1055, 1008, 1045, 1010, 100, 2852, 1008, 1006, 17212, 1008, 1006, 1055, 102, 101, 1996, 4366, 2003, 2008, 2057, 5441, 1996, 23915, 2008, 2065, 9090, 1006, 1045, 1010, 1046, 1007, 2003, 2747, 2012, 2070, 2597, 1046, 1531, 2006, 2070, 9991, 1045, 1531, 1010, 2059, 2009, 2442, 2022, 1996, 2553, 2008, 2094, 1045, 1531, 1006, 1046, 1531, 1007, 1608, 4487, 1006, 1046, 1007, 1087, 1006, 1015, 102, 101, 1996, 6685, 2003, 1996, 2168, 2004, 1999, 9872, 1018, 29625, 2487, 1024, 2045, 2024, 2012, 2087, 1049, 1087, 1050, 2367, 4460, 1037, 2445, 9090, 2064, 2022, 1999, 1006, 1049, 20829, 1010, 1050, 4460, 2566, 9991, 1007, 2061, 2065, 2017, 2298, 2012, 1996, 4130, 1037, 9090, 3138, 2013, 2049, 3988, 3295, 2000, 2049, 102, 101, 1018, 2061, 1010, 2005, 2035, 1056, 2057, 2031, 1176, 1006, 2358, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 1176, 1006, 1055, 2692, 1007, 1010, 2029, 12748, 3465, 1006, 2358, 1007, 1608, 1006, 1015, 1009, 100, 1007, 1016, 2213, 2078, 3465, 1006, 1055, 2692, 1007, 1087, 6578, 1006, 1049, 2012, 22943, 1010, 1050, 1007, 1010, 102, 101, 2057, 2064, 1999, 2755, 2265, 2008, 5301, 3433, 2003, 2025, 7182, 1999, 2122, 2399, 1010, 2130, 2065, 100, 2003, 27258, 2135, 2235, 1999, 1996, 4635, 1997, 1996, 13523, 22943, 1012, 102, 101, 1999, 3327, 1010, 2130, 2295, 19490, 3465, 1011, 6631, 2003, 2025, 1037, 13523, 22943, 2208, 1010, 1996, 6947, 1997, 3393, 14760, 1018, 29625, 2475, 12033, 8053, 2092, 2000, 5301, 1011, 3433, 10949, 2065, 2057, 5672, 1996, 10629, 3252, 2007, 1037, 6375, 13523, 22943, 2383, 1049, 4219, 1998, 2007, 4635, 1054, 1027, 1049, 1013, 1016, 1012, 102, 101, 2057, 3568, 2031, 1996, 2206, 1024, 9872, 1018, 29625, 2620, 1012, 102, 101, 2045, 6526, 1037, 13523, 22943, 2208, 1997, 4635, 1054, 1027, 1049, 1013, 1016, 2107, 2008, 1996, 3976, 1997, 12503, 2005, 5301, 1011, 3433, 10949, 2938, 2483, 14213, 1052, 15068, 4313, 1006, 100, 1010, 1049, 2012, 22943, 1007, 1609, 1015, 1009, 1016, 1006, 1016, 1049, 1013, 1016, 1597, 1015, 1007, 100, 1013, 1049, 29625, 10465, 2399, 1031, 102, 101, 2169, 2447, 1045, 2038, 2048, 4506, 1054, 2030, 1038, 1010, 1045, 29625, 2063, 29625, 1010, 9033, 1027, 1063, 1054, 1010, 1038, 1065, 1012, 102, 101, 1037, 2447, 2038, 3465, 1015, 2005, 2169, 5043, 3341, 2006, 2029, 2002, 21090, 2015, 2007, 2010, 11429, 1012, 102, 101, 3465, 2072, 1006, 1055, 1007, 1027, 1052, 1006, 1045, 1010, 1046, 1007, 1596, 1041, 1045, 1006, 1055, 1045, 1027, 1055, 1046, 1007, 1012, 102, 101, 1996, 3452, 2591, 3465, 2003, 1996, 7680, 1997, 1996, 5366, 1997, 2035, 1996, 5198, 1010, 4606, 1015, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 1006, 1055, 1007, 1027, 1015, 1009, 1052, 1045, 1596, 1050, 3465, 2072, 1006, 1055, 1007, 1012, 102, 101, 2009, 2003, 19647, 2000, 2265, 2008, 2122, 2399, 2024, 20176, 2399, 1031, 2403, 1033, 1998, 2008, 1996, 4022, 3853, 2064, 2022, 2128, 15773, 2004, 2022, 1176, 1006, 1055, 1007, 1027, 1006, 3465, 1006, 1055, 1007, 1597, 1015, 1007, 1013, 1016, 1012, 102, 101, 1996, 2048, 2591, 23569, 28591, 7300, 1999, 1037, 10465, 2208, 2024, 1000, 2035, 2630, 1000, 1998, 1000, 2035, 2417, 1000, 1010, 2119, 1997, 2029, 2024, 2036, 1037, 10594, 14442, 1006, 2061, 1996, 3976, 1997, 9211, 2003, 1015, 1007, 1012, 102, 101, 2006, 1996, 2060, 2192, 1010, 2045, 2024, 10594, 1041, 26147, 12322, 4360, 2007, 3465, 1179, 1006, 1050, 1016, 1007, 1012, 102, 101, 1996, 2682, 5577, 4895, 11179, 2098, 10465, 2399, 1025, 1999, 18215, 8663, 5054, 13203, 1010, 1996, 7926, 2031, 2512, 29624, 2638, 26792, 15871, 1998, 1996, 3465, 2000, 1037, 2447, 2003, 1996, 2561, 3635, 1997, 7926, 2006, 2029, 2009, 21090, 2015, 2007, 2049, 10638, 1012, 102, 101, 1999, 2256, 2944, 1010, 2057, 2064, 2265, 1996, 2206, 1006, 2005, 6947, 2015, 1010, 2156, 1996, 2440, 2544, 1031, 1019, 1033, 1007, 1024, 9872, 1018, 29625, 2683, 1012, 102, 101, 2005, 2151, 4895, 11179, 2098, 10465, 2208, 1006, 15384, 2290, 1007, 1010, 2005, 2151, 100, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 1057, 1039, 2290, 1007, 1609, 1006, 1050, 1597, 1015, 1007, 100, 1009, 2487, 1012, 102, 101, 2005, 100, 1028, 1600, 1016, 1597, 1015, 2057, 2064, 2265, 1052, 15068, 19892, 1006, 100, 1010, 1057, 1039, 2290, 1007, 1027, 1179, 1006, 1050, 1016, 1007, 1012, 102, 101, 2005, 1037, 18215, 10465, 2208, 2057, 2064, 2265, 2019, 27258, 2896, 5391, 1012, 102, 101, 2005, 2151, 18215, 10465, 2208, 1006, 15868, 2290, 1007, 1010, 2005, 2151, 100, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 1059, 1039, 2290, 1007, 1609, 1006, 1015, 1009, 100, 1007, 1050, 1012, 102, 101, 1999, 2023, 2930, 2057, 5136, 3105, 19940, 2006, 15142, 6681, 1006, 1046, 17421, 1007, 1006, 2156, 1031, 2385, 1033, 1007, 4225, 2011, 1006, 1050, 1010, 1049, 1010, 1039, 1007, 2004, 4076, 1012, 102, 101, 1996, 2275, 1050, 2003, 1037, 2275, 1997, 1050, 5841, 1010, 1998, 1049, 2003, 1996, 2275, 1997, 1049, 6681, 1012, 102, 101, 2169, 2447, 2003, 3378, 2007, 1037, 3105, 1010, 2061, 2031, 1050, 2867, 1012, 102, 101, 2296, 3105, 2064, 17607, 1037, 7170, 2006, 2028, 1997, 1996, 6681, 1010, 2061, 2005, 2296, 2447, 1046, 2049, 2275, 1997, 22945, 4506, 2003, 2000, 23911, 3105, 1046, 2000, 2070, 3698, 1045, 1596, 1049, 1012, 102, 101, 2169, 3105, 1046, 1596, 1050, 2038, 3378, 1037, 3465, 25022, 1010, 1046, 2005, 2770, 2006, 3698, 1045, 1596, 1049, 1012, 102, 101, 2445, 2019, 8775, 1997, 5841, 2000, 6681, 1010, 1996, 7170, 1997, 3698, 1045, 2003, 1996, 7680, 1997, 1996, 5366, 1997, 1996, 5841, 2008, 2024, 4137, 2000, 2008, 3698, 1010, 1045, 29625, 2063, 29625, 1010, 5622, 1006, 1055, 1007, 1027, 1052, 1046, 1596, 1038, 1045, 1006, 1055, 1007, 25022, 1010, 1046, 2073, 12170, 1006, 102, 101, 1996, 3465, 1997, 1037, 2447, 1046, 2003, 1996, 7170, 2006, 1996, 3698, 2008, 2447, 1046, 3479, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 3501, 1006, 1055, 1007, 1027, 1048, 2015, 1046, 1006, 1055, 1007, 1012, 102, 101, 2005, 1996, 2591, 3465, 2057, 2224, 1996, 3084, 9739, 1010, 2029, 2003, 1996, 7170, 2006, 1996, 2087, 8209, 3698, 1010, 1045, 29625, 2063, 29625, 1010, 3465, 1006, 1055, 1007, 1027, 21510, 5622, 1006, 1055, 1007, 1012, 102, 101, 1996, 3976, 1997, 9211, 1999, 2122, 2399, 2003, 1015, 1010, 2144, 2045, 2003, 2467, 1037, 5760, 10594, 14442, 2029, 2003, 2036, 14286, 15502, 1031, 2184, 1033, 1012, 102, 101, 1996, 3976, 1997, 12503, 1999, 2122, 2399, 2064, 2022, 27258, 2135, 2312, 1010, 2130, 2005, 2048, 6681, 1010, 2043, 100, 2003, 2312, 4102, 2000, 1015, 1013, 1050, 29625, 1006, 2005, 6947, 2015, 1010, 2156, 1996, 2440, 2544, 1031, 1019, 1033, 1007, 1024, 9872, 1018, 29625, 14526, 1012, 102, 101, 2005, 3105, 19940, 2006, 15142, 6681, 1010, 2005, 1049, 1027, 1016, 6681, 1998, 2151, 100, 1028, 1016, 1013, 1050, 1010, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 1046, 6342, 1049, 1007, 1609, 1006, 1015, 1009, 100, 1007, 1050, 1013, 1016, 100, 1015, 1597, 1016, 100, 100, 1009, 1016, 100, 1027, 1179, 102, 101, 2005, 3105, 19940, 2006, 7235, 6681, 1006, 1046, 5332, 2213, 1007, 2057, 2031, 1037, 3722, 3356, 5391, 1010, 2130, 2005, 2312, 2566, 20689, 23757, 2015, 1012, 102, 101, 2057, 2085, 5136, 1996, 3466, 1997, 2566, 20689, 23757, 2015, 2006, 6721, 2344, 2190, 1011, 3433, 10949, 1006, 2005, 5301, 1011, 3433, 10949, 1010, 6721, 1998, 4748, 14028, 10980, 2140, 2344, 2024, 5662, 2144, 1996, 27248, 2064, 3432, 5454, 2025, 2000, 3426, 1037, 2447, 2000, 2693, 1007, 1012, 102, 101, 2256, 2364, 2765, 2003, 2008, 2005, 1996, 5041, 2465, 1997, 1156, 1011, 3835, 2399, 3107, 2011, 1031, 1017, 1033, 1010, 2029, 2005, 5377, 1156, 2950, 20176, 2399, 2007, 7399, 1006, 2030, 5377, 1011, 3014, 17505, 1007, 2397, 9407, 4972, 1010, 3006, 1011, 6631, 2399, 1010, 1998, 2116, 2500, 1010, 2122, 10949, 102, 101, 2006, 1996, 2060, 2192, 1010, 2057, 2507, 2896, 19202, 4760, 2008, 3105, 1011, 19940, 1998, 10465, 2399, 2064, 2145, 16582, 9996, 1012, 102, 101, 2292, 2149, 5136, 2019, 6635, 4022, 2208, 1012, 102, 101, 2292, 1055, 2022, 1037, 6337, 1997, 1996, 2867, 1998, 2292, 1055, 1045, 19090, 1996, 9563, 2550, 2011, 1037, 2190, 6072, 26029, 3366, 2693, 2011, 2447, 1045, 2429, 2000, 3465, 2072, 1012, 102, 101, 2005, 2169, 2447, 1045, 9375, 1594, 1045, 1006, 1055, 1007, 1027, 3465, 2072, 1006, 1055, 1007, 1597, 3465, 2072, 1006, 1055, 1045, 1007, 1998, 1594, 1006, 1055, 1007, 1027, 1052, 1045, 1594, 1045, 1006, 1055, 1007, 1012, 102, 101, 2019, 6635, 4022, 2208, 2007, 1037, 4022, 3853, 1176, 2003, 1156, 1597, 3835, 2065, 2546, 2005, 2151, 2110, 1055, 2057, 2031, 3465, 1006, 1055, 1007, 1608, 1156, 7361, 2102, 1009, 1016, 1594, 1006, 1055, 1007, 1012, 102, 101, 2004, 3491, 1999, 1031, 1017, 1033, 2193, 1997, 2590, 2399, 2024, 1156, 1011, 3835, 1010, 2005, 1156, 5020, 2000, 1996, 3976, 1997, 26395, 1997, 1996, 2208, 29625, 5886, 2063, 2057, 2265, 2008, 1156, 1011, 3835, 2399, 5678, 2031, 1996, 3200, 2008, 1996, 3517, 3976, 1997, 12503, 1999, 1996, 6721, 2344, 2944, 2003, 2069, 102, 101, 2057, 2707, 2011, 4760, 2008, 2065, 1996, 2995, 1006, 4895, 4842, 20689, 8270, 1007, 3465, 1997, 1996, 2783, 9563, 1055, 2003, 3618, 2084, 1016, 29720, 1087, 23569, 1010, 2059, 2053, 3043, 2129, 1996, 27248, 14171, 2015, 1996, 5366, 1010, 1996, 3517, 4530, 1999, 4022, 2003, 2012, 2560, 3465, 1006, 1055, 1007, 1006, 1015, 29626, 2549, 1597, 100, 102, 101, 2008, 2003, 1010, 1996, 27248, 2089, 2191, 1996, 3465, 13467, 1016, 29720, 13186, 2102, 1006, 1055, 2692, 1007, 2021, 2069, 8184, 1012, 102, 101, 2005, 100, 1026, 1015, 29626, 16703, 1010, 2065, 3465, 1006, 2358, 1007, 1609, 1016, 29720, 7361, 2102, 2059, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1597, 1176, 1006, 2358, 1007, 1033, 1608, 1597, 3465, 1006, 2358, 1007, 1013, 1006, 1022, 2078, 1007, 1012, 102, 101, 2004, 2682, 1010, 2292, 1055, 1045, 19090, 1996, 9563, 2550, 2011, 1037, 2190, 1011, 3433, 2693, 2011, 2447, 1045, 2429, 2000, 3465, 2072, 1010, 1998, 100, 100, 1045, 19090, 1996, 9563, 2550, 2011, 1037, 2190, 1011, 3433, 2693, 2011, 2447, 1045, 2429, 2000, 1996, 2566, 20689, 8270, 3465, 3853, 3465, 1056, 1045, 1012, 102, 101, 2061, 1010, 3465, 2072, 1006, 1055, 1045, 1007, 1608, 3465, 2072, 1006, 100, 1055, 1045, 1007, 1998, 3465, 1056, 1045, 1006, 100, 1055, 1045, 1007, 1608, 3465, 1056, 1045, 1006, 1055, 1045, 1007, 1012, 102, 101, 9131, 2008, 1594, 1045, 1006, 1055, 1007, 1027, 3465, 2072, 1006, 1055, 1007, 1597, 3465, 2072, 1006, 1055, 1045, 1007, 1998, 1594, 1006, 1055, 1007, 1027, 1052, 1045, 1594, 1045, 1006, 1055, 1007, 1012, 102, 101, 2057, 2097, 2036, 2342, 1996, 2206, 2048, 12450, 1024, 1019, 2023, 12748, 2008, 2007, 2152, 9723, 1996, 3465, 2097, 4530, 2000, 2917, 1016, 29720, 7361, 2102, 2306, 1037, 17505, 2193, 1997, 4084, 1012, 2487, 1012, 102, 101, 100, 1594, 1045, 1006, 1055, 1007, 1027, 3465, 1056, 1045, 1006, 1055, 1007, 1597, 3465, 1056, 1045, 1006, 100, 1055, 1045, 1007, 2003, 1996, 7620, 1999, 2566, 20689, 8270, 3465, 1997, 2447, 1045, 2349, 2000, 1037, 2190, 1011, 3433, 2011, 2447, 1045, 1999, 1996, 2566, 20689, 8270, 2208, 1010, 100, 1594, 100, 100, 1594, 102, 101, 100, 1594, 1045, 1006, 1055, 1007, 1027, 3465, 2072, 1006, 1055, 1007, 1597, 3465, 2072, 1006, 100, 1055, 1045, 1007, 2003, 1996, 7620, 1999, 4895, 4842, 20689, 8270, 3465, 1997, 2447, 1045, 2349, 2000, 1037, 2190, 1011, 3433, 2011, 2447, 1045, 1999, 1996, 2566, 20689, 8270, 2208, 1010, 100, 1594, 100, 100, 1594, 1006, 1055, 1007, 1027, 102, 101, 2085, 1010, 6814, 3465, 1006, 1055, 1007, 1028, 1016, 29720, 7361, 2102, 1012, 102, 101, 2059, 2011, 6210, 1997, 1156, 1011, 3835, 2057, 2031, 1594, 1006, 1055, 1007, 1028, 3465, 1006, 1055, 1007, 1013, 1018, 1012, 102, 101, 2085, 2057, 2215, 2000, 2224, 2023, 2000, 2265, 100, 1594, 100, 100, 1594, 1006, 1055, 1007, 2442, 2022, 2312, 2004, 2092, 1012, 102, 101, 4919, 1010, 2005, 2169, 1045, 1010, 2144, 1996, 7620, 1999, 2566, 20689, 8270, 3465, 1997, 1996, 2190, 1011, 3433, 2000, 1996, 2566, 20689, 8270, 2208, 2003, 2012, 2560, 1996, 7620, 1999, 2566, 20689, 8270, 5366, 1997, 1996, 2190, 3433, 2000, 1996, 4895, 4842, 20689, 8270, 2208, 1010, 2057, 2031, 1024, 100, 1594, 1045, 1006, 1055, 1007, 1609, 3465, 1056, 102, 101, 1006, 1019, 29625, 2475, 1007, 2085, 1010, 7680, 6562, 2058, 2035, 1045, 2057, 2031, 1024, 100, 1594, 1006, 1055, 1007, 1609, 1594, 1006, 1055, 1007, 1597, 100, 1006, 1055, 1007, 1609, 3465, 1006, 1055, 1007, 1006, 1015, 29626, 2549, 1597, 100, 1007, 1012, 102, 101, 2023, 2965, 2008, 2043, 1037, 6721, 2447, 5829, 2000, 2010, 1000, 2190, 2566, 20689, 8270, 3433, 1000, 1010, 2057, 2031, 7416, 1031, 100, 1594, 1045, 1006, 1055, 1007, 1033, 1609, 3465, 1006, 1055, 1007, 1031, 1015, 29626, 2549, 1597, 100, 1033, 1013, 1050, 29625, 19779, 1010, 2011, 1037, 2714, 6685, 2000, 2008, 8522, 1006, 1019, 29625, 2475, 1007, 2057, 102, 101, 2061, 1010, 100, 1594, 1045, 1006, 1055, 1007, 1609, 1006, 100, 1594, 1045, 1006, 1055, 1007, 1597, 100, 1006, 1055, 1007, 1007, 1013, 1006, 1015, 1597, 100, 1007, 1012, 102, 101, 5128, 2023, 2362, 2007, 1996, 2682, 1998, 2478, 1996, 2755, 2008, 1041, 2072, 1031, 3465, 2072, 1006, 1055, 1007, 1033, 1027, 3465, 1006, 1055, 1007, 1013, 1050, 3957, 2224, 2072, 1031, 100, 1594, 1045, 1006, 1055, 1007, 1033, 1609, 3465, 1006, 1055, 1007, 1031, 1015, 29626, 2549, 1597, 100, 1033, 1013, 22064, 16066, 2232, 2003, 1996, 3517, 102, 101, 2065, 100, 1026, 1015, 29626, 16703, 1010, 2057, 2059, 2131, 1996, 9059, 2765, 29625, 6499, 1010, 3393, 14760, 1019, 29625, 2487, 3065, 2065, 1996, 2995, 1006, 4895, 4842, 20689, 8270, 1007, 3465, 1997, 2783, 9563, 1055, 2003, 3618, 2084, 1016, 29720, 1087, 23569, 1010, 2059, 2053, 3043, 2129, 1996, 27248, 14171, 2015, 1996, 5366, 1010, 1996, 3517, 4530, 1999, 4022, 2003, 2012, 102, 101, 1037, 24188, 3630, 4246, 5391, 6685, 2064, 2059, 2022, 2109, 2000, 2360, 2008, 2007, 2152, 9723, 1996, 7680, 1997, 9010, 1999, 4022, 2097, 2022, 2485, 2000, 2037, 17626, 1012, 102, 101, 3602, 2008, 2057, 2079, 2025, 2265, 2008, 2320, 3465, 2003, 2659, 2009, 2097, 9352, 2994, 2045, 5091, 1011, 2074, 2008, 2065, 1996, 27248, 2003, 2412, 2583, 2000, 2191, 1996, 3465, 2175, 2682, 1016, 29720, 7361, 2102, 2059, 2007, 2152, 9723, 2009, 2097, 2031, 2000, 4530, 2067, 2917, 2009, 1999, 1037, 2235, 2193, 1997, 102, 101, 2000, 2079, 2061, 1010, 2057, 2224, 1996, 2206, 3176, 3393, 14760, 1024, 3393, 14760, 1019, 29625, 2475, 1012, 102, 101, 2005, 2151, 3643, 1997, 3465, 1006, 2358, 1007, 1010, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1597, 1176, 1006, 2358, 1007, 1033, 1608, 100, 1006, 1055, 1007, 1013, 1006, 1050, 1006, 1015, 1597, 100, 1007, 1007, 1012, 102, 101, 2023, 2074, 4076, 2013, 1996, 4861, 100, 1594, 100, 100, 1594, 1045, 1006, 1055, 1007, 1609, 1006, 100, 1594, 1045, 1006, 1055, 1007, 1597, 100, 1006, 1055, 1007, 1007, 1013, 1006, 1015, 1597, 100, 1007, 1010, 1998, 2478, 1996, 2755, 100, 1594, 100, 100, 1594, 1045, 1006, 1055, 1007, 2003, 102, 101, 2057, 2064, 2085, 2224, 2122, 3393, 14760, 2015, 2000, 6011, 2008, 2005, 1156, 1011, 3835, 2399, 1996, 3517, 3976, 1997, 12503, 1999, 1996, 6721, 2344, 2944, 2003, 2069, 1051, 1006, 1156, 1087, 6578, 1007, 2130, 2005, 5377, 100, 1028, 1014, 1012, 102, 101, 9131, 2008, 2057, 9375, 6578, 1027, 29248, 1013, 27723, 2073, 27723, 1608, 1015, 1608, 29248, 2024, 5300, 2107, 2008, 2005, 2151, 2110, 1055, 2057, 2031, 1176, 1006, 1055, 1007, 1596, 1031, 27723, 13186, 2102, 1006, 1055, 1007, 1010, 29248, 13186, 2102, 1006, 1055, 1007, 1033, 1012, 102, 101, 2005, 2151, 1056, 1028, 1014, 1010, 2057, 2031, 1007, 1033, 1012, 102, 101, 2023, 2097, 2022, 7182, 2138, 3393, 14760, 1019, 29625, 2475, 12748, 2008, 1996, 17626, 2064, 2196, 3623, 2011, 2205, 2172, 1012, 102, 101, 1999, 3327, 1010, 2130, 2065, 1041, 1031, 3465, 1006, 2358, 1007, 1033, 1608, 1018, 29720, 7361, 2102, 1010, 2011, 3393, 14760, 1019, 29625, 2475, 2057, 2145, 2031, 2063, 1031, 1176, 1006, 2358, 1007, 1033, 1608, 4098, 1031, 1019, 2278, 2475, 29720, 7361, 2102, 1010, 29248, 13186, 2102, 1006, 1055, 2692, 1007, 1033, 1608, 1019, 2278, 2475, 29720, 13186, 2102, 1006, 1055, 2692, 1007, 1012, 102, 101, 3568, 1010, 1041, 1031, 3465, 1006, 2358, 1007, 1033, 1608, 1019, 29720, 13186, 2102, 1006, 1055, 2692, 1007, 1087, 6578, 1012, 102, 101, 2057, 2097, 2265, 2008, 2065, 1041, 1031, 3465, 1006, 2358, 1007, 1033, 1609, 1018, 29720, 7361, 2102, 2059, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1033, 1608, 1041, 1031, 1176, 1006, 26261, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1033, 1597, 1041, 1031, 1176, 1006, 2358, 1007, 1033, 1608, 100, 1013, 1006, 1050, 1006, 102, 101, 2292, 13866, 2022, 1996, 9723, 2008, 3465, 1006, 2358, 1007, 1609, 1016, 29720, 7361, 2102, 1012, 102, 101, 3568, 1010, 2057, 2031, 1024, 1041, 1031, 3465, 1006, 2358, 1007, 1033, 1027, 13866, 2063, 1031, 3465, 1006, 2358, 1007, 1064, 3465, 1006, 2358, 1007, 1609, 1016, 29720, 7361, 2102, 1033, 1009, 1006, 1015, 1597, 13866, 1007, 1041, 1031, 3465, 1006, 2358, 1007, 1064, 3465, 1006, 2358, 1007, 1608, 1016, 29720, 7361, 2102, 1033, 1608, 13866, 2063, 1031, 102, 101, 2947, 1010, 2004, 9059, 1010, 2065, 1041, 1031, 3465, 1006, 2358, 1007, 1033, 1609, 1018, 29720, 7361, 2102, 2059, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1033, 1608, 1041, 1031, 1176, 1006, 2358, 1007, 1033, 1010, 13946, 1996, 4366, 29625, 3022, 3491, 1999, 1031, 1017, 1033, 1010, 1037, 2193, 1997, 2691, 2399, 2024, 1156, 1011, 102, 101, 3602, 1024, 5875, 2135, 1010, 1996, 11302, 1999, 3393, 14760, 1019, 29625, 2487, 7807, 2091, 1999, 1996, 4748, 14028, 10980, 2140, 1011, 2344, 4292, 1024, 2005, 2742, 1010, 2005, 3006, 1011, 6631, 2399, 1010, 2029, 2024, 1156, 1011, 3835, 2005, 1156, 1027, 1016, 1010, 2057, 2031, 3976, 1997, 12503, 1179, 1006, 8833, 1050, 1007, 2130, 2005, 100, 102, 101, 2005, 3105, 19940, 2057, 2064, 2265, 1006, 2156, 2440, 2544, 1031, 1019, 1033, 2005, 6947, 2015, 1007, 1024, 9872, 1019, 29625, 2475, 1012, 102, 101, 2005, 1049, 1027, 1016, 6681, 1010, 2005, 2151, 100, 1028, 1016, 1013, 1050, 1010, 2057, 2031, 2008, 1052, 15068, 1054, 7987, 1006, 100, 1010, 1046, 6342, 1049, 1007, 1609, 100, 1013, 1022, 1012, 102, 101, 2057, 2064, 6660, 15581, 2256, 2896, 19202, 2005, 10465, 2399, 2000, 1996, 6721, 2344, 2944, 1012, 102, 101, 2005, 1037, 18215, 10465, 2208, 2057, 2064, 2265, 2019, 27258, 2896, 5391, 1012, 102, 101, 2005, 2151, 18215, 10465, 2208, 1006, 15868, 2290, 1007, 1010, 2005, 2151, 100, 1010, 2057, 2031, 1052, 15068, 1054, 7987, 1006, 100, 1010, 1059, 1039, 2290, 1007, 1609, 1006, 1015, 1009, 100, 1007, 1050, 1013, 1016, 1597, 1015, 1012, 102, 101, 2057, 2085, 5136, 1996, 2553, 2008, 1010, 2738, 2084, 2566, 20689, 10472, 15871, 1010, 1996, 27248, 2612, 7711, 1037, 3056, 2193, 1997, 8734, 2867, 2040, 2064, 2693, 12098, 16313, 19848, 6588, 2090, 2190, 1011, 3433, 5829, 2011, 1996, 6623, 1006, 2512, 29624, 3762, 13471, 10196, 1007, 2867, 1012, 102, 101, 2256, 2364, 3463, 1999, 2023, 2944, 2024, 2019, 3356, 5391, 2005, 1156, 1011, 3835, 2399, 1010, 4760, 2008, 6721, 1011, 2344, 2190, 1011, 3433, 10949, 2003, 24501, 18622, 4765, 2000, 8734, 2867, 1010, 1998, 1037, 2896, 5391, 2005, 2275, 1011, 5266, 2399, 1010, 4760, 2008, 1999, 2122, 2399, 2019, 27248, 2064, 3623, 102, 101, 2057, 2036, 2507, 3463, 2005, 3105, 1011, 19940, 1998, 10465, 2399, 2004, 2092, 1012, 102, 101, 3041, 1010, 2057, 3662, 2008, 1156, 1011, 3835, 2399, 2024, 24501, 18622, 4765, 2000, 3465, 2566, 20689, 23757, 2015, 1999, 1996, 6721, 2344, 2944, 1012, 102, 101, 2182, 2057, 2265, 2027, 2024, 2036, 24501, 18622, 4765, 2000, 1996, 2804, 1997, 8734, 2867, 1012, 102, 101, 2005, 2023, 1010, 2057, 2191, 2048, 3176, 9608, 17568, 2055, 1996, 2208, 1998, 1996, 2193, 1997, 8734, 2867, 1024, 11213, 1015, 1006, 18847, 25009, 3012, 1007, 1024, 2057, 7868, 2008, 5815, 2047, 2867, 2046, 1996, 2208, 2064, 2069, 3623, 1996, 3465, 22667, 2011, 2151, 2445, 2447, 1006, 1041, 29625, 2290, 29625, 1010, 2004, 1999, 7399, 102, 101, 11213, 1016, 1006, 2659, 3622, 4254, 1997, 8734, 2867, 1007, 1024, 9563, 1055, 1010, 1996, 2591, 3465, 1997, 1055, 2007, 8734, 2867, 3718, 2003, 2012, 2560, 1021, 29626, 2620, 1997, 1996, 2591, 3465, 1997, 1055, 2007, 8734, 2867, 2443, 1012, 102, 101, 1999, 2060, 2616, 1010, 1996, 8734, 2867, 2064, 2025, 2689, 1996, 3465, 1997, 2151, 2445, 2110, 2011, 2062, 2084, 1037, 2235, 5377, 5387, 29625, 8545, 2097, 5136, 6721, 2190, 1011, 3433, 10949, 1012, 102, 101, 9131, 2008, 1999, 2023, 2944, 1010, 8734, 2867, 2089, 2693, 12098, 16313, 19848, 6588, 2090, 2048, 5829, 1997, 1996, 3671, 1006, 2512, 29624, 3762, 13471, 10196, 1007, 2867, 1012, 102, 101, 1996, 3145, 2000, 1996, 4106, 2003, 2008, 2057, 2097, 2650, 1996, 3465, 1998, 4022, 1997, 1996, 9563, 15718, 1996, 8734, 2867, 1010, 10523, 1996, 8734, 2867, 2004, 6414, 2566, 20689, 23757, 2015, 2000, 1996, 8690, 5366, 1997, 1996, 3671, 2867, 1010, 4786, 2068, 2000, 2552, 1999, 2019, 5866, 2126, 1012, 102, 101, 2057, 2059, 2097, 3582, 1996, 2364, 4084, 1997, 1996, 4106, 1997, 1156, 1011, 3835, 2399, 1999, 2930, 1019, 29625, 2487, 1012, 102, 101, 2174, 1010, 3602, 2008, 2085, 1996, 8734, 2867, 2064, 7461, 1996, 8690, 3465, 1997, 2151, 2445, 3671, 2447, 12381, 1010, 2130, 2295, 2011, 11213, 1016, 2027, 2064, 2025, 2689, 1996, 9572, 3465, 2011, 2205, 2172, 29625, 13102, 8586, 18513, 3973, 1010, 2292, 2867, 1015, 1010, 1012, 1012, 1012, 1010, 1050, 2022, 1996, 3671, 2867, 1010, 102, 101, 6660, 1010, 9375, 3465, 2072, 1006, 1055, 1007, 1998, 3465, 1056, 1045, 1006, 1055, 1007, 2000, 2022, 1996, 3465, 22667, 2011, 2447, 1045, 2007, 8734, 2867, 3718, 2030, 2443, 1010, 4414, 1012, 102, 101, 2061, 1010, 3465, 1006, 1055, 1007, 1027, 1052, 1050, 1045, 1027, 1015, 3465, 2072, 1006, 1055, 1007, 1998, 3465, 1056, 1006, 1055, 1007, 1027, 1052, 1050, 1009, 1047, 1045, 1027, 1015, 3465, 1056, 1045, 1006, 1055, 1007, 1012, 102, 101, 2036, 1010, 2011, 17568, 1015, 1998, 1016, 2057, 2031, 3465, 1056, 1006, 1055, 1007, 1609, 3465, 1006, 1055, 1007, 1609, 1021, 1022, 3465, 1056, 1006, 1055, 1007, 1012, 102, 101, 9375, 1996, 4022, 1176, 1006, 1055, 1007, 2000, 2022, 1996, 3115, 4022, 3853, 2005, 9563, 1055, 2021, 2007, 8734, 2867, 3718, 1010, 1998, 2292, 2358, 19090, 1996, 2110, 2012, 2051, 1056, 1006, 10320, 2169, 2693, 1997, 1037, 2512, 29624, 3762, 13471, 10196, 2447, 2004, 2028, 2051, 3357, 1007, 1012, 102, 101, 2057, 2085, 6011, 1996, 2206, 3393, 14760, 29625, 16930, 2863, 1020, 29625, 2487, 1012, 102, 101, 2065, 3465, 1056, 1006, 2358, 1007, 1609, 1016, 29720, 7361, 2102, 2059, 2057, 2031, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1597, 1176, 1006, 2358, 1007, 1033, 1608, 1597, 3465, 1056, 1006, 2358, 1007, 1013, 1006, 1022, 2078, 1007, 1012, 102, 101, 2445, 9563, 1055, 1010, 2292, 1055, 1045, 19090, 1996, 9563, 4525, 2013, 2447, 1045, 4488, 2190, 1011, 3433, 2000, 1996, 8690, 5366, 1006, 1045, 29625, 2063, 29625, 1010, 2007, 8734, 2867, 2443, 1007, 1012, 102, 101, 100, 1594, 100, 100, 1594, 1027, 1052, 1050, 1045, 1027, 1015, 1031, 3465, 2072, 1006, 1055, 1007, 1597, 3465, 2072, 1006, 1055, 1045, 1007, 1033, 1012, 102, 101, 1999, 2060, 2616, 1010, 100, 1594, 1013, 1050, 2003, 1996, 3517, 4530, 1999, 1996, 4022, 1176, 3303, 2011, 1037, 6721, 2512, 29624, 3762, 13471, 10196, 2447, 4488, 2190, 1011, 3433, 2000, 1996, 5366, 2007, 8734, 2867, 100, 1594, 100, 100, 1594, 1027, 1052, 1050, 1045, 1027, 1015, 1031, 3465, 2072, 1006, 1055, 1007, 1597, 3465, 2072, 102, 101, 2023, 2003, 1037, 5399, 4326, 11712, 2144, 1996, 8734, 2867, 2024, 2025, 2941, 4488, 2190, 3433, 1012, 102, 101, 9690, 1010, 2011, 1996, 6210, 1997, 1156, 1011, 3835, 1010, 2065, 3465, 1056, 1006, 1055, 1007, 1609, 1016, 29720, 7361, 2102, 2059, 2057, 100, 1594, 100, 100, 1594, 1006, 1055, 1007, 1609, 3465, 1056, 1006, 1055, 1007, 1013, 1018, 1012, 102, 101, 2023, 12748, 2361, 1050, 1009, 1047, 1045, 1027, 1015, 3465, 1056, 1045, 1006, 1055, 1045, 1007, 1608, 1017, 1018, 13186, 2102, 1056, 1006, 1055, 1007, 1010, 1998, 3568, 7543, 2361, 1050, 1045, 1027, 1015, 3465, 1056, 1045, 1006, 1055, 1045, 1007, 1608, 1017, 1018, 3465, 1056, 1006, 1055, 1007, 2004, 2092, 1012, 102, 101, 5128, 2023, 2362, 1010, 2057, 2085, 2031, 1024, 100, 1594, 1006, 1055, 1007, 1027, 3465, 1006, 1055, 1007, 1597, 1050, 1060, 1045, 1027, 1015, 3465, 2072, 1006, 1055, 1045, 1007, 1609, 3465, 1006, 1055, 1007, 1597, 1050, 1060, 1045, 1027, 1015, 3465, 1056, 1045, 1006, 1055, 1045, 1007, 1609, 3465, 1006, 102, 101, 100, 1594, 1013, 1050, 2003, 1996, 3517, 4530, 1999, 1176, 1010, 2023, 14730, 1996, 6947, 29625, 3406, 17908, 1996, 3517, 5366, 1010, 2057, 2085, 2342, 2019, 11698, 1997, 3393, 14760, 1019, 29625, 2475, 1010, 4760, 2008, 2130, 2065, 3465, 1056, 1006, 2358, 1007, 2003, 2659, 1010, 1996, 3517, 3643, 1997, 1996, 4022, 2097, 2025, 3623, 102, 101, 2005, 2151, 3643, 1997, 3465, 1056, 1006, 2358, 1007, 1010, 2057, 2031, 1041, 1031, 1176, 1006, 2358, 1009, 2487, 1007, 1597, 1176, 1006, 2358, 1007, 1033, 1608, 3465, 1056, 1006, 2358, 1007, 1013, 1006, 1022, 2078, 1007, 1012, 102, 101, 2292, 1055, 1027, 2358, 29625, 2478, 1996, 14869, 2013, 1996, 6947, 1997, 3393, 14760, 1020, 29625, 2487, 2057, 100, 1594, 1006, 1055, 1007, 1027, 3465, 1006, 1055, 1007, 1597, 1050, 1060, 1045, 1027, 1015, 3465, 2072, 1006, 1055, 1045, 1007, 1609, 1021, 1022, 3465, 1056, 1006, 1055, 1007, 1597, 1050, 1060, 1045, 1027, 1015, 3465, 2072, 102, 101, 2023, 2003, 2012, 2560, 1597, 1015, 1022, 3465, 1056, 1006, 1055, 1007, 2004, 9059, 29625, 18780, 3436, 2122, 2362, 2057, 2064, 2085, 2265, 1996, 2206, 11698, 1997, 9872, 1019, 29625, 2487, 1010, 2005, 1156, 1011, 3835, 2399, 17087, 17568, 1015, 1998, 1016, 1012, 102, 101, 2005, 2151, 1056, 1028, 1014, 1010, 1041, 1031, 1176, 1006, 2358, 1007, 1033, 1608, 4098, 1031, 1020, 29720, 7361, 2102, 1010, 3465, 1006, 1055, 2692, 1007, 1033, 1608, 1020, 29720, 13186, 2102, 1006, 1055, 2692, 1007, 1012, 102, 101, 2633, 1010, 3602, 2008, 2065, 2045, 2003, 1037, 10351, 3643, 6578, 1027, 4098, 2015, 1031, 3465, 1056, 1006, 1055, 1007, 1013, 1176, 1006, 1055, 1007, 1033, 2059, 1996, 2682, 2765, 12748, 2008, 2005, 2035, 1056, 1028, 1014, 1010, 1041, 1031, 3465, 1056, 1006, 2358, 1007, 1033, 1608, 4098, 1031, 1020, 29720, 7361, 2102, 1010, 102, 101, 2057, 2085, 5136, 2275, 1011, 3104, 2399, 1998, 2507, 1037, 2810, 4760, 2008, 2074, 2028, 8734, 2447, 2064, 3426, 2190, 1011, 3433, 10949, 2000, 2693, 2013, 2019, 14442, 1997, 3465, 1051, 1006, 23569, 1007, 2000, 2019, 14442, 1997, 3465, 1179, 1006, 1050, 1087, 23569, 1007, 1012, 102, 101, 3602, 2008, 2023, 2003, 1996, 2922, 6578, 2825, 2144, 1996, 3976, 1997, 26395, 2005, 2023, 2208, 2003, 1050, 29625, 9872, 1020, 29625, 2475, 1012, 102, 101, 2005, 2275, 1011, 3104, 2399, 1010, 1037, 2309, 8734, 2447, 2064, 3426, 2190, 1011, 3433, 10949, 2000, 2693, 2013, 1037, 10594, 14442, 1997, 3465, 1051, 1006, 1050, 1007, 2000, 1037, 10594, 14442, 1997, 3465, 1179, 1006, 1050, 1016, 1007, 1012, 102, 101, 5136, 1050, 2867, 1997, 2828, 1045, 1010, 2073, 2169, 2447, 1045, 2038, 2048, 4520, 2000, 5454, 2013, 1024, 1037, 2691, 2275, 1055, 1008, 1997, 3465, 1050, 1010, 1998, 1037, 2275, 9033, 1997, 3465, 1050, 1597, 1015, 1012, 102, 101, 2045, 2024, 5678, 1050, 1597, 1016, 2867, 1997, 2828, 2462, 1010, 2107, 2008, 2447, 1047, 1997, 2828, 2462, 2089, 2593, 5454, 2151, 1997, 1996, 4520, 9033, 2030, 2842, 2049, 2219, 2275, 1042, 1047, 1997, 3465, 1050, 1013, 1047, 1010, 2005, 1047, 1596, 1063, 1016, 1010, 1012, 1012, 1012, 1010, 1050, 102, 101, 1999, 2804, 1010, 2057, 2031, 2028, 8734, 2447, 2040, 2089, 5454, 2151, 1997, 1996, 4520, 1010, 2005, 1037, 2561, 1997, 1016, 2078, 1597, 1015, 2867, 2561, 1012, 102, 101, 1996, 3988, 2110, 2003, 2035, 2867, 1997, 2828, 1045, 1999, 2275, 1055, 1008, 1998, 2035, 2867, 1997, 2828, 2462, 1999, 2275, 1055, 2487, 1010, 2005, 1037, 2561, 3465, 1051, 1006, 1050, 1007, 1012, 102, 101, 1996, 8734, 2447, 1998, 2828, 1011, 2462, 2867, 2097, 2085, 3254, 17256, 2035, 2828, 1011, 1045, 2867, 2046, 1996, 4520, 9033, 1010, 4852, 1996, 3465, 1997, 1996, 2291, 2000, 1050, 1006, 1050, 1597, 1015, 1007, 1012, 102, 101, 2034, 1996, 8734, 2447, 5829, 2000, 2275, 1055, 2487, 4786, 2447, 1015, 1997, 2828, 1045, 2000, 2693, 2013, 1055, 1008, 1006, 3005, 3465, 2000, 1996, 2447, 2003, 1015, 1007, 2000, 1055, 2487, 1006, 3005, 3465, 2000, 1996, 2447, 2003, 1006, 1050, 1597, 1015, 1007, 1013, 1050, 1007, 1012, 102, 101, 1996, 8734, 2447, 2059, 25582, 2135, 5829, 2000, 2169, 2275, 1042, 2078, 1597, 1015, 1010, 1042, 2078, 1597, 1016, 1010, 1012, 1012, 1012, 1010, 1042, 2475, 1010, 4786, 1996, 2867, 1997, 2828, 2462, 2000, 2693, 2000, 2037, 4520, 1042, 1047, 1999, 2008, 2344, 1012, 102, 101, 4919, 1010, 2012, 1996, 2051, 2447, 1047, 1997, 2828, 2462, 5829, 1010, 1996, 2275, 1055, 2487, 2038, 1037, 3465, 2000, 2009, 1997, 1006, 1050, 1597, 1015, 1007, 1013, 1047, 1010, 6168, 2275, 1042, 1047, 2038, 3465, 1006, 2007, 1996, 8734, 2447, 1007, 1997, 1050, 1013, 1006, 1016, 2243, 1007, 1012, 102, 101, 2085, 1996, 8734, 2447, 5829, 2000, 2275, 1055, 2475, 1010, 4786, 1996, 2867, 1047, 1997, 2828, 2462, 2005, 1047, 1027, 1016, 1010, 1017, 1010, 1012, 1012, 1012, 1010, 1050, 1597, 1016, 2000, 2693, 2028, 2044, 1996, 2060, 2000, 1055, 2475, 2004, 2092, 1012, 102, 101, 4919, 1010, 2012, 1996, 2051, 2447, 1047, 5829, 1010, 2275, 1055, 2475, 2038, 3465, 1006, 1050, 1597, 1015, 1007, 1013, 1047, 2029, 2003, 2896, 2084, 1996, 3465, 1050, 1013, 1047, 1997, 1042, 1047, 1012, 102, 101, 2012, 1996, 2203, 1997, 2023, 3357, 2057, 2031, 1996, 2168, 9563, 1997, 2828, 1011, 2462, 2867, 2004, 1999, 1996, 3988, 2110, 1010, 3272, 2007, 1055, 2475, 2738, 2084, 1055, 2487, 1012, 102, 101, 1996, 2972, 2832, 2059, 17993, 2005, 2447, 1016, 1997, 2828, 1045, 1010, 1998, 2061, 2006, 1010, 2127, 2169, 2447, 1045, 1997, 2828, 1045, 2003, 2006, 2049, 2219, 2275, 9033, 1012, 102, 101, 2633, 1010, 2144, 1055, 1008, 2003, 2085, 4064, 1010, 3904, 1997, 1996, 2828, 1011, 1045, 2867, 4299, 2000, 2693, 2061, 2057, 2024, 2012, 2019, 14442, 29625, 3022, 4197, 2041, 1999, 2930, 1017, 1010, 9872, 1020, 29625, 2475, 3202, 12748, 2008, 1999, 1996, 2566, 20689, 23757, 2944, 2057, 2031, 1052, 15068, 19892, 1006, 1600, 1016, 1597, 1015, 1010, 102, 101, 3602, 2008, 1999, 9872, 1018, 29625, 2475, 2057, 7949, 2023, 2810, 2000, 1996, 2062, 10059, 2553, 1997, 2235, 5300, 1997, 100, 2004, 2659, 2004, 1052, 1016, 1013, 1050, 1012, 102, 101, 2057, 4088, 2007, 1037, 3722, 2896, 5391, 2005, 3105, 19940, 1999, 1996, 3739, 1997, 1037, 2309, 8734, 3105, 1012, 102, 101, 2005, 2048, 6681, 1998, 2028, 8734, 3105, 1010, 1996, 3465, 2064, 3623, 2013, 1016, 2000, 1179, 1006, 1050, 1007, 1010, 2130, 1999, 1996, 6721, 1011, 2344, 2944, 1012, 102, 101, 5136, 2048, 6681, 1998, 1016, 2078, 1009, 1015, 2204, 5841, 1010, 1050, 1997, 2828, 1045, 2007, 3465, 1006, 1015, 1013, 1050, 1010, 1015, 1007, 1998, 1050, 1997, 2828, 2462, 2007, 3465, 1006, 1015, 1010, 1015, 1013, 1050, 1007, 1010, 1998, 2028, 8734, 3105, 2007, 3465, 1006, 1015, 1010, 1015, 1007, 1012, 102, 101, 3322, 1010, 5841, 1997, 2828, 1045, 2024, 2006, 3698, 1015, 1998, 5841, 1997, 2828, 1016, 2024, 2006, 3698, 1016, 1010, 2023, 2003, 1996, 15502, 8775, 2005, 1996, 2204, 5841, 1012, 102, 101, 1996, 8734, 3105, 3632, 2000, 3698, 1015, 1010, 2059, 1037, 3105, 1997, 2828, 1045, 5829, 2000, 3698, 1016, 1010, 2144, 2023, 2003, 2049, 2190, 3433, 1012, 102, 101, 2085, 1010, 1996, 8734, 3105, 5829, 2000, 3698, 1016, 1006, 3602, 2008, 1996, 8734, 3105, 3445, 2049, 7170, 1007, 1012, 102, 101, 2059, 1010, 1037, 3105, 1997, 2828, 2462, 5829, 2013, 1016, 2000, 1015, 1012, 102, 101, 2023, 2126, 2057, 3623, 1996, 3465, 2013, 1016, 2000, 1050, 1009, 1015, 1012, 102, 101, 2004, 1999, 9872, 1019, 29625, 2475, 1010, 2023, 2810, 8908, 3202, 2000, 1996, 6721, 2344, 2944, 1010, 2007, 2074, 1037, 5377, 5387, 3279, 1999, 1996, 6463, 1010, 2011, 20253, 1996, 28003, 2615, 4677, 2550, 2004, 1037, 2765, 1997, 1996, 2682, 27248, 5656, 1012, 102, 101, 4919, 1010, 2061, 2146, 2004, 1996, 2291, 2038, 2062, 5841, 2007, 3465, 1015, 1013, 1050, 2006, 2037, 2783, 3698, 2084, 5841, 2007, 3465, 1015, 2006, 2037, 2783, 3698, 1010, 1996, 2291, 2003, 2062, 3497, 2000, 6653, 1999, 1996, 2830, 3257, 1006, 4852, 1996, 2193, 1997, 2152, 1011, 3465, 5841, 1007, 102, 101, 2947, 1010, 1999, 1051, 1006, 1050, 1007, 4084, 1010, 2007, 2152, 9723, 1996, 2291, 6561, 1037, 2110, 1997, 3465, 1179, 1006, 1050, 1007, 1012, 102, 101, 2006, 1996, 2060, 2192, 1010, 2005, 3105, 19940, 2006, 7235, 6681, 1010, 4983, 1996, 8734, 2867, 2011, 3209, 2031, 6937, 3635, 1010, 2027, 2064, 2025, 3426, 1996, 2291, 2000, 3362, 1037, 2152, 1011, 3465, 2110, 1012, 102, 101, 2292, 1059, 1038, 2022, 1996, 3635, 1997, 1996, 8734, 2867, 1998, 1059, 2290, 1996, 3635, 1997, 1996, 2204, 2867, 1012, 102, 101, 2169, 2051, 1037, 2204, 2447, 1045, 5829, 2009, 2038, 1037, 2190, 3433, 3005, 3465, 2003, 2012, 2087, 1006, 1059, 2290, 1009, 1059, 1038, 1007, 1013, 1049, 1009, 15536, 1010, 2073, 15536, 2003, 1996, 2204, 3105, 3465, 1012, 102, 101, 3602, 2008, 6728, 1056, 1609, 4098, 1063, 1059, 1013, 1049, 1010, 15536, 1065, 1998, 2947, 1996, 2765, 4076, 29625, 8545, 2203, 2007, 1037, 3722, 8089, 2008, 2005, 4895, 11179, 2098, 10465, 1010, 1037, 2309, 8734, 2447, 2064, 3426, 3465, 2000, 3623, 2011, 1037, 5387, 1179, 1006, 1050, 1007, 1012, 102, 101, 2005, 1996, 4895, 11179, 2098, 10465, 2208, 1010, 1037, 2309, 8734, 2447, 2064, 3623, 3465, 2013, 1015, 2000, 1179, 1006, 1050, 1007, 1012, 102, 101, 1996, 2897, 2003, 3432, 1037, 2240, 2897, 1058, 2487, 1010, 1012, 1012, 1012, 1010, 1058, 2078, 1012, 102, 101, 1996, 8734, 2447, 2003, 1996, 2447, 1058, 2487, 2012, 2028, 2203, 1997, 1996, 2240, 1012, 102, 101, 7868, 2057, 2707, 2007, 2035, 2867, 2108, 1054, 1998, 2059, 1996, 8734, 2447, 15924, 2000, 1038, 29625, 2447, 1058, 2475, 2003, 24436, 2090, 1054, 1998, 1038, 2061, 2009, 15924, 2000, 1038, 1010, 1998, 2059, 2447, 1058, 2487, 15924, 2067, 2000, 1054, 29625, 2059, 1010, 2447, 1058, 2509, 15924, 2000, 1038, 1010, 2447, 1058, 2475, 15924, 2000, 102, 101, 1999, 4403, 1047, 1010, 2057, 2707, 2007, 1058, 2487, 1010, 1012, 1012, 1012, 1010, 1058, 1047, 15122, 2090, 1054, 1998, 1038, 1010, 2107, 2008, 1058, 1047, 3248, 1038, 1012, 102, 101, 2076, 4403, 1047, 1010, 2034, 1058, 1047, 1009, 2487, 15924, 2000, 1038, 1010, 1998, 2059, 2867, 1058, 1047, 1010, 1012, 1012, 1012, 1058, 2487, 6942, 2037, 2895, 1012, 102, 101, 2012, 1996, 2203, 2057, 2031, 2035, 2867, 15122, 2090, 1054, 1998, 1038, 1010, 2012, 3465, 1179, 1006, 1050, 1007, 1012, 102, 101, 1999, 3408, 1997, 3563, 2330, 3980, 1010, 2009, 2052, 2022, 5875, 2000, 2485, 2070, 1997, 1996, 16680, 2008, 3961, 1999, 1996, 4748, 14028, 10980, 2140, 2344, 2944, 1012, 102, 101, 2005, 2742, 1010, 2064, 2028, 7949, 1996, 3356, 5391, 1997, 9872, 1018, 29625, 2549, 2000, 2512, 29624, 6508, 20058, 12412, 3465, 1011, 6631, 2399, 2030, 7949, 1996, 2896, 5391, 1997, 9872, 1018, 29625, 2475, 2000, 19490, 3465, 6631, 2399, 1029, 102, 101, 1999, 1996, 8734, 2944, 1010, 2064, 2028, 2131, 2488, 3356, 1011, 19202, 2005, 2275, 1011, 3104, 1998, 4189, 5366, 18428, 3070, 2399, 2065, 2057, 7868, 6721, 2344, 10949, 1029, 102, 101, 2062, 3227, 1010, 2005, 2035, 1996, 4280, 1997, 2399, 3273, 1010, 2064, 2028, 2131, 2488, 3356, 19202, 1999, 1996, 6721, 2344, 2944, 1999, 1996, 2553, 2073, 1996, 2566, 20689, 23757, 2015, 2024, 2025, 3294, 4748, 14028, 10980, 2140, 1010, 2021, 2612, 4217, 2013, 2070, 4353, 1997, 10351, 10194, 1029, 102, 101, 22524, 1037, 29625, 2275, 5266, 2399, 9872, 1018, 29625, 2475, 1999, 1996, 2275, 5266, 2208, 2057, 2031, 1052, 15068, 19892, 1006, 100, 1010, 8040, 2290, 1007, 1027, 1179, 1006, 100, 1600, 1050, 8833, 1006, 1015, 1013, 100, 1007, 1007, 2005, 100, 1609, 1016, 1013, 1600, 1050, 29625, 18907, 1012, 102, 101, 1996, 2810, 1020, 16473, 2006, 2008, 1999, 1996, 6947, 1997, 9872, 1020, 29625, 2475, 1012, 102, 101, 2292, 1050, 1027, 1050, 1013, 1018, 1012, 102, 101, 5136, 1050, 2867, 1997, 2828, 1045, 1010, 25331, 2011, 7689, 1006, 1045, 1010, 1046, 1007, 2005, 1015, 1608, 1045, 1010, 1046, 1608, 1600, 1050, 29625, 2828, 1011, 1045, 2447, 1006, 1045, 1010, 1046, 1007, 2038, 2093, 4520, 2000, 5454, 2013, 1024, 1037, 2275, 1055, 1008, 1045, 1997, 3465, 1050, 1010, 1037, 102, 101, 3322, 1010, 2035, 2828, 1011, 1045, 2867, 4088, 2006, 1996, 4520, 1055, 1008, 1045, 2005, 1037, 2561, 3465, 1997, 1050, 1600, 1050, 1012, 102, 101, 2057, 2036, 2031, 1050, 1009, 1600, 1050, 1597, 1016, 2867, 1997, 2828, 2462, 2004, 4076, 1012, 102, 101, 2005, 1047, 1027, 1017, 1010, 1012, 1012, 1012, 1010, 1050, 1010, 2057, 2031, 1037, 2828, 1011, 2462, 2447, 2040, 2089, 5454, 2151, 1997, 1996, 4520, 17266, 6024, 1010, 1046, 1006, 2005, 1015, 1608, 1046, 1608, 1600, 1050, 1007, 2030, 2842, 2049, 2219, 2275, 1042, 1047, 1012, 102, 101, 2005, 1047, 1027, 1016, 2057, 2031, 1600, 1050, 2828, 1011, 2462, 2867, 25331, 2011, 7689, 1006, 1016, 1010, 1046, 1007, 2005, 1015, 1608, 1046, 1608, 1600, 1050, 2040, 2089, 5454, 2069, 1996, 2275, 17266, 6024, 1010, 1046, 2030, 2037, 2219, 2275, 1042, 2475, 1010, 1046, 1012, 102, 101, 1996, 4520, 1042, 1047, 1998, 1042, 1047, 1010, 1046, 2031, 5366, 2004, 4076, 1024, 2005, 1047, 1596, 1031, 1016, 1010, 1015, 1013, 100, 1033, 1010, 1996, 2275, 2038, 3465, 1015, 100, 1050, 1013, 1047, 1025, 2005, 1047, 1028, 1015, 1013, 100, 1010, 1996, 2275, 2038, 3465, 1050, 1013, 1047, 29625, 2174, 102, 101, 2947, 1010, 2007, 2393, 2121, 1011, 2867, 2443, 1010, 3465, 1997, 2169, 2275, 1042, 1047, 1006, 2030, 1042, 1047, 1010, 1046, 1007, 2000, 2828, 1011, 2462, 2447, 1047, 1006, 2030, 1006, 1047, 1010, 1046, 1007, 1007, 2003, 1050, 1013, 1047, 1012, 102, 101, 1996, 2828, 1011, 2462, 2867, 4088, 1999, 2037, 4520, 1042, 1047, 1006, 2030, 1042, 1047, 1010, 1046, 1007, 1012, 102, 101, 2004, 1999, 1996, 6947, 1997, 9872, 1020, 29625, 2475, 1010, 1996, 2828, 1011, 2462, 2867, 2097, 2085, 3254, 17256, 2035, 2828, 1011, 1045, 2867, 2046, 1996, 2797, 4520, 9033, 1010, 1046, 1010, 4852, 2037, 3452, 3465, 2013, 1050, 1600, 1050, 2000, 1050, 1016, 1012, 102, 101, 4919, 1010, 2005, 1045, 1027, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1600, 1050, 1010, 1996, 2206, 5158, 1012, 102, 101, 2034, 1010, 2005, 2169, 1046, 1027, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1600, 1050, 1999, 5537, 1010, 2828, 1011, 1045, 2447, 1006, 1045, 1010, 1046, 1007, 2003, 26673, 3031, 17266, 6024, 1010, 1046, 2004, 4076, 1012, 102, 101, 2034, 1010, 2828, 1011, 2462, 2447, 1006, 1016, 1010, 1046, 1007, 2003, 2333, 2000, 2275, 17266, 6024, 1010, 1046, 2011, 2383, 2049, 2393, 2121, 1011, 2867, 8184, 5333, 1996, 4621, 3465, 1997, 1042, 2475, 1010, 1046, 2013, 1050, 1013, 1016, 2000, 1050, 1006, 2478, 1037, 2832, 2649, 1999, 1996, 20423, 2917, 1007, 2061, 102, 101, 2279, 1010, 2828, 1011, 2462, 2867, 1047, 1027, 1017, 1010, 1018, 1010, 1012, 1012, 1012, 2024, 2081, 2000, 3582, 2247, 2000, 17266, 6024, 1010, 1046, 1012, 102, 101, 1999, 1996, 2553, 1997, 1047, 1027, 1017, 1010, 1012, 1012, 1012, 1010, 1015, 1013, 100, 1010, 2023, 2003, 2589, 2011, 2383, 1996, 2393, 2121, 1011, 2867, 2153, 8184, 5333, 1996, 4621, 3465, 1997, 1042, 1047, 2013, 1050, 1013, 1047, 2000, 1016, 2078, 1013, 1047, 1010, 2437, 1996, 2447, 9544, 17266, 6024, 1010, 1046, 102, 101, 1999, 1996, 2553, 1997, 1047, 1028, 1015, 1013, 100, 1010, 2023, 2064, 2022, 2589, 2302, 2393, 2121, 2867, 1010, 2144, 1996, 6463, 1997, 1996, 3465, 1997, 17266, 6024, 1010, 1046, 2000, 1996, 3465, 1997, 1042, 1047, 2003, 1047, 1013, 1006, 1047, 1597, 1015, 1007, 1608, 1015, 1009, 100, 1010, 2061, 2566, 20689, 23757, 2015, 2024, 102, 101, 1006, 3602, 2008, 2828, 1011, 2462, 2447, 1006, 1016, 1010, 1046, 1007, 2052, 2031, 6871, 1055, 3161, 1010, 1046, 1531, 2005, 1046, 1531, 1026, 1046, 2000, 17266, 6024, 1010, 1046, 2138, 2008, 2275, 2525, 2038, 1037, 2828, 1011, 1045, 2447, 2006, 2009, 1010, 2021, 2008, 2003, 2025, 2028, 1997, 2049, 3039, 102, 101, 2633, 1010, 1996, 2867, 1997, 2828, 2462, 1010, 1999, 2344, 2013, 1047, 1027, 1050, 2091, 2000, 1016, 1010, 25582, 2135, 2693, 2067, 2000, 2037, 4520, 1042, 1047, 1006, 2030, 1042, 1047, 1010, 1046, 1007, 1012, 102, 101, 1999, 3327, 1010, 2012, 1996, 2051, 2447, 1047, 1997, 2828, 2462, 5829, 1010, 1996, 2275, 17266, 6024, 1046, 2038, 1037, 3465, 2000, 2009, 1997, 1050, 1013, 1047, 1010, 2029, 2003, 5020, 2000, 1996, 3465, 1997, 2275, 1042, 1047, 1006, 2061, 2007, 12098, 16313, 19848, 6588, 2235, 2566, 20689, 23757, 2015, 1010, 1996, 27248, 2064, 4089, 3426, 2122, 102, 101, 2044, 1996, 2682, 2832, 2038, 2042, 2949, 2005, 2035, 1046, 1027, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1600, 1050, 1006, 2061, 2008, 1055, 1008, 1045, 2003, 2085, 4064, 2005, 1996, 2783, 3643, 1997, 1045, 1007, 1010, 1996, 2828, 1011, 1045, 2867, 1006, 1045, 1010, 1046, 1007, 2024, 2085, 102, 101, 2061, 1010, 2027, 2064, 2169, 2022, 2081, 2000, 2693, 2000, 2037, 2797, 4520, 9033, 1010, 1046, 3081, 12098, 16313, 19848, 6588, 2235, 2566, 20689, 23757, 2015, 1012, 102, 101, 2057, 2059, 4297, 28578, 4765, 1045, 1998, 9377, 1996, 2972, 2832, 2682, 29625, 3406, 3926, 1996, 6685, 1010, 2057, 2342, 2000, 6235, 2129, 1996, 2393, 2121, 13068, 2545, 5333, 1996, 4621, 3465, 1997, 1042, 1047, 1006, 2030, 1042, 1047, 1010, 1046, 1007, 1012, 102, 101, 2005, 2169, 1047, 1010, 1996, 1046, 2705, 2393, 2121, 1011, 2447, 2038, 1037, 2797, 2275, 1997, 3465, 1050, 1047, 1006, 1015, 1597, 100, 1007, 1012, 102, 101, 2011, 2566, 20689, 10472, 5366, 1010, 27248, 2064, 3426, 2122, 2867, 2005, 1046, 1027, 1015, 1010, 1016, 1010, 1012, 1012, 1012, 1010, 1015, 1013, 1006, 100, 1007, 2000, 2693, 1999, 2344, 2000, 2037, 2797, 4520, 1012, 102, 101, 4919, 1010, 2012, 1996, 2051, 1996, 1046, 2705, 2447, 2003, 2000, 2693, 1010, 1996, 6463, 1997, 1996, 3465, 1997, 2049, 2797, 2275, 2000, 1996, 3465, 1997, 1042, 1047, 2003, 1050, 1047, 1006, 1015, 1597, 100, 1007, 2320, 2447, 1047, 1997, 2828, 2462, 2038, 2333, 2125, 1997, 2275, 1042, 1047, 1010, 1996, 102, 101, 2023, 28123, 1996, 2810, 29625, 10760, 2561, 2193, 1997, 2867, 2003, 3356, 10351, 2011, 1016, 2078, 1009, 100, 1006, 1600, 1050, 1009, 1015, 100, 1007, 1012, 102, 101, 2005, 100, 1609, 1015, 1013, 1600, 1050, 1998, 1050, 1027, 1050, 1013, 1018, 1010, 2023, 2003, 2012, 2087, 1050, 1012, 102, 101, 1996, 2561, 3465, 1997, 1996, 3988, 2110, 2003, 1051, 1006, 1050, 1017, 29626, 2475, 1009, 1050, 1017, 29626, 2475, 1013, 100, 1009, 1006, 1050, 1013, 100, 1007, 8833, 1006, 1015, 1013, 100, 1007, 1007, 1998, 1996, 2345, 2110, 2038, 3465, 1179, 1006, 1050, 1016, 1007, 1010, 3228, 1996, 6463, 9059, 1012, 102], "tgt": [1, 1996, 3976, 1997, 1996, 3976, 1997, 12503, 17457, 13320, 18447, 2100, 3814, 1011, 13109, 28741, 2050, 28352, 9336, 4108, 6627, 20704, 20026, 14154, 2213, 11298, 22181, 12316, 7377, 2100, 16042, 8162, 10093, 1011, 12724, 1013, 8224, 9353, 2213, 1011, 14925, 2268, 2399, 2024, 2019, 24504, 26393, 2024, 2019, 24504, 5366, 1013, 3477, 27475, 2024, 1037, 3853, 1997, 2867, 4506, 1012, 3, 2053, 6327, 8092, 2065, 2035, 8385, 2377, 2168, 2126, 1010, 2131, 6635, 2168, 3477, 7245, 7868, 2035, 2867, 21134, 2024, 14440, 2152, 1011, 2504, 3160, 1024, 2054, 6433, 2000, 3019, 10949, 2065, 2122, 2079, 23961, 3243, 2907, 1029, 3, 21981, 2066, 2000, 2228, 2008, 2065, 2057, 2131, 2111, 2046, 1037, 2204, 14442, 1010, 1998, 2867, 2024, 14337, 1010, 16286, 2026, 7361, 2594, 1010, 4385, 1010, 2059, 5248, 2097, 2994, 2045, 1012, 3, 2152, 1011, 2504, 3160, 1024, 2054, 6433, 2000, 3019, 10949, 2065, 2122, 2079, 23961, 3243, 2907, 1029, 3, 2399, 2024, 2019, 24504, 26393, 2024, 2019, 24504, 21981, 2066, 2000, 2228, 2008, 2065, 2057, 2131, 2111, 2046, 1037, 2204, 14442, 1010, 1998, 2867, 2024, 14337, 1010, 16286, 2026, 7361, 2594, 1010, 4385, 1010, 2059, 5248, 2097, 2994, 2045, 1012, 3, 2021, 2054, 2065, 2045, 2024, 2235, 28892, 1999, 10318, 3465, 1013, 3477, 7245, 3252, 1029, 3, 2399, 2024, 2019, 24504, 26393, 2024, 2019, 24504, 21981, 2066, 2000, 2228, 2008, 2065, 2057, 2131, 2111, 2046, 1037, 2204, 14442, 1010, 1998, 2867, 2024, 14337, 1010, 16286, 2026, 7361, 2594, 1010, 4385, 1010, 2059, 5248, 2097, 2994, 2045, 1012, 3, 2021, 2054, 2065, 2045, 2024, 2235, 28892, 1999, 10318, 3465, 1013, 3477, 7245, 3252, 1029, 3, 2030, 1037, 2261, 2867, 3772, 4895, 28139, 29201, 8231, 1029, 3, 2064, 2235, 28892, 2030, 1037, 2261, 21446, 2867, 3426, 3019, 10949, 2000, 6714, 2041, 1997, 2491, 1998, 2131, 2291, 2046, 1037, 2152, 1011, 3465, 2110, 1029, 3, 2399, 2024, 2019, 24504, 26393, 2024, 2019, 24504, 2152, 1011, 2504, 3160, 4048, 5603, 1011, 2504, 3160, 1037, 2261, 3971, 2023, 2071, 4148, 1024, 2235, 3431, 3426, 2204, 1041, 26147, 12322, 4360, 2000, 10436, 1010, 2069, 2919, 3924, 2187, 1012, 3, 1006, 4610, 1029, 1007, 3, 2919, 5248, 2011, 1037, 2261, 2867, 5320, 3255, 2005, 2035, 1006, 16371, 9681, 1007, 4445, 1997, 2682, 1010, 2021, 2612, 2083, 2062, 11259, 8290, 2007, 10949, 3579, 2182, 2006, 2023, 2197, 3277, 1012, 3, 2064, 2235, 28892, 2030, 1037, 2261, 21446, 2867, 3426, 3019, 10949, 2000, 6714, 2041, 1997, 2491, 1998, 2131, 2291, 2046, 1037, 2152, 1011, 3465, 2110, 1029, 3, 3579, 1997, 2023, 2147, 14876, 7874, 1997, 2023, 2147, 2399, 2007, 1996, 2206, 5144, 1024, 4022, 2399, 1010, 2190, 1013, 2488, 1011, 3433, 10949, 1012, 3, 2659, 3976, 1997, 9211, 1012, 3, 1006, 2204, 1041, 26147, 12322, 4360, 4839, 1007, 2208, 2038, 2204, 1041, 26147, 12322, 4360, 2130, 2044, 2566, 20689, 23757, 1012, 3, 2235, 6578, 2090, 4022, 1998, 2591, 3465, 1012, 3, 2309, 2566, 20689, 23757, 2064, 2102, 2191, 10949, 2079, 2919, 2477, 1012, 3, 2053, 3265, 2447, 2064, 3747, 3465, 1997, 2500, 2011, 2205, 2172, 1012, 3, 23569, 13433, 2015, 23569, 3465, 2944, 5302, 9247, 2867, 3582, 2190, 1006, 2030, 2488, 1007, 3433, 10949, 1012, 3, 5366, 1997, 4219, 2064, 19857, 6593, 20598, 2090, 5829, 1024, 25022, 2102, 1016, 1031, 25022, 1013, 1006, 1015, 1009, 1007, 1010, 25022, 1006, 1015, 1009, 1007, 1033, 1006, 14084, 1010, 2028, 2030, 2062, 8734, 2867, 2040, 2693, 2090, 2051, 4084, 1007, 2377, 4269, 1999, 1037, 2659, 1011, 3465, 2110, 1012, 3, 2129, 2919, 2064, 2477, 2131, 1029, 3, 3976, 1011, 1997, 1011, 12503, 1006, 1007, 1997, 2208, 1027, 4555, 6463, 1997, 9523, 2591, 3465, 2000, 3988, 3465, 1012, 3, 2944, 5302, 9247, 2867, 3582, 2190, 1006, 2030, 2488, 1007, 3433, 10949, 1012, 3, 5366, 1997, 4219, 2064, 19857, 6593, 20598, 2090, 5829, 1024, 25022, 2102, 1016, 1031, 25022, 1013, 1006, 1015, 1009, 1007, 1010, 25022, 1006, 1015, 1009, 1007, 1033, 3976, 1011, 1997, 1011, 12503, 1006, 1007, 1997, 2208, 1027, 4555, 6463, 1997, 9523, 2591, 3465, 2000, 3988, 3465, 1012, 3, 2944, 5302, 9247, 2867, 3582, 2190, 1006, 2030, 2488, 1007, 3433, 10949, 1012, 3, 5366, 1997, 4219, 2064, 19857, 6593, 20598, 2090, 5829, 1024, 25022, 2102, 1016, 1031, 25022, 1013, 1006, 1015, 1009, 1007, 1010, 25022, 1006, 1015, 1009, 1007, 1033, 3976, 1011, 1997, 1011, 12503, 1006, 1007, 1997, 2208, 1027, 4555, 6463, 1997, 9523, 2591, 3465, 2000, 3988, 3465, 1012, 3, 2028, 2126, 2000, 2298, 2012, 2023, 1024, 9375, 10629, 1024, 2028, 13045, 2005, 2169, 2110, 1012, 3, 3341, 1057, 999, 3, 1058, 2065, 2566, 20689, 23757, 2064, 3426, 7987, 2000, 2693, 2013, 1057, 2000, 1058, 1012, 3, 2054, 2079, 1996, 3362, 3085, 4520, 2298, 2066, 1029, 3, 2275, 1011, 3104, 2399, 13462, 1011, 3104, 2399, 1050, 2867, 1006, 2685, 1007, 1049, 4520, 1010, 2007, 5366, 27723, 1010, 1010, 4642, 1012, 3, 2169, 2447, 15867, 2070, 2275, 2008, 4472, 2009, 1012, 3, 2867, 3975, 3465, 2007, 2035, 2500, 10549, 2168, 2275, 1012, 3, 27723, 29248, 1039, 2509, 4642, 2275, 1011, 3104, 2399, 13462, 1011, 3104, 2399, 3976, 1997, 26395, 1027, 1050, 3976, 1997, 9211, 1027, 1051, 1006, 8833, 1006, 1050, 1007, 1007, 1012, 3, 4022, 1016, 1031, 3465, 1010, 3465, 21197, 1006, 1050, 1007, 1033, 1050, 1011, 1015, 2364, 3463, 24238, 3463, 2275, 1011, 3104, 2399, 1024, 2275, 1011, 3104, 2399, 1024, 2065, 1027, 1051, 1006, 1015, 1013, 13221, 1007, 2059, 13433, 2226, 1027, 1051, 1006, 8833, 1050, 1007, 1012, 3, 2174, 1010, 2005, 2151, 5377, 1028, 1014, 1010, 13433, 2226, 1027, 1006, 1050, 1007, 1012, 3, 2036, 1010, 1037, 2309, 8734, 2447, 2064, 2202, 2110, 2013, 1037, 1052, 2638, 1997, 3465, 1051, 1006, 23569, 1007, 2000, 2028, 1997, 3465, 1006, 1050, 23569, 1007, 1012, 3, 3356, 19202, 2907, 2130, 2005, 2488, 1011, 3433, 2896, 19202, 2907, 2130, 2005, 2190, 1011, 3433, 2364, 3463, 24238, 3463, 2236, 4189, 1011, 3465, 1011, 6631, 2399, 1024, 2236, 4189, 1011, 3465, 1011, 6631, 2399, 1024, 13523, 22943, 20176, 2399, 1024, 13523, 22943, 20176, 2399, 1024, 2182, 1010, 2488, 1011, 3433, 2003, 3733, 2000, 17256, 2004, 28473, 1012, 3, 2064, 2191, 2110, 27258, 2135, 4788, 2011, 2478, 2130, 2019, 27258, 2135, 1011, 2235, 1012, 3, 2061, 1010, 3579, 2006, 2190, 1011, 3433, 1012, 3, 1055, 1056, 2364, 3463, 24238, 3463, 2236, 4189, 1011, 3465, 1011, 6631, 2399, 1024, 2236, 4189, 1011, 3465, 1011, 6631, 2399, 1024, 2065, 2116, 2867, 2005, 2169, 1006, 9033, 1010, 14841, 1007, 3940, 1006, 9152, 1027, 1006, 1049, 1007, 1007, 1010, 2059, 13433, 2226, 1027, 1051, 1006, 1015, 1007, 2130, 2005, 5377, 1028, 1014, 1012, 3, 2330, 2005, 2236, 2193, 1997, 2867, 1012, 3, 13523, 22943, 20176, 2399, 1024, 13523, 22943, 20176, 2399, 1024, 1006, 5656, 4520, 2024, 7888, 1997, 13523, 22943, 1012, 3, 1041, 29625, 2290, 29625, 1010, 2275, 1011, 3104, 2073, 2442, 5454, 1047, 4520, 1007, 2065, 1027, 1051, 1006, 1015, 1013, 13221, 1007, 2059, 13433, 2226, 1027, 1051, 1006, 8833, 1050, 1007, 2005, 4189, 5366, 18428, 3070, 1012, 3, 1999, 2236, 1010, 2065, 1027, 1051, 1006, 1015, 1013, 13221, 1007, 2059, 13433, 2226, 1027, 1051, 1006, 6578, 1007, 1012, 3, 2488, 1011, 3433, 2025, 2438, 1012, 3, 2036, 3893, 3463, 2005, 2036, 3893, 3463, 2005, 1011, 3835, 2399, 1010, 19202, 2005, 1011, 3835, 2399, 1010, 19202, 2005, 10465, 1010, 3105, 19940, 8663, 5054, 13203, 1010, 3105, 19940, 2275, 1011, 3104, 2399, 2275, 1011, 3104, 2399, 1006, 2896, 5391, 1007, 1006, 2896, 5391, 1007, 2048, 7957, 1997, 2867, 1024, 1050, 1997, 2465, 1045, 1024, 1050, 1011, 1015, 1997, 2465, 2462, 1024, 4606, 2028, 8734, 2447, 12748, 5391, 2005, 2553, 2008, 5366, 2064, 19857, 6593, 20598, 2011, 5387, 1997, 1016, 1012, 3, 2062, 8552, 4654, 2005, 999, 3, 1015, 1013, 1050, 2487, 1013, 1016, 1012, 3, 1050, 1050, 1011, 1050, 1011, 1050, 1011, 1050, 1011, 1050, 1011, 1050, 1013, 1016, 1050, 1013, 1017, 1050, 1013, 1018, 1050, 1013, 1050, 2275, 1011, 3104, 2399, 2275, 1011, 3104, 2399, 1006, 3356, 5391, 1007, 1006, 3356, 5391, 1007, 2005, 3356, 5391, 1010, 2228, 1997, 2867, 1999, 4520, 2004, 1037, 9991, 1997, 11772, 1012, 3, 3193, 2009, 2232, 2597, 1999, 9991, 1046, 2004, 2383, 3465, 1039, 3501, 1013, 1045, 29625, 7170, 11772, 2007, 3643, 5020, 2000, 3988, 3465, 1012, 3, 2043, 2447, 5829, 2013, 1046, 2000, 1047, 1010, 2693, 2327, 9090, 1012, 3, 3465, 1997, 2597, 3632, 2039, 2011, 2012, 2087, 1006, 1015, 1009, 1007, 1016, 1012, 3, 1039, 3501, 23616, 2012, 2087, 24098, 2367, 4460, 1012, 3, 2061, 1010, 2206, 1996, 4130, 1997, 2151, 9090, 1998, 9268, 15932, 1010, 3465, 1997, 2345, 2275, 2003, 2012, 2087, 1006, 1015, 1009, 1007, 1016, 2078, 2213, 2335, 2049, 3643, 1012, 3, 2061, 1010, 2065, 1027, 1051, 1006, 1015, 1013, 13221, 1007, 2059, 13433, 2226, 1027, 1051, 1006, 8833, 1050, 1007, 1012, 3, 13523, 22943, 2399, 18900, 22943, 2399, 1999, 13523, 22943, 2399, 1010, 2064, 2228, 1997, 2169, 2447, 2004, 9756, 1037, 2275, 1997, 11772, 1012, 3, 3835, 3200, 1997, 2190, 3433, 1999, 13523, 29514, 1024, 2064, 2467, 2344, 1996, 2693, 2061, 2008, 2169, 3265, 9090, 2003, 2725, 2488, 1011, 3433, 1012, 3, 6611, 3025, 6685, 1012, 3, 11896, 2005, 2488, 1011, 3433, 1012, 3, 2182, 1010, 2064, 2131, 2447, 2000, 2079, 2785, 1997, 12441, 10320, 1010, 2919, 2130, 2005, 27258, 2135, 26212, 3363, 1012, 3, 4189, 3465, 6631, 1999, 2236, 19287, 7011, 4313, 3465, 6631, 1999, 2236, 19287, 2065, 2116, 2867, 1997, 2169, 2828, 1010, 2064, 2036, 2265, 2190, 3433, 10949, 2064, 2102, 2079, 6649, 1012, 3, 12685, 1997, 6685, 1024, 2524, 2000, 17908, 3465, 1997, 2110, 3495, 1010, 2612, 2650, 3356, 5391, 1039, 1008, 1006, 2358, 1007, 1027, 3465, 1006, 1055, 2692, 1031, 1031, 2358, 1007, 1012, 3, 1039, 1008, 3431, 2012, 2087, 1049, 2335, 1012, 3, 2116, 2867, 1997, 2169, 2828, 1007, 2779, 3465, 1997, 2169, 2003, 2659, 4102, 2000, 1039, 1008, 1007, 2169, 2689, 2000, 1039, 1008, 2003, 2235, 1012, 3, 13433, 2226, 6431, 3976, 1997, 26395, 6873, 2226, 6431, 3976, 1997, 26395, 2364, 3579, 1024, 2399, 2007, 2119, 2204, 1998, 2919, 1041, 26147, 12322, 4360, 1012, 3, 2064, 2235, 28892, 2030, 2309, 8734, 2447, 3426, 5248, 2000, 2693, 2013, 2204, 2000, 2919, 1029, 3, 2064, 2036, 2031, 3572, 2073, 2110, 2064, 2131, 4788, 2130, 2084, 5409, 14442, 1012, 3, 3006, 1011, 6631, 1024, 1016, 5443, 8833, 1006, 1050, 1007, 2130, 2005, 2190, 6072, 26029, 3366, 1012, 3, 13433, 2226, 6431, 3976, 1997, 26395, 6873, 2226, 6431, 3976, 1997, 26395, 3835, 2399, 1031, 9779, 6633, 2015, 1011, 14925, 2692, 2620, 1033, 1024, 21134, 4982, 6428, 2004, 3465, 4152, 2682, 2335, 15502, 1006, 4050, 1027, 13433, 2050, 1007, 1012, 3, 2182, 1010, 2012, 2560, 2064, 2265, 2110, 2180, 2102, 2131, 2682, 1051, 1006, 1007, 2335, 15502, 1010, 2130, 2007, 6937, 2566, 20689, 23757, 2030, 2116, 8734, 2867, 1006, 6721, 2344, 1007, 1012, 3, 12654, 1998, 2330, 3471, 17421, 7849, 2100, 1998, 2330, 3471, 2559, 2012, 1024, 2043, 2064, 2235, 2566, 20689, 23757, 2015, 2030, 1037, 2261, 2919, 2867, 2599, 3019, 10949, 2004, 28473, 1029, 3, 2043, 2003, 2009, 3647, 2000, 2735, 2115, 2067, 1029, 3, 3356, 1013, 2896, 19202, 2005, 1037, 2193, 1997, 4280, 1997, 2399, 1012, 3, 2330, 3471, 1024, 2485, 6578, 2005, 2275, 1011, 3104, 1031, 1015, 1013, 1006, 24098, 1007, 1010, 1015, 1013, 1050, 2487, 1013, 1016, 1033, 1012, 3, 2236, 2553, 1997, 4189, 3465, 1011, 6631, 2399, 1029, 3, 23750, 2344, 2190, 24501, 2361, 2], "src_sent_labels": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], "segs": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "clss": [0, 33, 86, 140, 166, 177, 235, 255, 279, 313, 335, 374, 424, 449, 477, 510, 540, 550, 602, 623, 646, 662, 707, 733, 788, 845, 859, 902, 933, 966, 1015, 1052, 1109, 1164, 1186, 1242, 1282, 1311, 1367, 1419, 1476, 1530, 1586, 1603, 1619, 1646, 1669, 1715, 1727, 1742, 1767, 1802, 1818, 1859, 1885, 1927, 1942, 1962, 2017, 2044, 2100, 2128, 2167, 2198, 2253, 2307, 2329, 2381, 2418, 2455, 2480, 2503, 2559, 2583, 2608, 2632, 2692, 2750, 2810, 2856, 2902, 2956, 3009, 3060, 3078, 3086, 3129, 3145, 3204, 3260, 3315, 3347, 3359, 3392, 3405, 3447, 3464, 3494, 3541, 3584, 3641, 3693, 3746, 3765, 3818, 3871, 3898, 3931, 3960, 3995, 4054, 4078, 4101, 4154, 4177, 4211, 4254, 4287, 4305, 4352, 4362, 4418, 4435, 4460, 4512, 4554, 4564, 4577, 4604, 4618, 4664, 4687, 4704, 4742, 4760, 4791, 4843, 4862, 4915, 4950, 4999, 5040, 5097, 5128, 5199, 5213, 5238, 5278, 5311, 5329, 5349, 5382, 5428, 5445, 5497, 5526, 5564, 5581, 5603, 5614, 5648, 5664, 5678, 5737, 5757, 5788, 5822, 5878, 5931, 5962, 5982, 6034, 6077, 6101, 6158, 6190, 6244, 6265, 6279, 6332, 6357, 6399, 6460, 6503, 6521, 6573, 6595, 6623, 6669, 6727, 6785, 6793, 6848, 6867, 6917, 6951, 7010, 7041, 7056, 7109, 7166, 7213, 7263, 7280, 7338, 7388, 7443, 7484, 7543, 7558, 7616, 7637, 7654, 7712, 7735, 7794, 7848, 7859, 7920, 7970, 7991, 8028, 8085, 8108, 8142, 8157, 8175, 8191, 8222, 8285, 8296, 8309, 8363, 8392, 8439, 8479, 8515, 8559, 8571, 8629, 8659, 8711, 8764, 8818, 8877, 8909, 8966, 8979, 9037, 9062, 9082, 9107, 9149, 9192, 9233, 9255, 9301, 9331, 9371, 9400, 9415, 9451, 9485, 9506, 9521, 9557, 9579, 9634, 9671, 9709, 9738, 9787, 9841, 9869, 9919, 9972, 9996, 10006, 10039, 10078, 10116, 10171, 10230, 10254, 10300, 10355, 10391, 10427, 10464, 10520, 10579, 10594, 10617, 10641, 10702, 10747, 10808, 10839, 10898, 10962, 10993, 11048, 11068, 11108, 11160, 11203, 11251, 11264, 11287, 11353, 11376, 11433, 11451, 11511, 11569, 11628, 11653, 11688, 11706, 11721, 11762, 11812, 11866, 11882, 11909, 11927, 11984, 12026, 12061, 12092, 12144, 12167, 12224, 12258, 12298, 12328, 12379, 12395, 12438, 12474, 12502, 12560, 12579, 12621, 12675, 12728, 12785, 12825, 12883, 12928, 12967, 13023, 13071, 13097, 13139, 13178, 13230, 13259, 13294, 13332, 13382, 13428, 13480, 13525, 13561, 13594, 13626, 13685, 13716, 13737, 13767, 13820, 13852, 13880, 13902, 13917, 13932, 13977, 14029, 14055, 14093, 14115, 14154, 14205, 14230, 14249, 14266, 14324, 14355, 14385, 14407, 14437, 14479, 14510, 14561, 14612, 14629, 14638, 14691, 14716, 14734, 14782, 14830, 14883, 14926, 14947, 14993, 15015, 15055, 15110, 15138, 15193, 15250, 15303, 15340, 15399, 15451, 15480, 15525, 15552, 15590, 15643, 15671, 15693], "src_txt": ["we study the degree to which small fluctuations in costs in well - studied potential games can impact the result of natural best - response and improved - response dynamics .", "we call this the price of uncertainty and study it in a wide variety of potential games ( includ - ing fair cost - sharing games , set - cover games , routing games , and job - scheduling games ) , finding a number of surprising results .", "in particular , we show that in certain cases , even extremely small fluctuations can cause these dynamics to spin out of control and move to states of much higher social cost , whereas in other cases these dynamics are much more stable even to large degrees of fluctuation .", "we also consider the resilience of these dynamics to a small number of byzantine players about which no assumptions are made .", "we show again a contrast between different games .", "in certain cases ( e.g. , fair cost - sharing , set - covering , job - scheduling ) even a single byzantine player can cause best - response dynamics to transition to states of substantially higher cost , whereas in others ( e.g. , the class of \u03b2 - nice games which includes routing , market - sharing and many others ) these dynamics are much more resilient .", "it is widely accepted that rational agents in competitive environments can be viewed as utility maximizers .", "economic theory has gone to great lengths to justify this assumption , and deriving it from basic plausible axioms .", "major milestones in this line of research include von - neumann and morgenstein [ 23 ] , de finetti [ 9 ] and savage [ 19 ] .", "in essence , these results connect between agents ' preferences , likelihoods of events , and utility functions .", "( we should remark that there is a line of work in behavioral economics which challenges this approach , for example the well known works of kahneman and tversky [ 21 ] . )", "in this work we explore how small fluctuations or uncertainties about agents ' own utilities can substantially affect social welfare when players follow natural dynamics.in many cases we can view the agents ' utility functions as being based on measurements of some physical quantities .", "for example in job scheduling , the speed of each machine is a physical quantity which determines the load on each machine .", "an agent has to approximate this speed from its observation , where the simplest way is to consider the ratio of output quantity and time .", "even if the output quantity is given , different agents might have ( slightly ) different measurements of time , which will cause them to compute slightly different machine speeds .", "even the same agent might hypothesize different speeds for the same machine at different times , due to imperfection in its clock .", "we can model this phenomenon as follows .", "we assume that each machine has an absolute speed s , and at each time t each agent i observes a speed s t i \u2208 [ s / ( 1 + \u01eb ) , s ( 1 + \u01eb ) ] , for some uncertainty parameter \u01eb > 0 .", "this modeling of uncertainty is reminiscent of the statistical query learning model of kearns [ 12 ] .", "in other situations , even without uncertainty in measurement , the underlying game itself may exhibit small fluctuations in cost .", "for example , consider a transportation problem where each agent selects a route .", "we might model edges as having delay functions that are , say , linear in the amount of traffic on them , but in reality delays may also depend on external environmental factors which have been abstracted out of the model .", "therefore delays would not be exactly identical at two different times even if the amount of traffic at those times is the same .", "we can again view this similarly : at each time t , resource j has cost c t j \u2208 [ cj / ( 1 + \u01eb ) , cj ( 1 + \u01eb ) ] where cj is the \" base \" cost of that resource , and \u01eb is a degree - of - fluctuation parameter .", "in fact , this same issue of fluctuations in actual ( in addition to perceived ) costs may occur in job scheduling as well.the question we are interested in is : can these fluctuations ( in either perceived or actual costs ) cause best - response and improvedresponse dynamics to spin out of control and move from highquality states to states of much worse social welfare ?", "what values of \u01eb can different well - studied games tolerate ?", "we focus on potential games , where such dynamics are especially natural , and define a new measure we call the price of uncertainty ( pou ) , that models the effect these perturbations can cause .", "to define the pou we assume at each step t an agent does a best ( or improved ) response to the cost function at time t .", "the pou of a given game bounds the ratio of the initial social welfare to the social welfare of any state that can be reached in such a dynamic .", "1 a small pou implies that the system can not deteriorate due to such perturbations in costs , and provides a certain degree of robustness to the system ; a large pou means that deterioration could be severe .", "note that all the games we consider have only a small gap between potential and cost , so without any fluctuations , these dynamics would never cause social welfare to deteriorate substantially .", "in addition , all the games we consider have near - optimal equilibria ( their price of stability is low ) , and they continue to do so even after perturbation : thus , the effect we are studying is not that the system moves to a poor state because good equilibria no longer exist , but rather whether small perturbations can lead natural dynamics astray .", "our results : we analyze a number of well - studied potential games from this perspective , including cost - sharing [ 2 ] , matroid games [ 1 ] , job - scheduling [ 13,8 ] , and the class of \u03b2 - nice games [ 3 ] , proving both upper and lower bounds on how resilient they are to such perturbations under both best - response and improved - response dynamics .", "our analysis shows a number of surprising distinctions between these games , as well as between these two dynamics .", "in some cases , we show even exponentially small perturbations can result in drastic increases in cost ; in others , polynomially - small perturbations are sufficient to ensure good behavior , and finally some are resilient even to constant - sized fluctuations .", "for example , in fair cost - sharing games with many players of each type , we show that with best - response dynamics , the price of uncertainty is constant even for constant \u01eb > 0 .", "however , with improved - response dynamics , even exponentially small fluctuations can cause an exponentially large increase in the cost of the system .", "on the other hand , with few players of each type , the game becomes less resilient , and constant - size fluctuations can cause even best - response dynamics to incur a pou of \u03c9 ( n ) , where n is the number of players , moving from an equilibrium of cost o ( opt ) to one of cost \u03c9 ( n \u00b7 opt ) , matching the price of anarchy of the game .", "for set - covering games , a natural special case of fair cost - sharing studied by [ 6 ] where players must choose which set to belong to and split the cost with others making the same choice , we show both best - response and improved - response dynamics have a logarithmic price of uncertainty for \u01eb = o ( 1 / ( mn ) ) .", "however , for matroid games ( a broad class that generalizes set - covering and many other games ) , while best - response dynamics continues to exhibit good behavior , improved - response dynamics again has exponentially large pou even for exponentially small \u01eb ( exponential in the rank of the matroid ) .", "we also give a technically intricate lower bound of \u03c9 ( \u01eb \u221a n / log ( 1 / \u01eb ) ) on the pou of best - response dynamics for set - covering games , showing that \u01eb < polylog ( n ) / \u221a n is necessary for polylogarithmic pou .", "finally , for the class of \u03b2 - nice games , which for constant \u03b2 includes congestion games with linear ( or constant - degree polynomial ) latency functions , market - sharing games , and many others [ 3 ] , we show that for random order bestresponse dynamics , the price of uncertainty is\u02dcois\u02dc is\u02dco ( \u03b2 ) .", "however , again for improved - response dynamics the pou can be exponential .", "we also present results for job scheduling on unrelated machines and consensus games .", "we also explore a different kind of robustness , which is a robustness to adversarial ( byzantine ) players .", "this can be viewed as a fault - tolerance of the system to a few misbehaved agents .", "for our lower bounds , we concentrate on the case of a single adversarial ( byzantine ) player , and measure to what degree can such a player can cause the system 's social welfare to deteriorate .", "we show agent 's behavior is the same .", "also , in general we assume that the initial state is arbitrary .", "it could be an equilibrium , in which case the pou can be viewed as studying the stability of the equilibrium .", "alternatively , the initial state might result from a change in the system ( adding or removing a link in routing , or adding or removing a machine in job scheduling ) .", "in such a case the agents dynamics start from a more arbitrary state .", "that for set cover games , a single byzantine player can cause bestresponse dynamics to move from an equilibrium of cost o ( opt ) to one of cost \u03c9 ( n \u00b7 opt ) .", "( this is as bad a situation as possible since the price of anarchy in such games is o ( n ) . )", "for job scheduling on two unrelated machines we show that a single byzantine player can induce a dynamic where the cost increases from 1 to \u03c9 ( n ) , and that the same is true for consensus games .", "for our positive results , we allow any number of byzantine players .", "we show that for job scheduling on identical machines the effect of byzantine players is very limited .", "for \u03b2 - nice games , under additional assumptions on the impact the byzantine players can have on the social cost of any given state , and assuming random - order bestresponse dynamics , we can show that at any time t , the expected social cost can not be above 6\u03b2 \u00b7 opt \u00b7 gap , where gap bounds the ratio between potential and cost for the game ( e.g. , for fair cost sharing games gap = o ( log n ) ) .", "our work can be thought of as asking what kinds of fault - tolerance properties we can guarantee in multi-agent environments .", "that is , if the system is currently in a low - cost equilibrium state , when can we expect it to remain so even in the presence of slight perturbations in costs or in the presence of a small number of misbehaving ( byzantine ) players .", "our analysis also points out a fragility in standard potential - function arguments in cases where the underlying model is not quite perfect .", "related work : recent work on the \" price of malice \" and related notions have also considered the effect that byzantine players can have in several natural games [ 4,18,15 ] .", "the focus of that work has been on the effect of such players on the quality of the worst nash or coarse - correlated equilibria .", "in contrast , we are interested in the effect of such players on an initial state that may be much better than the worst equilibrium , for a wide class of potential games with a low gap between potential and cost ( so that without any perturbations or byzantine players , behavior would never degrade substantially ) .", "a game is denoted by a tuple g = n , ( si ) , ( costi ) where n is a set of n players , si is the finite action space of player i \u2208 n , and costi is the cost function of player i .", "the joint action space of the players is s = s1 \u00d7 . . . \u00d7 sn .", "for a joint action s \u2208 s we denote by s \u2212 i the actions of players j = i , i.e. , s \u2212 i = ( s1 , ... , si \u2212 1 , si \u2212 1 , ... , sn ) .", "furthermore we denote by s \u2295 s \u2032 i the state ( s1 , ... , si \u2212 1 , s \u2032 i , si \u2212 1 , ... , sn ) .", "the cost function of player i maps a joint action s \u2208 s to a real non-negative number , i.e. , costi : s \u2192 r + .", "every game has associated a social cost function cost : s \u2192 r that maps a joint action to a real value .", "in the cases discussed in this paper the social cost is a simple function of the costs of the players .", "in particular , we discuss the sum , i.e. , cost ( s ) = p n i = 1 costi ( s ) , and the max , i.e. , cost ( s ) = max n i = 1 costi ( s ) .", "( in the context of load balancing games we call the maximum social function the makespan social cost function . )", "the optimal social cost of a game g is opt ( g ) = mins \u2208 s cost ( s ) .", "we sometimes overload notation and use opt for a joint action s that achieves cost opt ( g ) .", "given a joint action s , the best response ( br ) of player i is the set of actions bri ( s ) that minimizes its cost , given the other players actions s \u2212 i , i.e. , bri ( s \u2212 i ) = arg mins \u2208 s i costi ( s , s \u2212 i ) .", "given a joint action s , the improved response ( ir ) of player i is the set of actions iri ( s ) that have lower cost than its current action , i.e. , iri ( s ) = { s \u2208 si | costi ( s , s \u2212 i ) \u2264 cost ( s ) } .", "a joint action s \u2208 s is a pure nash equilibrium ( ne ) if no player i \u2208 n can benefit from unilaterally deviating to another action , namely , every player is playing a best response action in s , i.e. , si \u2208 bri ( s \u2212 i ) for every i \u2208 n .", "a best ( improved ) response dynamics is a process in which at each time step , some player which is not playing a best response switches its action to a best ( improved ) response action , given the current joint action .", "in this paper we will concentrate on games in which any best ( improved ) response dynamics converges to a pure nash equilibrium ( which are equivalent to the class of ordinal potential games [ 14,17 ] ) .", "throughout the paper we denote by gap ( g , n ) the maximum ratio between the cost of a given joint action and the value of the potential function for it , where g is a game of n players.let n ( g ) be the set of nash equilibria of the game g .", "the price of anarchy ( poa ) is defined as the ratio between the maximum cost of a nash equilibrium and the social optimum , i.e. , ( max s \u2208 n ( g ) cost ( s ) ) / opt ( g ) .", "the price of stability ( pos ) is the ratio between the minimum cost of a nash equilibrium and the social optimum , i.e. , ( min s \u2208 n ( g ) cost ( s ) ) / opt ( g ) .", "in this paper we introduce and study the price of uncertainty ( pou ) .", "we consider three different variations .", "adversarial model : consider a game g , from a given class of games g , where the agents start at some given initial configuration s0 ( which might be a nash equilibrium or not ) .", "now we progress in phases , where in phase t the following occurs .", "first , at time t , the adversary perturbs the costs of g by a small multiplicative factor from their initial values , so that for any s and j we havecost t j ( s ) \u2208 [ costj ( s ) / ( 1 + \u01eb ) , ( 1 + \u01eb ) costj ( s ) ] .", "2then the adversary picks an agent i who performs a best ( improved ) response , and the new configuration is st.our main concern is to upper bound cost ( st ) / cost ( s0 ) as a function of \u01eb and the class of games g .", "more precisely , let us define p oubr ( \u01eb , g ) = max cost ( st ) / cost ( s0 ) , where the max operator is over the initial configuration s0 , the number of time steps t , and a dynamics of t time steps which includes the selection of a player i \u2208 n and the selection of its best response at each time step .", "for a class of games g , let p oubr ( \u01eb , g ) be maxg \u2208 g p oubr ( \u01eb , g ) .", "we define similarly p ouir for improved response .", "random order model : this model is similar to the adversarial model , except that at each time step a random agent i \u2208 n is selected .", "we now care about the expected cost at time t .", "we remark that although the player is selected at random , its action is selected as an adversarial best ( improved ) response to an adversarially selected perturbation of its cost .", "in this case we denote the price of uncertainty by p ou r br .", "3 byzantine model : in this model , rather than perturbing costs , the adversary instead has control over a small number of byzantine agents .", "at each time step t , the adversary moves the byzantine agents arbitrarily , and then an agent i \u2208 n is selected ( either adversarially or at random ) , who then performs a best - response .", "thus , while in the other models the adversary can perturb all costs by a small amount , in this model the adversary can influence only a few players , but for those players it has full control .", "this implies that the adversary can typically influence the costs of only a few resources at a time ( those used by the byzantine players ) by an amount that depends on the game and the current joint action of the players.one can view the adversarial model as a directed graph , where the nodes are the possible joint actions .", "there is a directed edge from s to s \u2032 if they differ in the action of only one player i , and the adversary can cause player i to move from its action in s to its action in s \u2032 : for improved response dynamics , this means perturbing costs so that cost t i ( s \u2032 ) \u2264 cost t i ( s ) , and for best response dynamics this means cost t i ( s \u2032 ) is the minimum cost of any state player i can reach unilaterally from s. given this graph , for each joint action s let v ( s ) be the set of nodes reachable from it .", "the pou then bounds the ratio between the social cost in s and the maximum social cost of any joint action reachable from s , i.e. , maxs max v \u2208 v ( s ) cost ( v ) / cost ( s ) .", "in this paper we extensively study congestion games and important sub-classes of them .", "a congestion game g is defined by a tuple ( n , r , ( si ) , ( di ) ) , where n is the set of n players , r is the set of m resources , the action of player i is si \u2286 2 r , and the goal of player i is to play a strategy si that minimizes its individual cost costi .", "the cost costi ( s ) of player i is given by p r \u2208 s i dr ( nr ( s ) ) , where nr ( s ) is the number of players sharing resource r in state s and dr : n \u2192 n is a delay function associated with resource r. rosenthal [ 17 ] shows that every congestion game possesses at least one nash equilibrium by considering the potential function\u03c6 ( s ) = p r \u2208 r p nr ( s ) i = 1dr ( i ) .", "we call a congestion game symmetric if all the players share the same set of strategies , otherwise we call it asymmetric .", "specific classes of congestion games that we study in this work are cost - sharing games , matroid congestion games , \u03b2 - nice games , and consensus games .", "we define all these in their corresponding sections , namely sections 4.1 , 4.2 , 5.1 and 4.3 .", "for games with \u03c6 ( s ) \u2265 cost ( s ) we define gap ( g , n ) as maxs \u03c6 ( s ) / cost ( s ) .", "more generally , for games such that \u03c6 ( s ) \u2208 [ c1cost ( s ) , c2cost ( s ) ] we define gap ( g , n ) = c2 / c1 , where we assume c1 \u2264 1 \u2264 c2.another class of games we study are load balancing games ( see [ 16 ] ) which we define in section 4.4 .", "we start with a few simple observations regarding the price of uncertainty in general , and for congestion games in particular .", "first , note that for \u01eb = 0 we get the \" standard \" best ( improved ) response dynamics .", "in this case the pou is simply asking by how much can the social welfare deteriorate , assuming that all the players are implementing best ( improved ) response dynamics ( even this can be higher than the poa , see theorem 3.1 ) .", "our first observation is that even for \u01eb = 0 the p ou is at least the price of stability .", "this follows since we can start at s0 as the social optimal configuration , and any best response dynamics will reach some equilibrium st.fact 3.1 .", "for any \u01eb \u2265 0 we have :p ouir ( \u01eb , g ) \u2265 p oubr ( \u01eb , g ) \u2265 p oubr ( 0 , g ) \u2265 p os ( g ) .", "for fair cost - sharing games , fact 3.1 implies an \u03c9 ( log n ) bound , due to the price of stability results [ 2 ] .", "second , one should expect the ratio to also depend on the magnitude of \u01eb .", "for example , for any given game , for sufficiently small \u01eb , the perturbations of the adversary would have no real effect , and the agents would simply follow some best ( improved ) response dynamics from the initial configuration .", "more specifically : fact 3.2 .", "for any game class g there is an \u01eb0 > 0 such that for any \u01eb < \u01eb0 , p ouir ( \u01eb , g ) = p ouir ( 0 , g ) and p oubr ( \u01eb , g ) = p oubr ( 0 , g ) again , for fair cost sharing games , since the social cost of any configuration s is at most a logarithmic factor from the value of the potential function [ 2 ] , this would give an o ( log n ) upper bound for \u01eb = 0 , i.e. , p ouir ( 0 , f csg ) = o ( log n ) .", "in exact potential games , an immediate observation is : fact 3.3 .", "in any exact potential game after t steps the potential function increases by at most ( 1 + \u01eb ) 2t .", "clearly , fact 3.3 implies that the potential function increases by at most ( 1 + \u01eb ) 2l , where l is the number of configurations of players ; for congestion games , since players choose subsets of resources , l \u2264 2 mn .", "it is interesting to note that there exists g such that p oubr ( 0 , g ) is larger by a multiplicative \u03c9 ( log n ) factor than p oa ( g ) .", "in particular we can show the following .", "let g be the class of market - sharing games .", "then p oa ( g ) = 2 while p oubr ( 0 , g ) = \u03b8 ( log n ) .", "the bound on the poa is from [ 22 ] .", "for the lower bound on pou , consider players { 2 , . . . , n } where player i can select between a dedicated site si with benefit 1 / i and a shared site s1 with benefit 1 .", "initially , each player i uses its dedicated site si , and the social welfare benefit is ln n .", "now let the players perform best response in an increasing order of the indices .", "player i has a benefit of 1 / i , and the benefit from moving to s1 is 1 / ( i \u2212 1 ) , so it prefers to move to s1 .", "this implies that at the end of the sequence the social welfare benefit is 1 .", "the upper bound follows immediately from the fact that the gap between potential and cost in this game satisfies gap = o ( log n ) .", "note that in such cases we are willing to lose the log n factor , and we are interested in for what values of \u01eb the value of p oubr ( \u01eb , g ) is not much larger than p oubr ( 0 , g ) .", "finally , we point out a simple relationship between the perturbation and byzantine models .", "consider a class of games g such that a single player can not change the cost of any given state s to any player i by more than a factor of \u03b1 , and whose effect is monotone ( for example , for fair cost - sharing , a new player can reduce the cost of a given state s to a player by at most a factor of 2 , and in any state it can not increase the total cost of the other players ) .", "then , an adversary with \u01eb = \u221a \u03b1 \u2212 1 can simulate the effect of abyzantine player on best - response ( or improved - response ) dynamics .", "this implies that any lower bound for a single byzantine player ( such as in theorems 6.2 , 6.3 and 6.5 ) translates to a lower bound on p oubr ( \u221a \u03b1 \u2212 1 , g ) .", "in this section we present our results in the adversarial model and give upper and lower bound on p oubr and p ouir for a number of well - studied classes of games .", "we begin by considering set - cover games , a natural type of cost - sharing game studied in [ 6 ] , showing that both best - response and improved - response dynamics are resilient to polynomially - small fluctuations ( theorem 4.1 ) , but that even for best - response this resilience breaks down for \u01eb \u2265 p 2 / n ( theorem 4.2 ) .", "we then consider two generalizations of these games : fair cost sharing in general directed graphs [ 2 ] , and matroid games [ 1 ] .", "in both cases , we show that even exponentially small fluctuations can cause improved - response dynamics to move to high cost states ( lemma 4.2 and theorems 4.5 and 4.8 ) ; however , best - response dynamics remains resilient to polynomiallysmall fluctuations ( theorems 4.3 , 4.4 , and 4.7 ) .", "we also present results for job - scheduling and consensus games .", "in this section we consider fair cost sharing games ( fcsg ) , a class of congestion games defined as follows .", "we are given a graph g = ( v , e ) , which can be directed or undirected , where each edge e \u2208 e has a nonnegative cost we \u2265 0 .", "there is a set n = { 1 , ... , n } of n players , where player i is associated with a source si and a sink ti .", "the strategy set of player i is the set si of si \u2212 ti paths .", "in an outcome of the game , each player i chooses a single path pi \u2208 si .", "given an outcome s = ( p1 , ... , pn ) , let ne ( s ) be the number of agents whose path contains edge e .", "in the fair cost sharing game the cost to agent i is costi ( s ) = p e \u2208 p i we ne ( s ) and the goal of each agent is to connect its terminals with minimum total cost .", "the social cost is defined to be pe \u2208 \u222a i p iwe .", "it is well known that the price of anarchy in these games is \u03b8 ( n ) while the price of stability is h ( n ) [ 2 ] , where h ( n ) = p n i = 1 1 / i = \u03b8 ( log n ) .", "a well known characterization of the potential function [ 17 ] of these games [ 2 ] is the following.lemma 4.1 .", "in fair cost sharing , for any joint action s \u2208 s , we have : cost ( s ) \u2264 \u03c6 ( s ) \u2264 h ( n ) \u00b7 cost ( s ) .", "set - cover games ( scg ) were considered in [ 6 ] .", "in a set - cover game , there are n players , and m subsets over the players .", "the cost associated with set i is wi .", "each player j has to choose one of the sets i that contains him and gets to split the cost of the set with other players who choose the same set .", "set - cover games are a special case of fair cost sharing games .", "we begin with an upper bound for improved - response dynamics .", "in the set covering game , for any \u01eb > 0 we have , p ouir ( \u01eb , scg ) \u2264 ( 1 + \u01eb ) 2mn log n. therefore , for \u01eb = o ( 1 nm ) , we have p ouir ( \u01eb , scg ) = o ( log n ) .", "suppose the initial configuration s0 has ki players using set / edge i of cost wi .", "think of this as a stack of ki chips , where we label each chip with the name of its initial set and its position in the stack .", "so the bottom chip for set i is labeled ( i , 1 ) , then the one above it is labeled ( i , 2 ) , and so on .", "we will give chip ( i , j ) a value of wi / j. so , the sum of values of the chips equals the potential function of the initial configuration , which according to lemma 4.1 is at most a factor of log n larger than the original cost , i.e , cost ( s0 ) \u00b7 log n. now , when a player moves from some set i1 to some set i2 , we move the top chip from stack i1 to stack i2 .", "the claim is that we maintain the invariant that if chip ( i , j ) is currently at some position j \u2032 on some stack i \u2032 , then it must be the case thatw i \u2032 / j \u2032 \u2264 ( wi / j ) \u00b7 ( 1 + \u01eb ) 2mn .", "this will imply what we want , because it means that we can pay for any new set that gets taken using the bottom chip on its stack .", "( we are using here the fact that a chip can only be in one stack . )", "the argument for the invariant is that there are at most m \u00b7 n different positions a given chip can be in ( m stacks , n positions per stack ) so if you consider the path a chip takes from its initial location to its current location , this path has length at most m \u00b7 n ( you can remove loops in this configuration space ) .", "since players follow an improved response dynamics , each step in this move causes the ratio of cost of the current stack to position in the stack to increase by at most a factor ( 1 + \u01eb ) 2 .", "so , overall , the total increase is at most a factor of ( 1 + \u01eb ) 2mn .", "so , cost ( st ) \u2264 ( 1 + \u01eb ) 2mn cost ( s0 ) log n for all t , as desired.we now give a lower bound , showing that for \u01eb \u226b log ( n ) / \u221a n , the price of uncertainty can get large even for best - response dynamics.theorem 4.2 .", "in the set covering game we have p oubr ( \u01eb , scg ) = \u03c9 ( \u01eb \u221a n log ( 1 / \u01eb ) ) .", "the proof builds on a construction in section 6 giving a lower bound in the presence of a single byzantine player , but adding in an extra \" gadget \" of \u03b8 ( \u221a n / \u01eb +1 / \u01eb 2 ) players that allows the adversary to simulate the effect of a byzantine player even via quite small fluctuations .", "the construction in this lower bound is fairly intricate so we defer the proof to appendix a .", "we now consider fair cost sharing games in general directed graphs .", "we show here that so long as the number of players ni of each type ( i.e. , associated to each ( si , ti ) pair ) is large , then the game is stable even for large values of \u01eb under best - response dynamics .", "specifically , so long as ni = \u03c9 ( m ) for all i , we have a constant price of uncertainty .", "on the other hand , for improvedresponse dynamics , then costs can grow exponentially even for exponentially small values of \u01eb , even for the symmetric ( single source , single sink ) case .", "p oubr ( \u01eb , f csg ) \u2264 \" 1 + ( 1 + \u01eb ) 2 n min \" m , where nmin = mini ni.this implies that for nmin = \u03c9 ( m ) , we have p oubr ( \u01eb , f csg ) = o ( 1 ) .", "call an edge \" marked \" if it is ever used throughout the best - response process , including those used in the initial state s0 , and let c * be the total cost of all marked edges .", "so , c * is an upper bound on the cost of the current state .", "any time a best - response path for some ( si , ti ) pair uses an unmarked edge , the total cost of the unmarked edges used is at most ( c * / ni ) \u00b7 ( 1 + \u01eb ) 2 , because ( c * / ni ) ( 1 + \u01eb ) is an upper bound on the perturbed average cost of players of type ( si , ti ) and therefore is an upper - bound on the perturbed cost of the best - response path for any such player .", "this in turn is within a ( 1 + \u01eb ) factor of the actual cost of this path .", "thus , c * increases by at most a multiplicative ( 1 + ( 1 + \u01eb ) 2 / ni ) factor .", "we can mark new edges at most m times , so the final cost is at most cost ( s0 ) ( 1 + ( 1 + \u01eb ) 2 / nmin ) m , where nmin = mini ni .", "this implies that as long as nmin = \u03c9 ( m ) we have cost ( st ) = o ( cost ( s0 ) ) , for all t , as desired.for symmetric fair cost sharing games ( scfcsg ) we can get a low price of uncertainty even when the number of players is much smaller than the number of edges , i.e. , n \u226a m. theorem 4.4 .", "for symmetric fair cost sharing games , where the edge costs are in the range [ wmin , wmax ] , we have p oubr ( \u01eb , sf csg ) = o ( log n ) , for \u01eb < w min 4wmax 1 mn ( n \u2212 1 ) log n .", "we start with some notation .", "we say that at time t , the best - response player jt moves from path pt to path p \u2032 t , creating state st. we will say that a time t is \" interesting \" if pt +1 = p \u2032 t : that is , if the next player moves from a path different from the one the current player moved to .", "let us index the interesting times as t1 , t2 , . . . .", "the argument now proceeds in two steps : we first show an upper bound on the number of interesting time steps ofu = o ( 1 \u03b1 log n ) for \u03b1 = w min 8wmax 1 n ( n \u2212 1 ) m .", "we then prove that the potential of the final state st satisfies \u03c6 ( st ) \u2264 ( 1 + \u01eb ) 2u \u03c6 ( s0 ) .", "using the fact that \u01eb < w min 4wmax 1 mn ( n \u2212 1 ) log n and the o ( log n ) gap between potential and cost in these games , we get the desired result.let r k denote the true ( unperturbed ) cost of the path p \u2032 t k at time t k ; that is , r k = costj t k ( st k ) .", "we now claim thatr k \u2264 \" r k \u2212 1 \u2212 wmin n ( n \u2212 1 ) \u00ab ( 1 + \u01eb ) 2 .", "( 4.1 ) specifically , note that because p \u2032 .", "in particular , w min n ( n \u2212 1 ) is a lower bound on the savings produced by having one more player on the edges in which p \u2032 t k \u2212 1 and pt k \u2212 1 +1 differ ( which implies the desired statement for t k = t k \u2212 1 +1 ) and each player jt k \u2212 1 +2 , . . . , jt k could have moved to path pt k \u2212 1 +1 reverting the system to state st k \u2212 1 ( which extends the statement to the case t k > t k \u2212 1 + 1 ) .", "therefore , since player jt k is performing best response to the perturbed costs , the true costr k of p \u2032 t kis at most a factor ( 1 + \u01eb ) 2 larger than r k \u2212 1 \u2212 w min n ( n \u2212 1 ) .", "for our given values of \u03b1 and \u01eb , and using the fact that r k \u2212 1 \u2264 wmax \u00b7 m , inequality ( 4.1 ) implies that r k \u2264 r k \u2212 1 ( 1 \u2212 \u03b1 ) .", "since r1 \u2264 opt ( 1 + \u01eb ) 2 and by definition of opt it must be that rt \u2265 opt / n , we get that the number of interesting time steps is at most u = o ( 1 \u03b1 log n ) .", "we now bound the potential in terms of the number of interesting time steps .", "specifically , note that player jt k could have moved to path pt k \u2212 1 +1 , which would revert the system to state st k \u2212 1 becausep \u2032 t k \u2212 1 +1 = pt k \u2212 1 +2 , . . . , p \u2032 t k \u2212 1 = pt k .", "becauseplayer jt k chose path p \u2032 t k instead , which was best - response to the perturbed costs , this means \u03c6 ( st k ) \u2264 \u03c6 ( st k \u2212 1 ) ( 1 + \u01eb ) 2 .", "therefore , the fi - nal state st satisfies \u03c6 ( st ) \u2264 \u03c6 ( s0 ) ( 1 + \u01eb ) 2u , completing the argument.improved response the above results give upper bounds for best response in fair cost sharing games .", "in contrast , we now show that for improved - response dynamics , the price of uncertainty is exponentially large even for exponentially - small values of \u01eb , even for symmetric fair cost sharing games .", "for symmetric fair cost sharing , for a single player ( i.e. , n = 1 ) , the price of uncertainty for improved - response dynamics satisfies p ouir ( \u01eb , sf csg ) \u2265 1 + 2 ( 2 m / 2 \u2212 1 ) \u01eb / m. proof .", "the graph consists of a line of parallel edges arranged as follows .", "we have two parallel edges from s = v0 to vertex v1 of cost 1 and 1 + \u01eb respectively , then two parallel edges from v1 to vertex v2 of costs 1 and 1 + 2\u01eb , then two parallel edges from v2 to v3 of costs 1 and 1 + 4\u01eb , and in general from vi to vi +1 of costs 1 and 1 + 2 i \u01eb .", "finally we let sink t = v m / 2 so we have a total of m edges .", "the player begins on the cheapest path , of cost m / 2 .", "we can describe a path from s to t by a binary number b = b m / 2 \u2212 1 . . . b2b1b0 , where bit bi = 0 if the path uses the edge of cost 1 from vi to vi +1 and bi = 1 if the path instead uses the edge of cost 1 + 2 i \u01eb .", "thus , path b has cost exactly m / 2 + b\u01eb , and the player begins at path 0 .", "we now claim that using a series of perturbations and improvedresponse moves , one can cause the player to repeatedly increment , moving from path b to path b + 1 until the player finally reaches path 2 m / 2 \u2212 1 , achieving the desired bound .", "specifically , since the difference in true cost between path b + 1 and path b is exactly \u01eb , it is sufficient to choose some arbitrary edge in path b that is not in path b + 1 and increase its cost by a multiplicative factor 1 + \u01eb to cause b + 1 to be an improvement over b ( and we can similarly decrease the cost of an edge in b + 1 that is not in b to make it a strict improvement ) .", "the generalization for multiple players is straightforward .", "for symmetric for cost sharing , for any number of players n , the price of uncertainty for improved - response dynamics satisfies p ouir ( \u01eb , sf csg ) \u2265 1 + 2 ( 2 m / 2 \u2212 1 ) \u01eb / m.we can use lemma 4.2 to imply a bound also for routing games [ 16 ] with linear ( or even constant ) latency functions , since for the case of a single player these games are identical .", "for routing with linear latency functions , the price of uncertainty for improved - response dynamics satisfies p ouir ( \u01eb , rou t in g ) \u2265 1 + 2 ( 2 m / 2 \u2212 1 ) \u01eb / m .", "we now analyze matroid congestion games , a broad class of games considered in [ 1 ] .", "before we give a formal definition of such games , we briefly introduce a few standard facts about matroids ; for a detailed discussion , we refer the reader to [ 20 ] .", "a tuple m : = ( r , i ) is a matroid if r is a finite set of resources and i is a nonempty family of subsets of r such that if i \u2208 i and j \u2286 i , then j \u2208 i , and if i , j \u2208 i and | j | \u2264 | i | , then there exists an i \u2208 i such that j \u222a { i } \u2208 i.let m : = ( r , i ) be a matroid .", "let i \u2282 r ; if i \u2208 i then we call i independent , otherwise we call it dependent .", "it is well known that all maximal independent sets of i have the same size , which is denoted by the rank rk ( m ) of the matroid .", "a maximal independent set of m is called a basis of m .", "it is well known that such a basis can be found by a greedy algorithm .", "in the following we state two additional useful properties of the matroids .", "we denote by b the set of bases of a matroid , and assume that b1 , b2 \u2208 b.lemma 4.3 .", "let r2 \u2208 b2 \\ b1 , then there exists r1 \u2208 b1 \\ b2 such that b1 \u222a { r2 } \\ { r1 } \u2208 b.we denote by g ( b1 \u25b3 b2 ) the bipartite graph ( v , e ) with v = ( b1 \\ b2 ) \u222a ( b2 \\ b1 ) and e = { { r1 , r2 } | r1 \u2208 b1 \\ b2 , r2 \u2208 b2 \\ b1 , b1 \u222a { r2 } \\ { r1 } \u2208 b } .", "then it is known that [ 20 ] .", "we are now ready to define matroid congestion games .", "a congestion game is a matroid congestion game if for every player i \u2208 n we have that mi : = ( r , ii ) with ii = { i \u2286 s | s \u2208 si } is a matroid and si is the set of bases of mi .", "we denote by rk ( m ) = maxi \u2208 n rk ( mi ) the rank of the matroid congestion game m .", "for example , set - cover games are matroid games of rank 1 and marketsharing games with uniform costs are matroid games [ 11 ] ( though even symmetric fair cost sharing need not be a matroid game ) .", "we now show that for best - response dynamics , matroid games have similar resilience to fluctuations as set - cover games ; however , for improved response we give an exponential lower bound .", "in a matroid game , p oubr ( \u01eb , m atroid ) \u2264 ( 1 + \u01eb ) 2mn gap ( m atroid , n ) .", "this implies that for \u01eb = o ( 1 / ( n \u00b7 m ) ) , we have p oubr ( \u01eb , m atroid ) = o ( gap ( m atroid , n ) ) .", "the proof proceeds as in theorem 4.1 .", "however , we initially have p i \u2208 n rk ( mi ) \u2264 n \u00b7 rk ( m ) chips and the cost ( s0 ) is within a gap ( m atroid , n ) factor from the sum of the values of the chips.let s be a state of the matroid congestion game m and let s * i be a best response of player i to s according to the perturbed cost\u02dcdrcost\u02dc cost\u02dcdr .", "consider the bipartite graph g ( s * i \u25b3 si ) which contains a perfect matching pm according to lemma 4.4 .", "let s * = s \u2295 s * i , and observe that for every edge ( r , r * ) \u2208 pm with r * \u2208 s * i \\ si and r \u2208 si \\ s * i , \u02dc dr * ( nr * ( s * ) ) \u2264 \u02dc dr ( nr ( s * ) + 1 ) \u2264 \u02dc dr ( nr ( s ) ) since otherwise s * i is not a best response of player i with respect t\u00f5t\u00f5 dr.when a player does a best response we now move rk ( g ) chips ( corresponding to at most rk ( g ) resources ) , and each movement sets up an inequality of the typed i \u2032 ( j \u2032 ) \u2264 di ( j ) \u00b7 ( 1 + \u01eb ) 2 .", "the claim is that we maintain the invariant that if chip ( i , j ) is currently at some position j \u2032 on some stack i \u2032 , then it must be the case thatd i \u2032 ( j \u2032 ) \u2264 di ( j ) \u00b7 ( 1 + \u01eb ) 2mn .", "the argument is the same as in theorem 4.1 : there are at most m \u00b7 n different positions a given chip can be in ( m stacks , n positions per stack ) so if you look at the path a chip takes from its initial location to its current location , this path has length at most m \u00b7 n ( you can remove loops in this configuration space ) .", "4 so , for all t we have \u03c6 ( st ) \u2264 ( 1 + \u01eb ) 2mn \u03c6 ( s0 ) , which implies cost ( st ) \u2264 ( 1 + \u01eb ) 2mn cost ( s0 ) \u00b7 gap ( m atroid , n ) , which completes the proof.note : as opposed to the set - covering result ( theorem 4.1 ) , this result holds for best response dynamics only .", "we can in fact show that improved response is not sufficient in these games , even if \u01eb is exponentially small in the rank of the matroid .", "in particular , even though symmetric cost - sharing is not a matroid game , the proof of lemma 4.2 applies equally well to improved - response dynamics if we replace the graph structure with a uniform matroid having m resources and with rank r = m / 2 .", "we therefore have the following : theorem 4.8 .", "there exists a matroid game of rank r = m / 2 such that the price of uncertainty for improved - response dynamics satisfies p ouir ( \u01eb , m atroid ) \u2265 1 + 2 ( 2 m / 2 \u2212 1 ) \u01eb / m. consensus games [ 7 ] are played by users viewed as vertices in a connected , undirected simple graph g = ( n , e ) with n vertices , where n = { 1 , ... , n } .", "each player i has two actions r or b , i.e. , si = { r , b } .", "a player has cost 1 for each incident edge on which he disagrees with his neighbor .", "costi ( s ) = p ( i , j ) \u2208 e i ( s i = s j ) .", "the overall social cost is the sum of the costs of all the users , plus 1 , i.e. , cost ( s ) = 1 + p i \u2208 n costi ( s ) .", "it is straightforward to show that these games are congestion games [ 14 ] and that the potential function can be rewritten as be \u03c6 ( s ) = ( cost ( s ) \u2212 1 ) / 2 .", "the two social optimum solutions in a consensus game are \" all blue \" and \" all red \" , both of which are also a nash equilibrium ( so the price of stability is 1 ) .", "on the other hand , there are nash equilibria with cost \u03c9 ( n 2 ) .", "the above describes unweighted consensus games ; in weightedconsensus , the edges have non-negative weights and the cost to a player is the total weight of edges on which it disagrees with its neighbors .", "in our model , we can show the following ( for proofs , see the full version [ 5 ] ) : theorem 4.9 .", "for any unweighted consensus game ( ucg ) , for any \u01eb , we have p oubr ( \u01eb , u cg ) \u2265 ( n \u2212 1 ) \u01eb +1 .", "for \u01eb > \u221a 2 \u2212 1 we can show p oubr ( \u01eb , u cg ) = \u03c9 ( n 2 ) .", "for a weighted consensus game we can show an exponential lower bound .", "for any weighted consensus game ( wcg ) , for any \u01eb , we have p oubr ( \u01eb , w cg ) \u2265 ( 1 + \u01eb ) n .", "in this section we consider job scheduling on unrelated machines ( jsum ) ( see [ 16 ] ) defined by ( n , m , c ) as follows .", "the set n is a set of n jobs , and m is the set of m machines .", "each player is associated with a job , so have n players .", "every job can impose a load on one of the machines , so for every player j its set of feasible actions is to assign job j to some machine i \u2208 m .", "each job j \u2208 n has associated a cost ci , j for running on machine i \u2208 m .", "given an assignment of jobs to machines , the load of machine i is the sum of the costs of the jobs that are assigned to that machine , i.e. , li ( s ) = p j \u2208 b i ( s ) ci , j where bi ( s ) is the set of jobs assigned to machine i , i.e. , bi ( s ) = { j : sj = i } .", "the cost of a player j is the load on the machine that player j selected , i.e. , costj ( s ) = ls j ( s ) .", "for the social cost we use the makespan , which is the load on the most loaded machine , i.e. , cost ( s ) = maxi li ( s ) .", "the price of stability in these games is 1 , since there is always a pure nash equilibrium which is also socially optimal [ 10 ] .", "the price of uncertainty in these games can be exponentially large , even for two machines , when \u01eb is large compared to 1 / n. ( for proofs , see the full version [ 5 ] ) : theorem 4.11 .", "for job scheduling on unrelated machines , for m = 2 machines and any \u01eb > 2 / n , we have p oubr ( \u01eb , jsu m ) \u2265 ( 1 + \u01eb ) n / 2 \u02c6 1 \u2212 2 \u01eb\u00f1 \u01eb\u00f1 + 2 \u01ebn = \u03c9 ( ( 1 + \u01eb ) n / 2 ) .", "for job scheduling on identical machines ( jsim ) we have a simple upper bound , even for large perturbations .", "we now consider the effect of perturbations on random order best - response dynamics ( for improved - response dynamics , random and adversarial order are equivalent since the adversary can simply choose not to cause a player to move ) .", "our main result is that for the broad class of \u03b2 - nice games introduced by [ 3 ] , which for constant \u03b2 includes congestion games with linear ( or constant - degree polynomial ) latency functions , market - sharing games , and many others , these dynamics are resilient to fluctuations even for constant \u01eb > 0 .", "on the other hand , we give lower bounds showing that job - scheduling and consensus games can still behave poorly .", "let us consider an exact potential game .", "let s be a profile of the players and let s i denote the configuration produced by a bestresponse move by player i according to costi .", "for each player i define \u2206 i ( s ) = costi ( s ) \u2212 costi ( s i ) and \u2206 ( s ) = p i \u2206 i ( s ) .", "an exact potential game with a potential function \u03c6 is \u03b2 \u2212 nice iff for any state s we have cost ( s ) \u2264 \u03b2opt + 2 \u2206 ( s ) .", "as shown in [ 3 ] number of important games are \u03b2 - nice , for \u03b2 equal to the price of anarchy of the game.here we show that \u03b2 - nice games additionally have the property that the expected price of uncertainty in the random order model is only o ( \u03b2 \u00b7 gap ) even for constant \u01eb > 0 .", "we start by showing that if the true ( unperturbed ) cost of the current configuration s is greater than 2\u03b2 \u00b7 opt , then no matter how the adversary adjusts the costs , the expected drop in potential is at least cost ( s ) ( 1/4 \u2212 4\u01eb ) / n. for \u01eb < 1/16 , this is \u03c9 ( cost ( s ) / n ) .", "that is , the adversary may make the cost exceed 2\u03b2cost ( s0 ) but only temporarily .", "for \u01eb < 1/32 , if cost ( st ) \u2265 2\u03b2opt then e [ \u03c6 ( st +1 ) \u2212 \u03c6 ( st ) ] \u2264 \u2212 cost ( st ) / ( 8n ) .", "as above , let s i denote the configuration produced by a best - response move by player i according to costi , and let\u02dcslet\u02dc let\u02dcs i denote the configuration produced by a best - response move by player i according to the perturbed cost function cost t i .", "so , costi ( s i ) \u2264 costi ( \u02dc s i ) and cost t i ( \u02dc s i ) \u2264 cost t i ( s i ) .", "recall that \u2206 i ( s ) = costi ( s ) \u2212 costi ( s i ) and \u2206 ( s ) = p i \u2206 i ( s ) .", "we will also need the following two quantities : 5 this implies that with high probability the cost will drop to below 2\u03b2opt within a polynomial number of steps .1 .", "\u02dc \u2206 i ( s ) = cost t i ( s ) \u2212 cost t i ( \u02dc s i ) is the improvement in perturbed cost of player i due to a best - response by player i in the perturbed game , with\u02dc \u2206 with\u02dc with\u02dc \u2206 ( s ) = p i \u02dc \u2206 i ( s ) , and 2 .", "\u02c6 \u2206 i ( s ) = costi ( s ) \u2212 costi ( \u02dc s i ) is the improvement in unperturbed cost of player i due to a best - response by player i in the perturbed game , with\u02c6 \u2206 with\u02c6 with\u02c6 \u2206 ( s ) = p i \u02c6 \u2206 i ( s ) .", "now , suppose cost ( s ) > 2\u03b2opt .", "then by definition of \u03b2 - nice we have \u2206 ( s ) > cost ( s ) / 4 .", "now we want to use this to show that\u02c6 \u2206 that\u02c6 that\u02c6 \u2206 ( s ) must be large as well .", "specifically , for each i , since the improvement in perturbed cost of the best - response to the perturbed game is at least the improvement in perturbed costs of the best response to the unperturbed game , we have : \u02dc \u2206 i ( s ) \u2265 cost t i ( s ) \u2212 cost t i ( s i ) \u2265 ( 1 \u2212 \u01eb ) costi ( s ) \u2212 ( 1 + \u01eb ) costi ( s i ) \u2265 \u2206 i ( s ) \u2212 2\u01ebcosti ( s ) .", "( 5.2 ) now , summing over all i we have : \u02dc \u2206 ( s ) \u2265 \u2206 ( s ) \u2212 2\u01ebcost ( s ) \u2265 cost ( s ) ( 1/4 \u2212 2\u01eb ) .", "this means that when a random player moves to his \" best perturbed response \" , we haveei [ \u02dc \u2206 i ( s ) ] \u2265 cost ( s ) [ 1/4 \u2212 2\u01eb ] / n.now , by a similar argument to that equation ( 5.2 ) we have : \u02c6 \u2206 i ( s ) = costi ( s ) \u2212 costi ( \u02dc s i ) \u2265 cost t i ( s ) \u2212 \u01ebcosti ( s ) \u2212 cost t i ( \u02dc s i ) \u2212 \u01ebcosti ( \u02dc s i ) = \u02dc \u2206 i ( s ) \u2212 2\u01ebcosti ( s ) + \u01eb \u02c6 \u2206 i ( s ) .", "so , \u02c6 \u2206 i ( s ) \u2265 ( \u02dc \u2206 i ( s ) \u2212 2\u01ebcosti ( s ) ) / ( 1 \u2212 \u01eb ) .", "putting this together with the above and using the fact that ei [ costi ( s ) ] = cost ( s ) / n gives usei [ \u02c6 \u2206 i ( s ) ] \u2265 cost ( s ) [ 1/4 \u2212 4\u01eb ] / nwhich is the expected drop in the potential \u03c6 for the unperturbed game caused by a random best - response move in the perturbed game .", "if \u01eb < 1/32 , we then get the desired result.so , lemma 5.1 shows if the true ( unperturbed ) cost of current configuration s is greater than 2\u03b2 \u00b7 opt , then no matter how the adversary adjusts the costs , the expected drop in potential is at least cost ( s ) ( 1/4 \u2212 4\u01eb ) / n .", "a chernoff bound argument can then be used to say that with high probability the sum of drops in potential will be close to their expectation .", "note that we do not show that once cost is low it will necessarily stay there forever - just that if the adversary is ever able to make the cost go above 2\u03b2opt then with high probability it will have to drop back below it in a small number of steps.in the following we show a bound on the expectation that holds for all time steps .", "to do so , we use the following additional lemma : lemma 5.2 .", "for any value of cost ( st ) , e [ \u03c6 ( st +1 ) \u2212 \u03c6 ( st ) ] \u2264 2\u01ebcost ( s ) / ( n ( 1 \u2212 \u01eb ) ) .", "this just follows from the statement that\u02c6 \u2206 ithat\u02c6 that\u02c6 \u2206 i ( s ) \u2265 ( \u02dc \u2206 i ( s ) \u2212 2\u01ebcosti ( s ) ) / ( 1 \u2212 \u01eb ) , and using the fact that\u02dc \u2206 ithat\u02dc that\u02dc \u2206 i ( s ) is always non-negative .", "we can now use these lemmas to prove that for \u03b2 - nice games the expected price of uncertainty in the random order model is only o ( \u03b2 \u00b7 gap ) even for constant \u01eb > 0 .", "recall that we define gap = c2 / c1 where c1 \u2264 1 \u2264 c2 are values such that for any state s we have \u03c6 ( s ) \u2208 [ c1cost ( s ) , c2cost ( s ) ] .", "for any t > 0 , we have ) ] .", "this will be sufficient because lemma 5.2 implies that the expectation can never increase by too much .", "in particular , even if e [ cost ( st ) ] \u2264 4\u03b2opt , by lemma 5.2 we still havee [ \u03c6 ( st ) ] \u2264 max [ 5c2\u03b2opt , c2cost ( s0 ) ] \u2264 5c2\u03b2cost ( s0 ) .", "therefore , e [ cost ( st ) ] \u2264 5\u03b2cost ( s0 ) \u00b7 gap .", "we will show that if e [ cost ( st ) ] \u2265 4\u03b2opt then e [ \u03c6 ( st +1 ) ] \u2264 e [ \u03c6 ( ste [ \u03c6 ( st +1 ) ] \u2212 e [ \u03c6 ( st ) ] \u2264 4\u01eb\u03b2opt / ( n ( 1 \u2212 \u01eb ) ) < \u03b2opt \u2264 c2\u03b2opt.specifically , suppose e [ cost ( st ) ] \u2265 4\u03b2opt .", "let pt be the probability that cost ( st ) \u2265 2\u03b2opt .", "therefore , we have : e [ cost ( st ) ] = pte [ cost ( st ) | cost ( st ) \u2265 2\u03b2opt ] + ( 1 \u2212 pt ) e [ cost ( st ) | cost ( st ) \u2264 2\u03b2opt ] \u2264 pte [ cost ( st ) | cost ( st ) \u2265 2\u03b2opt ] + 2\u03b2opt , so we have e [ cost ( st ) | cost ( st ) \u2265 2\u03b2opt ] \u2265 2\u03b2opt / pt.now , using lemmas 5.1 and 5.2 , we can write : e [ \u03c6 ( st +1 ) \u2212 \u03c6 ( st ) ] \u2264 \" \u2212 pt 8n \" e [ cost ( st ) | cost ( st ) \u2265 2\u03b2opt ] + 2\u01eb ( 1 \u2212 pt ) n ( 1 \u2212 \u01eb ) e [ cost ( st ) | cost ( st ) < 2\u03b2opt ] \u2264 2\u03b2opt / ( \u2212 8n ) + 2\u03b2opt 2\u01eb n ( 1 \u2212 \u01eb ) \u2264 0 .", "thus , as desired , if e [ cost ( st ) ] \u2265 4\u03b2opt then e [ \u03c6 ( st +1 ) ] \u2264 e [ \u03c6 ( st ) ] , proving the claim.as shown in [ 3 ] , a number of common games are \u03b2 - nice for constant \u03b2 , including congestion games with linear latency functions , both unweighted ( \u03b2 = 2.5 ) and weighted ( \u03b2 \u2248 2.618 ) , congestion games with polynomial latency functions of constant degree d ( \u03b2 = d d ( 1 \u2212 o ( 1 ) ) ) , and market - sharing games ( \u03b2 = 2 ) .", "note : interestingly , the guarantee in lemma 5.1 breaks down in the adversarial - order setting : for example , for market - sharing games , which are \u03b2 - nice for \u03b2 = 2 , we have price of uncertainty \u03c9 ( log n ) even for \u01eb = 0 , as shown in theorem 3.1 .", "for job scheduling we can show ( see full version [ 5 ] for proofs ) : theorem 5.2 .", "for m = 2 machines , for any \u01eb > 2 / n , we have that p ou r br ( \u01eb , jsu m ) \u2265 \u01ebn / 8 .", "we can similarly adapt our lower bounds for consensus games to the random order model .", "for a weighted consensus game we can show an exponential lower bound .", "for any weighted consensus game ( wcg ) , for any \u01eb , we have p ou r br ( \u01eb , w cg ) \u2265 ( 1 + \u01eb ) n / 2 \u2212 1 .", "we now consider the case that , rather than perturbing weights , the adversary instead controls a certain number of byzantine players who can move arbitrarily between best - response moves by the ordinary ( non-byzantine ) players .", "our main results in this model are an upper bound for \u03b2 - nice games , showing that random - order best - response dynamics is resilient to byzantine players , and a lower bound for set - covering games , showing that in these games an adversary can increase the cost of the normal players by a factor of \u03c9 ( n ) even with just one byzantine player .", "we also give results for job - scheduling and consensus games as well .", "earlier , we showed that \u03b2 - nice games are resilient to cost perturbations in the random order model .", "here we show they are also resilient to the addition of byzantine players .", "for this , we make two additional reasonable assumptions about the game and the number of byzantine players : assumption 1 ( monotonicity ) : we assume that adding new players into the game can only increase the cost incurred by any given player ( e.g. , as in linear congestion games ) .", "assumption 2 ( low direct impact of byzantine players ) : configuration s , the social cost of s with byzantine players removed is at least 7/8 of the social cost of s with byzantine players included .", "in other words , the byzantine players can not change the cost of any given state by more than a small constant factor.we will consider random best - response dynamics .", "recall that in this model , byzantine players may move arbitrarily between two moves of the normal ( non-byzantine ) players .", "the key to the analysis is that we will track the cost and potential of the configuration minus the byzantine players , viewing the byzantine players as merely perturbations to the perceived costs of the normal players , causing them to act in an unusual way .", "we then will follow the main steps of the analysis of \u03b2 - nice games in section 5.1 .", "however , note that now the byzantine players can affect the perceived cost of any given normal player substantially , even though by assumption 2 they can not change the aggregate cost by too much.specifically , let players 1 , . . . , n be the normal players , and we will index the byzantine players as n + 1 , . . . , n + k. given a configuration s at time t , define cost ( s ) to be the social cost of s with byzantine players removed , and define cost t ( s ) to be the social cost of s with byzantine players included .", "similarly , define costi ( s ) and cost t i ( s ) to be the cost incurred by player i with byzantine players removed or included , respectively .", "so , cost ( s ) = p n i = 1 costi ( s ) and cost t ( s ) = p n + k i = 1 cost t i ( s ) .", "also , by assumptions 1 and 2 we have cost t ( s ) \u2265 cost ( s ) \u2265 7 8 cost t ( s ) .", "define the potential \u03c6 ( s ) to be the standard potential function for configuration s but with byzantine players removed , and let st denote the state at time t ( counting each move of a non-byzantine player as one time step ) .", "we now prove the following lemma.lemma 6.1 .", "if cost t ( st ) \u2265 2\u03b2opt then we have e [ \u03c6 ( st +1 ) \u2212 \u03c6 ( st ) ] \u2264 \u2212 cost t ( st ) / ( 8n ) .", "given configuration s , let s i denote the configuration resulting from player i performing best - response to the perceived costs ( i.e. , with byzantine players included ) .", "let\u02c6 \u2206 let\u02c6 let\u02c6 \u2206 = p n i = 1 [ costi ( s ) \u2212 costi ( s i ) ] .", "in other words , \u02c6 \u2206 / n is the expected drop in the potential \u03c6 caused by a random non-byzantine player performing best - response to the costs with byzantine players included.let\u02dc \u2206 let\u02c6 let\u02c6 \u2206 = p n i = 1 [ costi ( s ) \u2212 costi ( s i ) ] .", "this is a somewhat strange quantity since the byzantine players are not actually performing best response .", "nonetheless , by the definition of \u03b2 - nice , if cost t ( s ) \u2265 2\u03b2opt then we have\u02dc \u2206 have\u02dc have\u02dc \u2206 ( s ) \u2265 cost t ( s ) / 4 .", "this impliesp n + k i = 1 cost t i ( s i ) \u2264 3 4cost t ( s ) , and therefore surelyp n i = 1 cost t i ( s i ) \u2264 3 4 cost t ( s ) as well .", "putting this together , we now have : \u02c6 \u2206 ( s ) = cost ( s ) \u2212 n x i = 1 costi ( s i ) \u2265 cost ( s ) \u2212 n x i = 1 cost t i ( s i ) \u2265 cost ( s ) \u2212 3 4 cost t ( s ) \u2265 7 8 cost t ( s ) \u2212 3 4 cost t ( s ) \u2265 cost t ( s ) / 8 , where the first inequality follows by monotonicity and the second to last follows by assumption 2 .", "sinc\u00ea \u2206 / n is the expected drop in \u03c6 , this concludes the proof.to analyze the expected costs , we now need an analog of lemma 5.2 , showing that even if cost t ( st ) is low , the expected value of the potential will not increase too quickly.lemma 6.2 .", "for any value of cost t ( st ) , we have e [ \u03c6 ( st +1 ) \u2212 \u03c6 ( st ) ] \u2264 cost t ( st ) / ( 8n ) .", "let s = st. using the notation from the proof of lemma 6.1 we hav\u00eahav\u00ea \u2206 ( s ) = cost ( s ) \u2212 n x i = 1 costi ( s i ) \u2265 7 8 cost t ( s ) \u2212 n x i = 1 costi ( s i ) \u2265 7 8 cost t ( s ) \u2212 n + k x i = 1 cost t i ( s i ) = \u02dc \u2206 ( s ) \u2212 1 8 cost t ( s ) .", "this is at least \u2212 1 8 cost t ( s ) as desired.putting these together we can now show the following analog of theorem 5.1 , for \u03b2 - nice games satisfying assumptions 1 and 2 .", "for any t > 0 , e [ \u03c6 ( st ) ] \u2264 max [ 6\u03b2opt , cost ( s0 ) ] \u2264 6\u03b2cost ( s0 ) .", "finally , note that if there is a bounded value gap = maxs [ cost t ( s ) / \u03c6 ( s ) ] then the above result implies that for all t > 0 , e [ cost t ( st ) ] \u2264 max [ 6\u03b2opt , cost t ( s0 ) ] \u00b7 gap .", "we now consider set - cover games and give a construction showing that just one byzantine player can cause best - response dynamics to move from an equilibrium of cost o ( opt ) to an equilibrium of cost \u03c9 ( n \u00b7 opt ) .", "note that this is the largest gap possible since the price of anarchy for this game is n. theorem 6.2 .", "for set - cover games , a single byzantine player can cause best - response dynamics to move from a nash equilibrium of cost o ( n ) to a nash equilibrium of cost \u03c9 ( n 2 ) .", "consider n players of type i , where each player i has two sets to choose from : a common set s * of cost n , and a set si of cost n \u2212 1 .", "there are additionally n \u2212 2 players of type ii , such that player k of type ii may either choose any of the sets si or else its own set f k of cost n / k , for k \u2208 { 2 , . . . , n \u2212 1 } .", "in addition , we have one byzantine player who may choose any of the sets , for a total of 2n \u2212 1 players total .", "the initial state is all players of type i in set s * and all players of type ii in set s1 , for a total cost o ( n ) .", "the byzantine player and type - ii players will now slowly lure all type - i players into the sets si , increasing the cost of the system to n ( n \u2212 1 ) .", "first the byzantine player moves to set s1 causing player 1 of type i to move from s * ( whose cost to the player is 1 ) to s1 ( whose cost to the player is ( n \u2212 1 ) / n ) .", "the byzantine player then sequentially moves to each set fn \u2212 1 , fn \u2212 2 , . . . , f2 , causing the players of type ii to move to their sets f k in that order .", "specifically , at the time player k of type ii moves , the set s1 has a cost to it of ( n \u2212 1 ) / k , whereas set f k has cost ( with the byzantine player ) of n / ( 2k ) .", "now the byzantine player moves to set s2 , causing the players k of type ii for k = 2 , 3 , . . . , n \u2212 2 to move one after the other to s2 as well .", "specifically , at the time player k moves , set s2 has cost ( n \u2212 1 ) / k which is lower than the cost n / k of f k .", "at the end of this step we have the same configuration of type - ii players as in the initial state , except with s2 rather than s1 .", "the entire process then repeats for player 2 of type i , and so on , until each player i of type i is on its own set si .", "finally , since s * is now empty , none of the type - i players wish to move so we are at an equilibrium.as pointed out in section 3 , theorem 6.2 immediately implies that in the perturbation model we have p oubr ( \u221a 2 \u2212 1 , scg ) = \u03c9 ( n ) .", "note that in theorem 4.2 we extend this construction to the more delicate case of small values of \u01eb as low as p 2 / n .", "we begin with a simple lower bound for job scheduling in the presence of a single byzantine job .", "for two machines and one byzantine job , the cost can increase from 2 to \u03c9 ( n ) , even in the random - order model .", "consider two machines and 2n + 1 good jobs , n of type i with cost ( 1 / n , 1 ) and n of type ii with cost ( 1 , 1 / n ) , and one byzantine job with cost ( 1 , 1 ) .", "initially , jobs of type i are on machine 1 and jobs of type 2 are on machine 2 , this is the optimal assignment for the good jobs .", "the byzantine job goes to machine 1 , then a job of type i moves to machine 2 , since this is its best response .", "now , the byzantine job moves to machine 2 ( note that the byzantine job increased its load ) .", "then , a job of type ii moves from 2 to 1 .", "this way we increase the cost from 2 to n + 1 .", "as in theorem 5.2 , this construction extends immediately to the random order model , with just a constant factor loss in the ratio , by analyzing the markov chain produced as a result of the above adversary strategy .", "specifically , so long as the system has more jobs with cost 1 / n on their current machine than jobs with cost 1 on their current machine , the system is more likely to transition in the forward direction ( increasing the number of high - cost jobs ) than in the reverse direction .", "thus , in o ( n ) steps , with high probability the system reaches a state of cost \u03c9 ( n ) .", "on the other hand , for job scheduling on identical machines , unless the byzantine players by themselves have substantial weight , they can not cause the system to reach a high - cost state .", "let w b be the weight of the byzantine players and wg the weight of the good players .", "each time a good player i moves it has a best response whose cost is at most ( wg + w b ) / m + wi , where wi is the good job cost .", "note that op t \u2265 max { w / m , wi } and thus the result follows.we end with a simple observation that for unweighted consensus , a single byzantine player can cause cost to increase by a factor \u03c9 ( n ) .", "for the unweighted consensus game , a single byzantine player can increase cost from 1 to \u03c9 ( n ) .", "the network is simply a line network v1 , . . . , vn .", "the byzantine player is the player v1 at one end of the line .", "assume we start with all players being r and then the byzantine player switches to b. player v2 is indifferent between r and b so it switches to b , and then player v1 switches back to r. then , player v3 switches to b , player v2 switches to r and player v1 switches to b .", "in phase k , we start with v1 , . . . , v k alternating between r and b , such that v k plays b .", "during phase k , first v k +1 switches to b , and then players v k , . . . v1 switch their action .", "at the end we have all players alternating between r and b , at cost \u03c9 ( n ) .", "in terms of specific open questions , it would be interesting to close some of the gaps that remain in the adversarial order model .", "for example , can one extend the upper bound of theorem 4.4 to non-symmetric cost - sharing games or extend the lower bound of theorem 4.2 to symmetric cost sharing games ?", "in the byzantine model , can one get better upper - bounds for set - cover and fair costsharing games if we assume random order dynamics ?", "more generally , for all the classes of games studied , can one get better upper bounds in the random order model in the case where the perturbations are not completely adversarial , but instead chosen from some distribution of bounded magnitude ?", "appendix a. set covering games theorem 4.2 in the set covering game we have p oubr ( \u01eb , scg ) = \u03c9 ( \u01eb \u221a n log ( 1 / \u01eb ) ) for \u01eb \u2265 2 / \u221a n.proof .", "the construction 6 builds on that in the proof of theorem 6.2 .", "let n = n / 4 .", "consider n players of type i , indexed by pairs ( i , j ) for 1 \u2264 i , j \u2264 \u221a n. type - i player ( i , j ) has three sets to choose from : a set s * i of cost n , a set sactive , j of cost n , and a private set si , j of cost n .", "initially , all type - i players begin on the sets s * i for a total cost of n \u221a n .", "we also have n + \u221a n \u2212 2 players of type ii as follows .", "for k = 3 , . . . , n , we have a type - ii player who may choose any of the sets sactive , j ( for 1 \u2264 j \u2264 \u221a n ) or else its own set f k .", "for k = 2 we have \u221a n type - ii players indexed by pairs ( 2 , j ) for 1 \u2264 j \u2264 \u221a n who may choose only the set sactive , j or their own set f2 , j .", "the sets f k and f k , j have costs as follows : for k \u2208 [ 2 , 1 / \u01eb ] , the set has cost 1 \u01eb n / k ; for k > 1 / \u01eb , the set has cost n / k. however , for k \u2208 [ 2 , 1 / \u01eb ] , we have 1 / \u01eb \u2212 1 \" helper \" players in set f k ( or set f k , j ) whose alternative options will be described in more detail below .", "thus , with helper - players included , cost of each set f k ( or f k , j ) to type - ii player k ( or ( k , j ) ) is n / k .", "the type - ii players begin in their sets f k ( or f k , j ) .", "as in the proof of theorem 6.2 , the type - ii players will now slowly lure all type - i players into the private sets si , j , increasing their overall cost from n \u221a n to n 2 .", "specifically , for i = 1 , 2 , . . . , \u221a n , the following occurs .", "first , for each j = 1 , 2 , . . . , \u221a n in sequence , type - i player ( i , j ) is lured onto sactive , j as follows .", "first , type - ii player ( 2 , j ) is moved to set sactive , j by having its helper - players temporarily raise the effective cost of f2 , j from n / 2 to n ( using a process described in the paragraph below ) so that the adversary can cause it to move to sactive , j with an arbitrarily small additional perturbation .", "next , type - ii players k = 3 , 4 , . . . are made to follow along to sactive , j .", "in the case of k = 3 , . . . , 1 / \u01eb , this is done by having the helper - players again temporarily raise the effective cost of f k from n / k to 2n / k , making the player prefer sactive , j to f k .", "in the case of k > 1 / \u01eb , this can be done without helper players , since the ratio of the cost of sactive , j to the cost of f k is k / ( k \u2212 1 ) \u2264 1 + \u01eb , so perturbations are sufficient .", "( note that type - ii player ( 2 , j ) would have preferred s active , j \u2032 for j \u2032 < j to sactive , j because that set already has a type - i player on it , but that is not one of its allowed sets ; type - ii player k = 3 is indifferent ( so can be made to move as desired with arbitrarily small perturbations ) and type - ii players k > 3 will strictly prefer sactive , j to s active , j \u2032 for j \u2032 < j. ) now , player ( i , j ) of type i moves from s * i ( whose cost to the player is at least \u221a n to sactive j ( whose cost to the player is 1 ) .", "finally , the players of type ii , in order from k = n down to 2 , sequentially move back to their sets f k ( or f k , j ) .", "in particular , at the time player k of type ii moves , the set sactive j has a cost to it of n / k , which is equal to the cost of set f k ( so with arbitrarily small perturbations , the adversary can easily cause these players to move ) .", "after the above process has been completed for all j = 1 , 2 , . . . , \u221a n ( so that s * i is now empty for the current value of i ) , the type - i players ( i , j ) are now indifferent between all sets to which they are eligible .", "so , they can each be made to move to their private sets si , j via arbitrarily small perturbations .", "we then increment i and repeat the entire process above.to finish the argument , we need to describe how the helperplayers raise the effective cost of f k ( or f k , j ) .", "for each k , the jth helper - player has a private set of cost n k ( 1 \u2212 j\u01eb ) .", "by perturbing costs , adversary can cause these players for j = 1 , 2 , . . . , 1 / ( 2\u01eb ) to move in order to their private sets .", "specifically , at the time the jth player is to move , the ratio of the cost of its private set to the cost of f k is n k ( 1 \u2212 j\u01eb ) once player k of type ii has moved off of set f k , the helper players return back to f k in the order j = 1 / ( 2\u01eb ) , . . . , 2 , 1 ( they are now indifferent between the two sets , so the adversary can cause them to move via arbitrarily small perturbations ) bringing f k back to its initial state .", "this completes the construction.the total number of players is upper bounded by 2n + 1\u01eb ( \u221a n + 1 \u01eb ) .", "for \u01eb \u2265 1 / \u221a n and n = n / 4 , this is at most n .", "the total cost of the initial state is o ( n 3/2 + n 3/2 / \u01eb + ( n / \u01eb ) log ( 1 / \u01eb ) ) and the final state has cost \u03c9 ( n 2 ) , giving the ratio desired ."], "tgt_txt": "the price of the price of uncertaintyuncertainty maria - florina balcan georgia tech avrim blum carnegie mellon yishay mansour tel - aviv / google acm - ec 2009 games are an abstractiongames are an abstraction costs / payoffs are a function of players actions .<q>no external influences if all repeatedly play same way , get exact same payoff assume all players incentives are modeled high - level question : what happens to natural dynamics if these do nt quite hold ?<q>wed like to think that if we get people into a good equilibrium , and players are selfish , reasonably myopic , etc , then behavior will stay there .<q>high - level question : what happens to natural dynamics if these do nt quite hold ?<q>games are an abstractiongames are an abstraction wed like to think that if we get people into a good equilibrium , and players are selfish , reasonably myopic , etc , then behavior will stay there .<q>but what if there are small fluctuations in underlying cost / payoff structure ?<q>games are an abstractiongames are an abstraction wed like to think that if we get people into a good equilibrium , and players are selfish , reasonably myopic , etc , then behavior will stay there .<q>but what if there are small fluctuations in underlying cost / payoff structure ?<q>or a few players acting unpredictably ?<q>can small fluctuations or a few unpredictable players cause natural dynamics to spin out of control and get system into a high - cost state ?<q>games are an abstractiongames are an abstraction high - level questionhigh - level question a few ways this could happen : small changes cause good equilibria to disappear , only bad ones left .<q>( economy ? )<q>bad behavior by a few players causes pain for all ( nukes ) neither of above , but instead through more subtle interaction with dynamics focus here on this last issue .<q>can small fluctuations or a few unpredictable players cause natural dynamics to spin out of control and get system into a high - cost state ?<q>focus of this workfocus of this work games with the following properties : potential games , best / better - response dynamics .<q>low price of stability .<q>( good equilibria exist ) game has good equilibria even after perturbation .<q>small gap between potential and social cost .<q>single perturbation cant make dynamics do bad things .<q>no individual player can influence cost of others by too much .<q>opt pos opt cost modelmodel players follow best ( or better ) response dynamics .<q>costs of resources can fluctuate between moves : cit 2 [ ci / ( 1 + ) , ci ( 1 + ) ] ( alternatively , one or more byzantine players who move between time steps ) play begins in a low - cost state .<q>how bad can things get ?<q>price - of - uncertainty ( ) of game = maximum ratio of eventual social cost to initial cost .<q>modelmodel players follow best ( or better ) response dynamics .<q>costs of resources can fluctuate between moves : cit 2 [ ci / ( 1 + ) , ci ( 1 + ) ] price - of - uncertainty ( ) of game = maximum ratio of eventual social cost to initial cost .<q>modelmodel players follow best ( or better ) response dynamics .<q>costs of resources can fluctuate between moves : cit 2 [ ci / ( 1 + ) , ci ( 1 + ) ] price - of - uncertainty ( ) of game = maximum ratio of eventual social cost to initial cost .<q>one way to look at this : define graph : one node for each state .<q>edge u !<q>v if perturbation can cause br to move from u to v .<q>what do the reachable sets look like ?<q>set - cover gamesset - cover games n players ( points ) m sets , with costs c1 , , cm .<q>each player chooses some set that covers it .<q>players split cost with all others choosing same set .<q>c1 c2 c3 cm set - cover gamesset - cover games price of anarchy = n price of stability = o ( log ( n ) ) .<q>potential 2 [ cost , costlog ( n ) ] n - 1 main resultsmain results set - cover games : set - cover games : if = o ( 1 / nm ) then pou = o ( log n ) .<q>however , for any constant > 0 , pou = ( n ) .<q>also , a single byzantine player can take state from a pne of cost o ( opt ) to one of cost ( n opt ) .<q>upper bounds hold even for better - response lower bounds hold even for best - response main resultsmain results general fair - cost - sharing games : general fair - cost - sharing games : matroid congestion games : matroid congestion games : here , better - response is easy to lure astray .<q>can make state exponentially worse by using even an exponentially - small .<q>so , focus on best - response .<q>s t main resultsmain results general fair - cost - sharing games : general fair - cost - sharing games : if many players for each ( si , ti ) pair ( ni = ( m ) ) , then pou = o ( 1 ) even for constant > 0 .<q>open for general number of players .<q>matroid congestion games : matroid congestion games : ( strategy sets are bases of matroid .<q>e.g. , set - cover where must choose k sets ) if = o ( 1 / nm ) then pou = o ( log n ) for fair costsharing .<q>in general , if = o ( 1 / nm ) then pou = o ( gap ) .<q>better - response not enough .<q>also positive results for also positive results for - nice games , bounds for - nice games , bounds for consensus , job schedulingconsensus , job scheduling set - cover games set - cover games ( lower bound ) ( lower bound ) two kinds of players : n of class i : n - 1 of class ii : plus one byzantine player implies bound for case that costs can fluctuate by factor of 2 .<q>more complicated ex for !<q>1 / n1 / 2 .<q>n n - n - n - n - n - n / 2 n / 3 n / 4 n / n set - cover games set - cover games ( upper bound ) ( upper bound ) for upper bound , think of players in sets as a stack of chips .<q>view ith position in stack j as having cost cj / i. load chips with value equal to initial cost .<q>when player moves from j to k , move top chip .<q>cost of position goes up by at most ( 1 + ) 2 .<q>cj ck at most mn different positions .<q>so , following the path of any chip and removing loops , cost of final set is at most ( 1 + ) 2nm times its value .<q>so , if = o ( 1 / nm ) then pou = o ( log n ) .<q>matroid gamesmatroid games in matroid games , can think of each player as controlling a set of chips .<q>nice property of best response in matroids : can always order the move so that each individual chip is doing better - response .<q>apply previous argument .<q>fails for better - response .<q>here , can get player to do kind of binary counting , bad even for exponentiallysmall .<q>fair cost sharing in general graphsfair cost sharing in general graphs if many players of each type , can also show best response dynamics cant do badly .<q>outline of argument : hard to analyze cost of state directly , instead track upper bound c * ( st ) = cost ( s0 [ [ st ) .<q>c * changes at most m times .<q>many players of each type ) average cost of each is low compared to c * ) each change to c * is small .<q>pou versus price of anarchypou versus price of anarchy main focus : games with both good and bad equilibria .<q>can small fluctuations or single byzantine player cause behavior to move from good to bad ?<q>can also have cases where state can get worse even than worst equilibrium .<q>market - sharing : 2 vs log ( n ) even for bestresponse .<q>pou versus price of anarchypou versus price of anarchy nice games [ aaems - ec08 ] : incentives grow stronger as cost gets above times optimal ( typically = poa ) .<q>here , at least can show state wont get above o ( ) times optimal , even with substantial perturbation or many byzantine players ( random order ) .<q>summary and open problemssummary and open problems looking at : when can small perturbations or a few bad players lead natural dynamics astray ?<q>when is it safe to turn your back ?<q>upper / lower bounds for a number of classes of games .<q>open problems : close gap for set - cover [ 1 / ( mn ) , 1 / n1 / 2 ] .<q>general case of fair cost - sharing games ?<q>cyclic order best resp", "sections": [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21], "token_sections}