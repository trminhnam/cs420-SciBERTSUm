{"src": [101, 2057, 2817, 1996, 2206, 3016, 25253, 4292, 1024, 1049, 5167, 2024, 2853, 2000, 1050, 14337, 7226, 13375, 1999, 1049, 2981, 2117, 1011, 3976, 10470, 2015, 1012, 102, 101, 2169, 7226, 4063, 2038, 1037, 2797, 26004, 3853, 2008, 16783, 3375, 18394, 2058, 2035, 16745, 2015, 1997, 5167, 1012, 102, 101, 7226, 13375, 2069, 2031, 9029, 2055, 1996, 26004, 4972, 1997, 1996, 2060, 7226, 13375, 1010, 1999, 1996, 2433, 1997, 9723, 20611, 1012, 102, 101, 1996, 7863, 2003, 2000, 2035, 24755, 2618, 1996, 5167, 2000, 1996, 7226, 13375, 1999, 1037, 2126, 2008, 3640, 1037, 2204, 20167, 2000, 1996, 15502, 2591, 7574, 3643, 1012, 102, 101, 2057, 2265, 2008, 2065, 7226, 13375, 2031, 4942, 5302, 8566, 8017, 26004, 4972, 1010, 2059, 2296, 3016, 25253, 10594, 14442, 1997, 1996, 4525, 2208, 3640, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 7574, 1012, 102, 101, 9308, 1010, 2057, 2265, 2008, 1999, 1996, 2440, 1011, 2592, 2208, 1037, 5760, 10594, 2467, 6526, 1998, 2064, 2022, 2179, 1999, 2051, 2008, 2003, 17505, 1999, 2119, 1049, 1998, 1050, 29625, 22863, 23207, 4818, 10470, 2015, 1012, 102, 101, 1999, 1037, 22863, 23207, 4818, 10470, 1049, 5167, 1049, 1027, 1063, 1015, 1010, 1012, 1012, 1012, 1010, 1049, 1065, 2024, 3253, 2005, 5096, 2000, 1050, 7226, 13375, 1050, 1027, 1063, 1015, 1010, 1012, 1012, 1012, 1010, 1050, 1065, 1012, 102, 101, 2169, 7226, 4063, 1045, 2038, 1037, 26004, 3853, 1006, 2030, 26004, 1010, 1999, 2460, 1007, 1058, 1045, 2008, 24022, 1037, 2512, 29624, 2638, 26792, 2613, 2193, 2000, 2296, 16745, 1997, 1996, 5167, 1012, 102, 101, 1058, 1045, 16783, 1045, 1005, 2015, 18394, 2058, 26825, 1997, 5167, 1012, 102, 101, 1996, 3643, 1058, 1045, 1006, 1055, 1007, 2064, 2022, 2245, 1997, 2004, 20648, 2075, 1045, 1005, 2015, 4555, 19732, 2000, 3477, 2005, 1055, 29625, 2048, 3115, 17568, 2024, 2081, 2006, 2169, 1058, 1045, 1024, 1058, 1045, 1006, 1593, 1007, 1027, 1014, 1006, 3671, 3989, 1007, 1010, 1998, 1058, 1045, 1006, 1055, 1007, 1608, 1058, 102, 101, 1996, 7863, 2003, 2000, 2424, 1037, 13571, 1997, 1996, 5167, 2426, 1996, 7226, 13375, 1055, 1015, 1010, 1012, 1012, 1012, 1010, 1055, 1050, 1006, 2073, 1055, 1045, 1604, 1055, 1046, 1027, 1593, 2005, 2035, 1045, 1027, 1046, 1007, 2107, 2008, 1996, 2591, 7574, 1173, 1045, 1058, 1045, 1006, 1055, 1045, 1007, 102, 101, 2169, 1997, 2122, 5919, 2894, 2064, 2022, 8971, 1999, 1037, 23045, 2126, 1024, 1996, 6334, 18315, 2290, 10595, 1031, 2539, 29623, 2509, 29623, 10790, 1033, 9587, 29068, 3686, 6074, 2000, 3606, 7699, 3189, 2037, 2797, 2592, 1010, 1998, 23569, 27605, 4371, 1996, 2591, 1011, 7574, 1012, 102, 101, 1996, 5430, 4017, 2003, 2008, 2023, 2089, 2202, 27258, 2051, 1031, 2321, 29623, 16048, 1033, 1006, 1999, 1996, 3019, 11709, 1997, 1996, 3291, 1049, 1998, 1050, 1007, 1012, 102, 101, 2006, 1996, 2060, 2192, 1010, 2065, 2057, 27770, 6143, 3314, 1010, 2009, 2003, 2825, 2000, 6855, 2204, 20167, 2015, 2000, 1996, 15502, 2591, 1011, 7574, 3569, 2011, 1037, 3946, 2013, 1996, 3956, 2671, 3192, 29625, 2378, 17505, 2051, 1010, 2005, 7775, 1010, 2664, 2200, 22570, 2569, 3572, 1997, 22863, 23207, 4818, 10470, 2015, 1006, 1041, 29625, 2290, 29625, 1010, 102, 101, 2009, 2003, 1996, 5257, 1997, 1996, 2048, 7860, 2008, 16481, 2000, 2022, 18636, 29625, 15907, 25253, 22863, 23207, 4818, 10470, 2015, 1012, 102, 101, 1999, 2023, 3259, 2057, 3921, 1996, 3291, 1997, 8304, 14337, 2791, 1998, 15078, 23608, 2013, 2019, 2214, 1011, 2047, 7339, 1024, 5292, 22381, 4890, 2072, 1031, 2340, 1033, 3107, 3016, 25253, 2399, 2004, 2019, 11552, 2126, 1997, 11643, 14337, 2791, 1999, 7704, 1011, 2592, 10906, 1012, 102, 101, 1999, 1037, 3016, 25253, 2208, 1010, 2867, 2079, 2025, 2113, 1996, 2797, 2592, 1997, 1996, 2060, 2867, 1010, 2021, 2069, 2031, 9029, 1010, 5228, 2011, 9723, 20611, 2058, 1996, 2367, 2825, 12393, 2015, 1997, 2023, 2797, 2592, 1012, 102, 101, 1999, 22863, 23207, 4818, 10470, 2015, 2023, 16315, 2000, 9723, 20611, 2058, 1996, 2825, 26004, 4972, 1997, 1996, 2060, 7226, 13375, 1012, 102, 101, 2057, 2024, 4699, 1999, 20446, 6026, 1996, 2591, 1011, 7574, 1999, 1037, 2126, 2008, 2003, 13115, 2007, 1996, 5426, 1997, 1996, 2367, 7226, 13375, 1012, 102, 101, 2057, 3198, 1996, 2206, 3160, 1024, 2064, 2057, 2640, 2019, 10470, 2005, 2029, 2151, 3016, 25253, 10594, 14442, 3640, 1037, 2204, 20167, 2000, 1996, 15502, 2591, 1011, 7574, 1029, 102, 101, 2023, 3160, 2003, 1010, 1997, 2607, 1010, 2019, 5331, 1997, 1996, 2092, 2124, 1000, 3976, 1997, 26395, 1000, 3160, 1031, 2260, 29623, 16576, 1033, 2000, 3016, 25253, 10906, 29625, 7076, 21649, 2011, 1041, 15907, 1010, 2057, 2817, 1996, 3722, 10470, 1999, 2029, 1996, 1049, 5167, 2024, 2853, 1999, 1049, 2981, 2117, 1011, 3976, 10470, 2015, 1012, 102, 101, 2023, 10470, 19653, 2015, 1037, 2208, 1999, 2029, 1037, 7226, 4063, 1005, 2015, 5656, 2003, 1996, 1049, 1011, 8789, 9207, 1997, 20723, 2002, 12040, 2015, 1999, 1996, 2367, 2309, 1011, 8875, 10470, 2015, 1010, 1998, 2010, 3477, 7245, 2003, 2010, 3643, 2005, 1996, 2275, 1997, 5167, 2002, 2003, 11095, 15718, 2010, 10504, 1012, 102, 101, 6854, 1010, 1999, 2023, 2236, 4292, 1010, 2070, 21242, 3471, 2089, 13368, 1024, 5136, 1996, 2206, 3722, 2742, 1024, 1049, 1027, 1015, 1010, 1050, 1027, 1016, 1010, 1998, 1996, 7226, 13375, 2031, 3143, 2592, 2055, 2169, 2060, 1012, 102, 101, 2292, 1058, 1015, 1006, 1015, 1007, 1027, 1015, 1998, 1058, 1016, 1006, 1015, 1007, 1027, 1014, 1012, 102, 101, 11949, 2008, 1996, 15502, 2591, 7574, 2003, 1015, 1006, 23911, 8875, 1015, 2000, 7226, 4063, 1015, 1007, 1012, 102, 101, 2036, 11949, 2008, 2065, 7226, 4063, 1015, 20723, 1014, 1998, 7226, 4063, 1016, 20723, 1015, 2059, 2023, 2003, 1037, 5760, 10594, 14442, 2007, 1037, 2591, 1011, 7574, 3643, 1997, 1014, 1012, 102, 101, 3568, 1010, 1996, 3976, 1997, 26395, 1997, 2023, 2440, 1011, 2592, 2208, 2003, 15579, 29625, 2378, 1996, 2682, 11967, 1010, 1996, 2117, 7226, 4063, 7226, 2005, 1006, 1998, 2776, 2288, 1007, 2019, 4874, 2002, 2001, 2025, 4699, 1999, 18840, 1012, 102, 101, 2174, 1010, 2107, 1037, 3663, 2003, 9832, 2000, 5258, 1999, 2613, 1011, 2166, 8146, 1010, 2926, 2065, 7226, 13375, 2024, 2069, 6822, 6727, 1998, 2024, 3568, 2062, 13050, 2000, 4468, 10831, 1012, 102, 101, 2000, 5047, 2023, 1010, 2057, 11092, 1996, 2092, 1011, 2124, 11213, 1999, 3247, 3399, 1010, 2008, 1996, 2867, 1006, 7226, 13375, 1007, 2024, 16258, 3367, 14258, 1011, 11581, 1012, 102, 101, 21858, 1010, 4654, 29624, 19894, 3265, 1011, 11581, 3012, 2965, 2008, 7226, 13375, 2377, 2009, 3647, 1010, 1999, 1996, 3168, 2008, 1037, 7226, 4063, 2097, 2196, 2191, 6567, 2008, 2453, 1006, 1999, 2070, 11967, 1007, 2765, 1999, 2893, 1037, 4997, 3477, 7245, 29625, 8162, 3463, 1012, 102, 101, 2256, 2364, 2765, 2003, 1996, 2206, 1024, 2057, 8327, 2019, 10470, 1006, 2057, 6523, 2000, 2004, 1037, 3016, 25253, 10470, 1007, 1999, 2029, 7687, 2035, 5167, 2024, 2853, 1999, 1037, 2117, 1011, 3976, 10470, 1012, 102, 101, 2057, 6011, 2008, 2151, 3816, 10594, 14442, 2005, 2023, 10470, 3640, 1037, 2204, 20167, 2000, 1996, 15502, 2591, 7574, 29625, 10760, 5686, 2213, 1024, 2065, 7226, 13375, 2024, 4654, 29624, 19894, 14258, 1011, 11581, 1010, 1998, 2031, 4942, 5302, 8566, 8017, 26004, 4972, 1010, 2059, 2296, 1006, 3816, 1007, 3016, 25253, 10594, 14442, 1997, 1037, 3016, 25253, 10470, 3640, 1037, 1016, 1011, 102, 101, 2023, 6210, 1997, 4942, 5302, 8566, 8017, 3012, 2003, 2124, 1006, 2156, 1010, 1041, 29625, 2290, 29625, 1010, 1031, 2410, 1033, 1007, 2000, 2022, 5662, 2000, 1996, 2206, 6210, 1024, 1037, 26004, 3853, 2003, 4942, 5302, 8566, 8017, 2065, 2005, 2296, 2048, 26825, 1055, 1611, 1056, 2008, 2079, 2025, 5383, 2019, 8875, 1046, 2009, 4324, 2008, 2615, 1045, 1006, 1055, 1605, 102, 101, 2023, 2197, 16440, 2038, 1037, 3019, 7613, 2004, 2009, 12748, 2008, 1996, 7226, 13375, 2031, 16922, 14785, 16548, 1006, 1996, 14785, 3643, 1997, 1996, 8875, 17913, 2004, 1996, 2193, 1997, 5167, 1037, 7226, 4063, 2038, 7457, 1007, 1012, 102, 101, 1999, 2755, 1010, 2256, 9872, 4324, 2130, 2065, 7226, 13375, 2031, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 4972, 1031, 1020, 1033, 1006, 4225, 1010, 1998, 12061, 1060, 2891, 1010, 1999, 1031, 2403, 1033, 1007, 1010, 1037, 2465, 1997, 26004, 4972, 2008, 9975, 3397, 2035, 4942, 5302, 8566, 8017, 3924, 1031, 2403, 29623, 17134, 1033, 1012, 102, 101, 2057, 6911, 2008, 2023, 1000, 3016, 25253, 3976, 1997, 26395, 1000, 2765, 2003, 2981, 1997, 1996, 7226, 13375, 1005, 9029, 1012, 102, 101, 2008, 2003, 1010, 1996, 1016, 1011, 20167, 6463, 2003, 12361, 2005, 2151, 2691, 9723, 4353, 1006, 1000, 2691, 3188, 1000, 1007, 2058, 1996, 26004, 4972, 1006, 2057, 2079, 5478, 1996, 2691, 3188, 2000, 2022, 1996, 4031, 1997, 2981, 9723, 20611, 1007, 1012, 102, 101, 2023, 6083, 1037, 2690, 1011, 2598, 2090, 1996, 4556, 3171, 1998, 1996, 3115, 3274, 2671, 8107, 1024, 2573, 1999, 5543, 5373, 7868, 2008, 1996, 1000, 7953, 1000, 2003, 4567, 2013, 2070, 3563, 9723, 4353, 1010, 1998, 6011, 3463, 2008, 6611, 2000, 2008, 3563, 2028, 1012, 102, 101, 1999, 5688, 1010, 3274, 6529, 9544, 1037, 5409, 1011, 2553, 4106, 2008, 4324, 2005, 2296, 2825, 7953, 1012, 102, 101, 2057, 5478, 1996, 11213, 2008, 1996, 7953, 2003, 4567, 2013, 2070, 1006, 2124, 1007, 9723, 4353, 2021, 5987, 2000, 6855, 1037, 2204, 20167, 6463, 7539, 1997, 2054, 2009, 2003, 1012, 102, 101, 2057, 3602, 2008, 2019, 3921, 2714, 2000, 14635, 2001, 4162, 2000, 14337, 16972, 3471, 1999, 1031, 1023, 29623, 2620, 1033, 2330, 3160, 1024, 2064, 1037, 1006, 3816, 1007, 3016, 25253, 10594, 14442, 2022, 24806, 1999, 17505, 2051, 29632, 5332, 23344, 4973, 2265, 2008, 1037, 5760, 3016, 25253, 10594, 2003, 2025, 12361, 2000, 4839, 1999, 2256, 3016, 25253, 4292, 102, 101, 2019, 5875, 2569, 2553, 1997, 1996, 3016, 25253, 2208, 2003, 1996, 2440, 1011, 2592, 2208, 1999, 2029, 2296, 7226, 4063, 1005, 2015, 26004, 3853, 2003, 2124, 2000, 2035, 2060, 7226, 13375, 1012, 102, 101, 2057, 2265, 1010, 2008, 1999, 2107, 2440, 1011, 2592, 2399, 1037, 5760, 10594, 14442, 2467, 6526, 1012, 102, 101, 2023, 2003, 2995, 2130, 2065, 1996, 7226, 13375, 2024, 2025, 4654, 29624, 19894, 14258, 11581, 1012, 102, 101, 1999, 2755, 1010, 2009, 2003, 3733, 2000, 2265, 2008, 2130, 1996, 15502, 16169, 1997, 5167, 2064, 2022, 4719, 1999, 1037, 5760, 10594, 14442, 1012, 102, 101, 2061, 1010, 2096, 1996, 3976, 1997, 26395, 1999, 2023, 2208, 2003, 15579, 1006, 2302, 4654, 29624, 19894, 3265, 1011, 11581, 3012, 1007, 1010, 1996, 3976, 1997, 9211, 1006, 1996, 2591, 7574, 3643, 1997, 1996, 2190, 10594, 14442, 1031, 1015, 1033, 1007, 2003, 1015, 1012, 102, 101, 2174, 1010, 23569, 27605, 6774, 1996, 2591, 1011, 7574, 1999, 22863, 23207, 4818, 10470, 2015, 2007, 4942, 5302, 8566, 8017, 7226, 13375, 1999, 2124, 2000, 2022, 27937, 1011, 2524, 1031, 2410, 1033, 1012, 102, 101, 3568, 1010, 2057, 2024, 2187, 2007, 1996, 2206, 3019, 3160, 1024, 2064, 2057, 2424, 1037, 5760, 10594, 14442, 2008, 3640, 1037, 2204, 20167, 2000, 1996, 15502, 2591, 7574, 1999, 17505, 2051, 29632, 8545, 2507, 1996, 2206, 3437, 2005, 4942, 5302, 8566, 8017, 7226, 13375, 1024, 9872, 1024, 2065, 7226, 13375, 2031, 4942, 5302, 8566, 8017, 26004, 4972, 2059, 1037, 5760, 102, 101, 2057, 3602, 2008, 2714, 3980, 2031, 2042, 3273, 2011, 29525, 2696, 1999, 1031, 2324, 1033, 1019, 1012, 102, 101, 2005, 1996, 7289, 2465, 1997, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 4972, 1010, 2057, 3073, 1037, 26157, 2126, 1997, 4531, 1037, 5760, 10594, 2008, 3640, 1037, 1016, 1011, 20167, 3081, 1037, 3722, 1998, 3019, 2026, 7361, 2594, 7709, 1012, 102, 101, 2023, 7709, 2003, 4427, 2011, 1996, 20505, 20167, 1011, 9896, 1999, 1031, 1018, 1033, 1012, 102, 101, 6854, 1010, 2096, 2023, 2026, 7361, 2594, 7709, 2515, 24134, 1037, 5760, 10594, 14442, 1999, 17505, 2051, 2005, 2070, 5875, 1006, 2512, 6342, 25526, 7716, 7934, 1007, 4942, 18382, 2015, 1010, 2023, 2003, 2025, 2995, 1999, 2236, 1012, 102, 101, 2057, 6011, 2008, 1996, 2026, 7361, 2594, 7709, 2089, 2202, 27258, 2051, 2011, 22922, 1037, 2512, 29624, 18886, 18660, 2810, 1997, 2019, 6013, 2006, 2029, 2023, 2064, 5258, 29625, 26915, 3160, 1024, 2064, 1037, 5760, 10594, 14442, 2008, 6855, 2015, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 1011, 7574, 2022, 24806, 1999, 17505, 2051, 2065, 7226, 13375, 2031, 102, 101, 1999, 4942, 29015, 1016, 29625, 2487, 2057, 2556, 1996, 3016, 25253, 4292, 2057, 8849, 1999, 2023, 3259, 1010, 2029, 2057, 2744, 1000, 3016, 25253, 22863, 23207, 4818, 10470, 2015, 1000, 1012, 102, 101, 1999, 4942, 29015, 1016, 29625, 2475, 2057, 8327, 2256, 2364, 2765, 1010, 2029, 2003, 2008, 1996, 3016, 25253, 3976, 1997, 26395, 1997, 3016, 25253, 22863, 23207, 4818, 10470, 2015, 2003, 1016, 1012, 102, 101, 1049, 5167, 2024, 2853, 2000, 1050, 7226, 13375, 1999, 1049, 2981, 2117, 1011, 3976, 10470, 2015, 1006, 2007, 2070, 5495, 1011, 4911, 3627, 1007, 1012, 102, 101, 1037, 7226, 4063, 1005, 2015, 5656, 2003, 1037, 7226, 1011, 9207, 1038, 1045, 1596, 1054, 1049, 1609, 1014, 1006, 1038, 1045, 1006, 1046, 1007, 5836, 1045, 1005, 2015, 7226, 2005, 8875, 1046, 1007, 1012, 102, 101, 1020, 1037, 1006, 5760, 1007, 5656, 6337, 1997, 2035, 2867, 1019, 29525, 2696, 10592, 1037, 2236, 4292, 1999, 2029, 6567, 2024, 2081, 2011, 2512, 29624, 3597, 25918, 8082, 6074, 1010, 1998, 1996, 9710, 4972, 2024, 4942, 5302, 8566, 8017, 1012, 102, 101, 2002, 16481, 2008, 1999, 2023, 4292, 1996, 3976, 1997, 26395, 2003, 2012, 2087, 1016, 1012, 102, 101, 1996, 7705, 6936, 2045, 2003, 2107, 2008, 1996, 2867, 1005, 5760, 9942, 2024, 16745, 2015, 1997, 1037, 2598, 2275, 1006, 1041, 29625, 2290, 29625, 1010, 1996, 5167, 1007, 1012, 102, 101, 2023, 7705, 2003, 2025, 12711, 2000, 2256, 10470, 1010, 2073, 1996, 20723, 2377, 1037, 10232, 2535, 1012, 102, 101, 1020, 2061, 2004, 2000, 2031, 1037, 10713, 1006, 16246, 1007, 2944, 1010, 2057, 7868, 2008, 2035, 11701, 20723, 2024, 3674, 2015, 1997, 2019, 15275, 1012, 102, 101, 7297, 1010, 2027, 2064, 2025, 13467, 2070, 4555, 3643, 1038, 17848, 29625, 2483, 2019, 1050, 1011, 10722, 10814, 1038, 1027, 1006, 1038, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1050, 1007, 1012, 102, 101, 2057, 2097, 2224, 1996, 14869, 1038, 1027, 1006, 1038, 1045, 1010, 1038, 1597, 1045, 1007, 1010, 2000, 19090, 1037, 5656, 6337, 1999, 2029, 7226, 4063, 1045, 20723, 1038, 1045, 1998, 2060, 7226, 13375, 7226, 2004, 1999, 2497, 1597, 1045, 1027, 1006, 1038, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1045, 1597, 1015, 1010, 102, 101, 2445, 1037, 5656, 6337, 1038, 1010, 1996, 5167, 2024, 11095, 2429, 2000, 1996, 2117, 3976, 3627, 1010, 1045, 29625, 2063, 29625, 1010, 2296, 4874, 2003, 2853, 2000, 1996, 3284, 7226, 4063, 2012, 1037, 3976, 5020, 2000, 1996, 2117, 3284, 7226, 1012, 102, 101, 2005, 4087, 4436, 1010, 2000, 2022, 4541, 2101, 1010, 1999, 2169, 2107, 2117, 1011, 3976, 10470, 2007, 11265, 25394, 18507, 9723, 1996, 8875, 2003, 18154, 11095, 2000, 2028, 1997, 1996, 7226, 13375, 1006, 2040, 7864, 1037, 7226, 3020, 2084, 5717, 1007, 1012, 102, 101, 1999, 2023, 2553, 1010, 2008, 7226, 4063, 2003, 5338, 2010, 7226, 2005, 1996, 8875, 29625, 29278, 2070, 4964, 1038, 2057, 19090, 2011, 1060, 1045, 1006, 1038, 1007, 1996, 2275, 1997, 5167, 4663, 2011, 2447, 1045, 1999, 1996, 10470, 1021, 1012, 102, 101, 2005, 1037, 2275, 1055, 1611, 1049, 1010, 2292, 1996, 7680, 1997, 1996, 1006, 3284, 1007, 20723, 2022, 19537, 2011, 17062, 2015, 1006, 1055, 1010, 1038, 1007, 1027, 1046, 1596, 1055, 4098, 1047, 1038, 1047, 1006, 1046, 1007, 1010, 20723, 1597, 1045, 1006, 1055, 1010, 1038, 1597, 1045, 1007, 1027, 1046, 1596, 1055, 102, 101, 1996, 9710, 1006, 3477, 7245, 1007, 1997, 2447, 1045, 2003, 2059, 2445, 23471, 1045, 1006, 1038, 1007, 1027, 1058, 1045, 1006, 1060, 1045, 1006, 1038, 1007, 1007, 1597, 20723, 1597, 1045, 1006, 1060, 1045, 1006, 1038, 1007, 1010, 1038, 1597, 1045, 1007, 1012, 102, 101, 2057, 2191, 2048, 17568, 2055, 1996, 7226, 13375, 1024, 4654, 29624, 19894, 3265, 1011, 11581, 3012, 1010, 1998, 2008, 1996, 1058, 1045, 1055, 2024, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 1012, 102, 101, 1037, 26004, 2003, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 2065, 2009, 2003, 1996, 2391, 14244, 4555, 1997, 1037, 2275, 1997, 29167, 26004, 2015, 1024, 1037, 26004, 1037, 1045, 2003, 29167, 2065, 2005, 2296, 1055, 1611, 1049, 1037, 1045, 1006, 1055, 1007, 1027, 1173, 1046, 1596, 1055, 1037, 1045, 1006, 1063, 1046, 1065, 1007, 1012, 102, 101, 1037, 26004, 1058, 1045, 2003, 12884, 3973, 6342, 9024, 23194, 3512, 2065, 2045, 2024, 29167, 26004, 2015, 1037, 1027, 1063, 1037, 1015, 1010, 1012, 1012, 1012, 1010, 1037, 1048, 1065, 2107, 2008, 2005, 2296, 1055, 1611, 1049, 1058, 1045, 1006, 1055, 1007, 1027, 4098, 1037, 1596, 1037, 1037, 1006, 1055, 1007, 1012, 102, 101, 1006, 2057, 2097, 2655, 1037, 1047, 1596, 1037, 1037, 20446, 6026, 29167, 26004, 2005, 1996, 2275, 1055, 2065, 1058, 1045, 1006, 1055, 1007, 1027, 1037, 1047, 1006, 1055, 1007, 1012, 1007, 102, 101, 1996, 2465, 1997, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 2015, 2003, 2124, 2000, 2022, 9975, 4838, 1999, 1996, 2465, 1997, 4942, 4215, 23194, 3512, 26004, 2015, 1998, 2000, 9975, 5383, 1996, 2465, 1997, 4942, 5302, 8566, 8017, 26004, 2015, 1031, 2403, 29623, 17134, 1033, 1012, 102, 101, 2005, 2035, 1045, 1010, 2292, 1058, 1045, 19090, 1996, 10713, 2275, 1997, 2825, 26004, 2015, 1997, 2447, 1045, 1012, 102, 101, 1996, 2275, 1997, 2825, 26004, 17879, 1997, 1996, 2867, 2003, 2059, 1058, 1027, 1058, 1015, 1095, 1012, 1012, 1012, 1095, 1058, 1050, 1012, 102, 101, 2045, 2003, 1037, 2124, 9723, 4353, 1040, 2058, 1996, 26004, 2015, 1058, 1006, 1037, 2691, 3188, 1007, 1012, 102, 101, 1040, 2064, 2022, 5240, 2004, 2070, 3006, 6747, 2008, 2003, 2124, 2000, 2035, 7226, 13375, 1006, 1998, 2000, 1996, 10470, 11510, 1007, 1010, 1998, 27171, 2037, 9029, 1012, 102, 101, 2057, 7868, 2008, 1040, 1027, 1040, 1015, 1095, 1012, 1012, 1012, 1095, 1040, 1050, 2003, 1996, 11122, 25253, 4031, 1997, 2981, 9723, 20611, 1040, 1045, 1024, 2151, 26004, 6337, 1058, 1027, 1006, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1058, 1050, 1007, 5158, 2007, 9723, 2094, 1006, 1058, 1007, 1027, 1170, 1050, 102, 101, 2292, 1058, 1597, 1045, 1027, 1095, 1047, 1027, 1045, 1058, 1047, 1010, 1040, 1597, 1045, 1027, 1095, 1047, 1027, 1045, 1040, 1047, 1010, 1998, 1058, 1597, 1045, 1027, 1006, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1058, 1045, 1597, 1015, 1010, 1058, 1045, 1009, 2487, 1010, 1012, 1012, 1012, 1010, 1058, 102, 101, 1037, 17534, 1011, 3853, 1038, 1045, 2005, 2447, 1045, 2003, 1037, 3853, 2008, 24022, 1037, 7226, 1011, 9207, 1038, 1045, 1027, 1038, 1045, 1006, 1058, 1045, 1007, 2000, 2296, 26004, 3853, 1058, 1045, 1596, 1058, 1045, 1012, 102, 101, 1996, 8068, 2089, 2424, 2009, 14044, 2000, 2228, 1997, 1038, 1045, 2004, 1037, 10293, 2081, 2000, 2447, 1045, 2011, 1996, 10470, 11510, 2004, 2000, 2029, 7226, 2000, 12040, 1012, 102, 101, 2019, 1050, 1011, 10722, 10814, 1997, 17534, 1011, 4972, 1038, 1027, 1006, 1038, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1050, 1007, 2003, 1037, 3016, 25253, 10594, 14442, 2065, 2005, 2296, 1045, 1596, 1031, 1050, 1033, 1010, 1998, 2005, 2296, 26004, 3853, 1058, 1045, 1010, 1996, 7226, 1038, 1045, 1006, 1058, 1045, 102, 101, 2008, 2003, 1010, 1037, 3016, 25253, 10594, 25845, 2015, 1045, 1005, 2015, 3517, 3477, 7245, 2005, 2151, 26004, 3853, 2002, 2089, 2031, 1010, 2445, 2010, 9029, 2055, 1996, 2060, 7226, 13375, 29625, 15907, 25253, 3976, 1997, 26395, 1012, 102, 101, 2005, 1037, 4964, 26004, 6337, 1997, 1996, 7226, 13375, 1058, 1027, 1006, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1058, 1050, 1007, 1010, 1996, 15502, 2591, 1011, 7574, 2003, 6728, 1056, 1006, 1058, 1007, 1027, 4098, 1055, 2487, 1010, 2133, 1010, 1055, 2078, 1173, 1045, 1058, 1045, 1006, 1055, 1045, 1007, 1010, 2073, 102, 101, 2005, 2445, 1040, 1010, 1996, 1006, 3517, 1007, 15502, 2591, 1011, 7574, 25430, 1006, 6728, 1056, 1007, 2003, 1996, 17626, 1041, 1031, 6728, 1056, 1006, 1058, 1007, 1033, 1010, 2073, 1058, 2003, 4567, 2013, 1040, 1012, 102, 101, 2008, 2003, 1010, 25430, 1006, 6728, 1056, 1007, 1027, 1058, 1596, 1058, 1040, 1006, 1058, 1007, 6728, 1056, 1006, 1058, 1007, 2445, 1037, 6337, 1058, 1010, 2296, 5760, 5656, 6337, 1038, 19653, 2015, 1037, 2591, 1011, 7574, 5300, 2860, 1006, 1038, 1007, 1027, 1045, 1596, 1031, 1050, 1033, 1058, 1045, 1006, 1060, 102, 101, 2005, 2019, 1050, 1011, 10722, 10814, 1997, 17534, 1011, 4972, 1038, 1027, 1006, 1038, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1050, 1007, 1010, 2057, 19090, 2011, 25430, 1006, 1038, 1007, 1996, 3517, 2591, 7574, 1041, 1031, 25430, 1006, 1038, 1015, 1006, 1058, 1015, 1007, 1010, 1012, 1012, 1012, 1010, 1038, 102, 101, 2057, 2024, 4699, 1999, 3016, 25253, 10594, 1041, 26147, 12322, 4360, 1038, 2005, 2029, 1996, 6463, 25430, 1006, 6728, 1056, 1007, 25430, 1006, 1038, 1007, 2003, 2235, 1012, 102, 101, 1996, 3016, 25253, 3976, 1997, 26395, 1997, 1037, 2208, 2003, 2361, 1051, 2050, 1027, 4098, 1040, 1010, 1038, 3016, 25253, 2078, 6683, 25430, 1006, 6728, 1056, 1007, 25430, 1006, 1038, 1007, 1010, 2008, 2003, 1996, 4555, 1997, 1996, 3670, 25430, 1006, 6728, 1056, 1007, 25430, 1006, 1038, 1007, 1010, 2579, 2058, 2035, 9723, 20611, 1040, 102, 101, 29202, 2135, 1010, 1037, 3016, 25253, 3976, 1997, 26395, 1997, 1155, 2965, 2008, 2053, 3043, 2054, 1996, 7226, 13375, 1005, 9029, 2024, 1010, 2296, 3016, 25253, 10594, 14442, 3640, 2019, 1155, 1011, 20167, 2000, 1996, 15502, 2591, 1011, 7574, 29625, 6342, 9397, 11589, 2075, 20723, 1012, 102, 101, 2349, 2000, 4654, 29624, 19894, 3265, 1011, 11581, 3012, 1010, 1037, 7226, 4063, 2097, 2196, 12040, 1037, 7226, 2008, 2453, 2765, 1999, 1037, 4997, 3477, 7245, 1012, 102, 101, 9131, 2008, 1996, 3513, 1997, 1996, 10470, 4487, 25572, 2618, 2008, 2009, 2003, 2825, 2008, 1037, 7226, 4063, 2131, 2151, 16745, 1997, 1996, 5167, 2005, 2029, 2002, 7864, 2010, 2512, 29624, 6290, 2080, 20723, 1998, 2022, 5338, 1996, 7680, 1997, 2122, 20723, 1012, 102, 101, 6516, 1010, 1037, 7226, 4063, 1005, 2015, 7226, 2442, 27329, 1996, 2206, 3200, 1024, 6210, 1015, 1012, 102, 101, 1037, 7226, 9207, 1038, 1045, 2003, 2056, 2000, 2022, 1037, 4637, 7226, 2445, 1037, 26004, 2615, 1045, 1010, 2065, 2005, 2035, 1055, 1611, 1049, 1058, 1045, 1006, 1055, 1007, 1609, 1173, 1046, 1596, 1055, 1038, 1045, 1006, 1046, 1007, 1012, 102, 101, 9131, 2008, 1996, 2724, 2008, 2025, 2035, 5167, 2024, 2853, 1999, 2117, 1011, 3976, 10470, 2015, 2069, 5158, 2007, 11265, 25394, 18507, 9723, 1012, 102, 101, 6516, 1010, 2005, 17839, 1010, 2057, 4618, 27770, 2023, 2724, 1998, 6011, 2256, 9872, 2005, 1996, 2553, 2008, 2035, 5167, 2024, 2853, 1999, 2117, 1011, 3976, 10470, 2015, 1012, 102, 101, 2023, 4942, 29015, 10637, 2256, 2364, 2765, 1012, 102, 101, 2005, 7496, 1997, 13080, 2057, 6011, 1996, 9872, 4953, 1996, 3016, 25253, 3976, 1997, 26395, 2005, 5760, 3016, 25253, 10594, 1041, 26147, 12322, 4360, 1012, 102, 101, 1996, 1006, 2062, 8552, 1007, 6947, 2005, 3816, 10594, 2003, 16647, 2349, 2000, 2686, 12546, 1998, 3544, 1999, 1996, 2440, 2544, 1997, 1996, 3259, 1012, 102, 101, 1996, 6947, 1997, 1996, 9872, 20397, 1996, 12884, 2389, 4942, 4215, 23194, 7730, 1997, 1996, 26004, 2015, 3081, 1996, 2206, 3393, 14760, 1024, 3393, 14760, 1015, 1012, 102, 101, 2292, 1055, 2022, 1037, 2275, 1997, 5167, 1010, 1998, 1037, 1045, 2022, 1037, 20446, 6026, 29167, 26004, 1997, 2447, 1045, 2005, 2023, 2275, 1010, 7775, 2061, 2008, 1037, 1045, 1027, 1014, 2006, 1049, 1032, 1055, 1012, 102, 101, 2065, 1045, 20723, 2429, 2000, 1037, 1045, 1010, 2096, 2035, 1996, 2500, 7226, 2429, 2000, 2151, 5760, 6337, 1038, 1597, 1045, 1010, 2059, 2226, 1045, 1006, 1037, 1045, 1010, 1038, 1597, 1045, 1007, 1609, 1058, 1045, 1006, 1055, 1007, 1597, 20723, 1597, 1045, 1006, 1055, 1010, 1038, 1597, 1045, 1007, 1012, 102, 101, 2292, 1060, 1045, 1024, 1027, 1060, 1045, 1006, 1037, 1045, 1010, 1038, 1597, 1045, 1007, 2022, 1996, 2275, 1997, 5167, 2008, 2447, 1045, 2003, 2183, 2000, 2131, 1012, 102, 101, 3602, 2008, 2065, 1045, 5222, 2151, 8875, 1046, 1596, 1055, 2059, 1996, 4555, 7226, 2006, 2023, 1046, 2001, 1014, 1012, 102, 101, 2947, 2057, 2064, 7868, 1059, 29625, 2140, 29625, 2080, 29625, 2290, 29625, 2008, 1060, 1045, 1611, 1055, 29625, 9308, 1010, 1037, 1045, 1006, 1046, 1007, 1597, 20723, 1597, 1045, 1006, 1063, 1046, 1065, 1010, 1038, 1597, 1045, 1007, 1608, 1014, 4324, 2005, 2296, 2512, 29624, 16429, 28055, 8875, 1046, 1596, 1055, 1597, 1060, 1045, 1012, 102, 101, 3568, 1010, 2057, 2031, 2226, 1045, 1006, 1037, 1010, 1038, 1597, 1045, 1007, 1027, 1058, 1045, 1006, 1060, 1045, 1007, 1597, 20723, 1597, 1045, 1006, 1060, 1045, 1010, 1038, 1597, 1045, 1007, 1609, 1046, 1596, 8418, 1037, 1045, 1006, 1046, 1007, 1597, 20723, 1597, 1045, 1006, 1060, 1045, 1010, 1038, 1597, 102, 101, 2292, 1040, 2022, 1037, 4353, 2058, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 2015, 1997, 1996, 7226, 13375, 1012, 102, 101, 2065, 1038, 1027, 1006, 1038, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1050, 1007, 2003, 1037, 3016, 25253, 10594, 1010, 2107, 2008, 2169, 1038, 1045, 7341, 2296, 26004, 3853, 1058, 1045, 2000, 1037, 4637, 7226, 1006, 2445, 1058, 1045, 1007, 2059, 25430, 1006, 6728, 1056, 1007, 25430, 1006, 1038, 1007, 1608, 102, 101, 2292, 1058, 1027, 1006, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1058, 1050, 1007, 2022, 1037, 4964, 26004, 6337, 1012, 102, 101, 2057, 19090, 2011, 1051, 1058, 1027, 1006, 1051, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1051, 1058, 1050, 1007, 1996, 23569, 28591, 16169, 2007, 4847, 2000, 6337, 1058, 1012, 102, 101, 2085, 2005, 2296, 2447, 1045, 1010, 2292, 1037, 1045, 19090, 1996, 20446, 6026, 29167, 26004, 2005, 1996, 2275, 1051, 1058, 1045, 1010, 1006, 1999, 3327, 1010, 1037, 1045, 1006, 1046, 1007, 1027, 1014, 2065, 1046, 1596, 1051, 1058, 1045, 1007, 1012, 102, 101, 2005, 2035, 1045, 1010, 2057, 5136, 1037, 1045, 2004, 2019, 4522, 5656, 2000, 1038, 1045, 1006, 1058, 1045, 1007, 1012, 102, 101, 2292, 2149, 8081, 1037, 7226, 4063, 1045, 29625, 2292, 1059, 1597, 1045, 2022, 2019, 15275, 26004, 6337, 1997, 2035, 7226, 13375, 3272, 2005, 1045, 1012, 102, 101, 2057, 8970, 1996, 2460, 14869, 2595, 1059, 1597, 1045, 1045, 13366, 1027, 1060, 1045, 1006, 1038, 1045, 1006, 1058, 1045, 1007, 1010, 1038, 1597, 1045, 1006, 1059, 1597, 1045, 1007, 1007, 1012, 102, 101, 7297, 1010, 2005, 2151, 1055, 1611, 1049, 2057, 2097, 2224, 17062, 2015, 1059, 1597, 1045, 1597, 1045, 1006, 1055, 1007, 13366, 1027, 20723, 1597, 1045, 1006, 1055, 1010, 1038, 1597, 1045, 1006, 1059, 1597, 1045, 1007, 1007, 1010, 20723, 1059, 1006, 1055, 1007, 13366, 1027, 20723, 1006, 1055, 1010, 1038, 1006, 1059, 102, 101, 1996, 9710, 5300, 2006, 1996, 2187, 1011, 2192, 1011, 2217, 2024, 2226, 1045, 1006, 1038, 1045, 1006, 1058, 1045, 1007, 1010, 1038, 1597, 1045, 1006, 1059, 1597, 1045, 1007, 1007, 1027, 1058, 1045, 1006, 1060, 1059, 1597, 1045, 1045, 1007, 1597, 20723, 1059, 1597, 1045, 1597, 1045, 1006, 1060, 1059, 1597, 102, 101, 2006, 1996, 2157, 1011, 2192, 1011, 2217, 1010, 11243, 3393, 14760, 1015, 16189, 2226, 1045, 1006, 1037, 1045, 1010, 1038, 1597, 1045, 1006, 1059, 1597, 1045, 1007, 1007, 1609, 1058, 1045, 1006, 1051, 1058, 1045, 1007, 1597, 20723, 1059, 1597, 1045, 1597, 1045, 1006, 1051, 1058, 1045, 1007, 1012, 102, 101, 2011, 16468, 1996, 1999, 2063, 26426, 6447, 2682, 1010, 2057, 2131, 1059, 1597, 1045, 1596, 1058, 1597, 1045, 1040, 1006, 1059, 1597, 1045, 1007, 1058, 1045, 1006, 1060, 1059, 1597, 1045, 1045, 1007, 1609, 1059, 1597, 1045, 1596, 1058, 1597, 1045, 1040, 1006, 1059, 1597, 1045, 1007, 1031, 1058, 1045, 1006, 1051, 1058, 102, 101, 2182, 1996, 3517, 3284, 20723, 1059, 1597, 1045, 1597, 1045, 1006, 1051, 1058, 1045, 1007, 1608, 20723, 1059, 1006, 1051, 1058, 1045, 1007, 5525, 4324, 1010, 2144, 1999, 1996, 3732, 2553, 2057, 5136, 4555, 20723, 2058, 1037, 3469, 2275, 1997, 2867, 1012, 102, 101, 2057, 4663, 2615, 1045, 1006, 1051, 1058, 1045, 1007, 1608, 1059, 1597, 1045, 1596, 1058, 1597, 1045, 1040, 1006, 1059, 1597, 1045, 1007, 1058, 1045, 1006, 1060, 1059, 1597, 1045, 1045, 1007, 1009, 1059, 1596, 1058, 1040, 1006, 1059, 1007, 20723, 1059, 1006, 1051, 1058, 1045, 1007, 1012, 102, 101, 2057, 7680, 2058, 2035, 1045, 1010, 1998, 2059, 2202, 1996, 17626, 2058, 2035, 26004, 2015, 1058, 1027, 1006, 1058, 1015, 1010, 1012, 1012, 1012, 1010, 1058, 1050, 1007, 2006, 2119, 3903, 1024, 1058, 1596, 1058, 1040, 1006, 1058, 1007, 1045, 1596, 1031, 1050, 1033, 1058, 1045, 1006, 1051, 1058, 1045, 1007, 102, 101, 3602, 2008, 1058, 1596, 1058, 1040, 1006, 1058, 1007, 1045, 1596, 1031, 1050, 1033, 1058, 1045, 1006, 1051, 1058, 1045, 1007, 1027, 25430, 1006, 6728, 1056, 1007, 1012, 102, 101, 7297, 1010, 2057, 4366, 2008, 2119, 7680, 2386, 5104, 2006, 1996, 2157, 1011, 2192, 1011, 2217, 2024, 2012, 2087, 25430, 1006, 1038, 1007, 1010, 2061, 2008, 25430, 1006, 6728, 1056, 1007, 1608, 1016, 26760, 1006, 1038, 1007, 1010, 2029, 2097, 16519, 1996, 6947, 1012, 102, 101, 1996, 2034, 7680, 2386, 2094, 2003, 1045, 1596, 1031, 1050, 1033, 6819, 1596, 6819, 1040, 1006, 1058, 1045, 1007, 1058, 1597, 1045, 1596, 1058, 1597, 1045, 1040, 1006, 1058, 1597, 1045, 1007, 1059, 1597, 1045, 1596, 1058, 1597, 1045, 1040, 1006, 1059, 1597, 1045, 1007, 1058, 1045, 1006, 1060, 1059, 1597, 1045, 102, 101, 2633, 1010, 1996, 2117, 7680, 2386, 2094, 2003, 1058, 1596, 1058, 1040, 1006, 1058, 1007, 1059, 1596, 1058, 1040, 1006, 1059, 1007, 1045, 1596, 1031, 1050, 1033, 20723, 1059, 1006, 1051, 1058, 1045, 1007, 1027, 1058, 1596, 1058, 1040, 1006, 1058, 1007, 1059, 1596, 1058, 1040, 1006, 1059, 1007, 20723, 1059, 1006, 102, 101, 1996, 2197, 16440, 4324, 2144, 2005, 2035, 1045, 1010, 1996, 1038, 1045, 1006, 1059, 1045, 1007, 3397, 4637, 20723, 2005, 2151, 2275, 1997, 5167, 2164, 1996, 4663, 2275, 1060, 1045, 1006, 1038, 1006, 1059, 1007, 1007, 1012, 102, 101, 1999, 4942, 29015, 1017, 29625, 2487, 1010, 2057, 2265, 2008, 1037, 5760, 10594, 2008, 3640, 1037, 2204, 20167, 2000, 1996, 2591, 7574, 2467, 6526, 1999, 2107, 2399, 1998, 3073, 1037, 26157, 2126, 1997, 4531, 2028, 1012, 102, 101, 1999, 2755, 1010, 2057, 2036, 6011, 2008, 1996, 3976, 1997, 9211, 1031, 1015, 1033, 2003, 1015, 1010, 1045, 29625, 2063, 29625, 1996, 23569, 28591, 2064, 2467, 2022, 4719, 1999, 1037, 10594, 14442, 29625, 2378, 4942, 29015, 1017, 29625, 2475, 2057, 2265, 2008, 2065, 7226, 13375, 2031, 4942, 5302, 8566, 8017, 26004, 4972, 2059, 2107, 1037, 5760, 10594, 2064, 2022, 2584, 1999, 17505, 2051, 102, 101, 2750, 1996, 2755, 2008, 1006, 2004, 3491, 1999, 1996, 4955, 1007, 2070, 10594, 1041, 26147, 12322, 4360, 2089, 8246, 2000, 3073, 2204, 20167, 2000, 1996, 2591, 1011, 7574, 1010, 2057, 2556, 1037, 26157, 2126, 2005, 4531, 1037, 5760, 10594, 2008, 16189, 1037, 1016, 1011, 20167, 1012, 102, 101, 2057, 8970, 1037, 3019, 7709, 2057, 2655, 1996, 4022, 7709, 2029, 2467, 6561, 2107, 2019, 14442, 1012, 102, 101, 1996, 4022, 7709, 2003, 1037, 3722, 2026, 7361, 2594, 7709, 2005, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 7226, 13375, 1022, 1012, 102, 101, 2005, 2296, 1045, 2292, 1037, 1045, 1027, 1063, 1037, 1045, 1015, 1010, 2133, 1010, 1037, 1045, 5622, 1065, 2022, 1037, 2275, 1997, 29167, 26004, 2015, 2107, 2008, 2005, 2296, 1055, 1611, 1049, 1058, 1045, 1006, 1055, 1007, 1027, 4098, 1037, 1596, 9932, 1037, 1006, 1055, 1007, 1012, 102, 101, 9131, 2008, 2144, 1058, 1045, 2003, 12884, 3973, 4942, 4215, 23194, 3512, 2107, 1037, 1045, 2442, 4839, 1012, 102, 101, 21858, 1010, 1996, 4022, 7709, 3432, 4627, 2007, 2070, 15275, 4637, 20723, 1006, 7978, 2000, 2070, 20446, 6026, 29167, 26004, 2015, 1007, 1998, 2292, 2867, 2190, 1011, 7514, 1010, 2028, 2011, 2028, 1010, 2000, 1996, 20723, 1997, 2060, 2867, 2011, 11991, 2000, 2047, 4637, 20723, 29625, 10760, 7709, 1024, 1015, 1012, 102, 101, 3988, 4697, 1038, 1008, 1045, 1006, 1046, 1007, 1583, 1014, 1010, 1055, 1045, 1583, 1593, 1010, 1054, 1046, 1583, 1014, 1010, 2005, 1045, 1027, 1015, 1010, 1012, 102, 101, 1010, 1050, 1998, 1046, 1027, 1015, 1010, 1012, 1012, 1012, 1010, 1049, 29625, 1016, 1012, 102, 101, 2096, 2045, 2003, 1037, 7226, 4063, 1045, 2107, 2008, 2015, 1045, 1027, 12098, 2290, 4098, 1055, 1611, 1049, 1006, 1058, 1045, 1006, 1055, 1007, 1597, 1173, 1046, 1596, 1006, 1055, 1032, 9033, 1007, 1054, 1046, 1007, 1024, 1006, 1037, 1007, 2292, 1056, 1027, 12098, 2290, 4098, 1055, 1611, 1049, 1006, 1058, 1045, 1006, 1055, 102, 101, 2292, 1037, 1596, 1037, 1045, 2022, 2107, 2008, 1058, 1045, 1006, 1056, 1007, 1027, 1037, 1006, 1056, 1007, 1012, 102, 101, 1006, 1038, 1007, 2275, 1038, 1008, 1045, 1006, 1046, 1007, 1583, 1014, 1998, 1054, 1046, 1583, 1014, 2005, 2035, 1046, 1596, 1055, 1045, 1012, 102, 101, 1006, 1039, 1007, 2275, 1038, 1008, 1045, 1006, 1046, 1007, 1583, 1037, 1006, 1046, 1007, 2005, 2035, 1046, 1596, 1056, 1012, 102, 101, 2275, 1054, 1046, 1583, 1037, 1006, 1046, 1007, 2005, 2035, 1046, 1596, 1056, 1012, 102, 101, 1006, 1040, 1007, 2275, 1055, 1045, 1583, 1056, 1012, 102, 101, 1006, 1041, 1007, 2005, 2035, 1047, 1027, 1045, 2275, 1055, 1047, 1583, 1055, 1047, 1032, 1055, 1045, 1010, 1998, 2275, 1038, 1008, 1047, 1006, 1046, 1007, 1583, 1014, 2005, 2035, 1046, 1596, 1055, 1045, 1012, 102, 101, 6434, 1038, 1008, 1027, 1006, 1038, 1008, 1015, 1010, 1012, 1012, 1012, 1010, 1038, 1008, 1050, 1007, 1012, 102, 101, 11949, 2008, 1999, 1996, 6210, 2057, 2079, 2025, 5478, 1037, 1006, 1046, 1007, 1609, 1054, 1046, 1999, 3210, 1006, 1037, 1007, 1011, 1006, 1039, 1007, 1006, 1045, 29625, 2063, 29625, 1010, 2008, 1054, 1046, 3623, 1007, 1012, 102, 101, 2174, 1010, 2023, 4076, 2013, 1996, 2755, 2008, 1056, 25845, 2015, 1058, 1045, 1006, 1055, 1007, 1597, 1173, 1046, 1596, 1006, 1055, 1032, 9033, 1007, 1054, 1046, 1012, 102, 101, 2057, 2224, 1037, 4022, 1011, 3853, 6685, 1998, 1996, 12884, 9777, 19761, 14141, 25090, 24872, 1997, 1996, 7226, 13375, 2000, 2265, 2008, 1996, 4022, 7709, 2776, 28314, 2015, 2000, 1037, 1000, 2204, 1000, 5760, 10594, 29625, 10760, 5686, 2213, 1016, 1012, 102, 101, 2065, 1996, 26004, 4972, 2024, 12884, 3973, 4942, 4215, 23194, 3512, 1010, 2059, 1996, 4022, 7709, 28314, 2015, 2000, 1037, 5760, 10594, 14442, 2008, 3640, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 1011, 7574, 29625, 8545, 3602, 2008, 1996, 6947, 3065, 2008, 2130, 1996, 15502, 2591, 1011, 7574, 2064, 2022, 4663, 1999, 1037, 5760, 10594, 14442, 102, 101, 2061, 1010, 2057, 2031, 1037, 3019, 7709, 1010, 2008, 2003, 7687, 1037, 2190, 3433, 5537, 1997, 1996, 2867, 1010, 2008, 5260, 2000, 1037, 5760, 10594, 14442, 1012, 102, 101, 2021, 1010, 2129, 2146, 2097, 2009, 2202, 1996, 4022, 7709, 2000, 28314, 1029, 102, 101, 1037, 2512, 29624, 18886, 18660, 2810, 3065, 2008, 6854, 1996, 5409, 2553, 2770, 2051, 2003, 27258, 1999, 1050, 1998, 1049, 29625, 10760, 5686, 2213, 1017, 1012, 102, 101, 2045, 2003, 2019, 6013, 2007, 1016, 7226, 13375, 1010, 2169, 2007, 1037, 12884, 3973, 6342, 9024, 23194, 3512, 26004, 3853, 1010, 2006, 2029, 1996, 4022, 7709, 28314, 2015, 2044, 1179, 1006, 1016, 1049, 1007, 4084, 29625, 10760, 5686, 2213, 1017, 3727, 2149, 2007, 2048, 5875, 2330, 3980, 1024, 2034, 1010, 2097, 1996, 4022, 7709, 28314, 1999, 17505, 2051, 2065, 1996, 26004, 102, 101, 2117, 1010, 2515, 1996, 4022, 7709, 2467, 2448, 1999, 2051, 2008, 2003, 17505, 1999, 1996, 2946, 1997, 1996, 4520, 1997, 29167, 26004, 2015, 2008, 2104, 8751, 2296, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 1029, 102, 101, 2019, 27352, 3437, 2000, 2023, 3160, 2052, 19515, 2008, 1996, 4022, 7709, 3216, 1999, 17505, 2051, 2065, 1996, 7226, 13375, 2031, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 26004, 2015, 12359, 1999, 1037, 17534, 2653, 1006, 2156, 1031, 2403, 29623, 17134, 29623, 2549, 29623, 2629, 1033, 1007, 1012, 102, 101, 2057, 3602, 2008, 1999, 1996, 6013, 1999, 1996, 6947, 1997, 9872, 1017, 1996, 2946, 1997, 1996, 4520, 1997, 29167, 26004, 2015, 2001, 27258, 1050, 1998, 1049, 1012, 102, 101, 1999, 2023, 4942, 29015, 1010, 2057, 3579, 2006, 4942, 5302, 8566, 8017, 26004, 4972, 1012, 102, 101, 2057, 2265, 2008, 2028, 2064, 2424, 1010, 1999, 17505, 2051, 1010, 1037, 5760, 10594, 14442, 2008, 2036, 2938, 2483, 14213, 1996, 10345, 1997, 9872, 1015, 1012, 102, 101, 1996, 7709, 2057, 2556, 20397, 1996, 9896, 2349, 2000, 28444, 2078, 3802, 2632, 29625, 1031, 2410, 1033, 1012, 102, 101, 2023, 7709, 1010, 2029, 2057, 2097, 2655, 1996, 14785, 1011, 3643, 7709, 1010, 3568, 3640, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 7574, 29625, 10760, 7709, 1024, 1015, 1012, 102, 101, 8081, 2019, 15275, 2344, 2006, 1996, 5167, 1012, 102, 101, 1059, 29625, 2140, 29625, 2080, 29625, 2290, 29625, 2292, 2023, 2344, 2022, 1015, 1010, 1012, 1012, 1012, 1010, 1049, 29625, 1016, 1012, 102, 101, 3988, 4697, 1055, 1045, 1583, 1593, 1010, 1998, 1054, 1046, 1583, 1014, 1010, 2005, 1045, 1027, 1015, 1010, 1012, 1012, 1012, 1010, 1050, 1010, 1998, 1046, 1027, 1015, 1010, 1012, 1012, 1012, 1010, 1049, 29625, 1017, 1012, 102, 101, 2005, 2169, 8875, 1046, 1027, 1015, 1010, 1012, 1012, 1012, 1010, 1049, 1024, 1006, 1037, 1007, 2292, 1045, 1027, 12098, 2290, 4098, 1056, 1596, 1050, 1058, 1056, 1006, 1055, 1056, 1605, 1063, 1046, 1065, 1007, 1597, 1058, 1056, 1006, 1055, 1056, 1007, 1012, 102, 101, 2275, 1055, 1045, 1583, 1055, 1045, 1605, 1063, 1046, 1065, 1012, 102, 101, 1006, 1038, 1007, 2275, 1054, 1046, 1583, 4098, 1056, 1596, 1050, 1058, 1056, 1006, 1055, 1056, 1605, 1063, 1046, 1065, 1007, 1597, 1058, 1056, 1006, 1055, 1056, 1007, 1012, 102, 101, 2005, 2296, 7226, 4063, 1045, 2275, 1038, 1008, 1045, 1006, 1046, 1007, 1583, 1054, 1046, 2005, 2035, 1046, 1596, 1055, 1045, 1998, 1038, 1008, 1045, 1006, 1046, 1007, 1583, 1014, 2005, 2035, 1046, 1013, 1596, 1055, 1045, 1012, 102, 101, 6434, 1038, 1008, 1027, 1006, 1038, 1008, 1015, 1010, 2133, 1010, 1038, 1008, 1050, 1007, 1012, 102, 101, 11949, 1010, 2008, 1996, 4525, 1050, 1011, 10722, 10814, 1997, 7226, 1011, 19019, 1038, 1008, 2003, 2107, 2008, 2005, 2169, 8875, 1010, 2069, 2028, 7226, 4063, 4107, 1037, 2512, 29624, 6290, 2080, 7226, 2005, 2008, 8875, 1012, 102, 101, 2023, 2003, 2349, 2000, 1996, 2755, 2008, 2057, 2024, 7149, 2007, 1037, 3143, 1011, 2592, 4292, 1006, 29202, 2135, 1010, 2065, 1037, 7226, 4063, 2515, 2025, 2663, 2019, 8875, 2002, 2453, 2004, 2092, 2025, 7226, 2006, 2009, 1007, 1012, 102, 101, 2036, 5060, 2008, 1996, 14785, 10175, 5657, 7709, 2069, 5942, 1049, 6241, 1998, 2061, 4515, 1999, 17505, 2051, 29625, 10760, 5686, 2213, 1018, 1012, 102, 101, 2065, 1996, 26004, 4972, 2024, 4942, 5302, 8566, 8017, 2059, 1037, 5760, 10594, 14442, 2008, 3640, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 1011, 7574, 2064, 2022, 24806, 1999, 17505, 2051, 1012, 102, 101, 25430, 2063, 4067, 2053, 3286, 9152, 8791, 2005, 4372, 13149, 2075, 11450, 2008, 2599, 2000, 1996, 3015, 1997, 2023, 3259, 1012, 102, 101, 2057, 4067, 2053, 3286, 9152, 8791, 2005, 4372, 13149, 2075, 11450, 2008, 2599, 2000, 1996, 3015, 1997, 2023, 3259, 1012, 102], "tgt": [1, 3016, 25253, 22863, 23207, 4818, 10470, 2015, 21025, 21759, 2891, 4828, 7716, 7140, 23743, 1010, 4698, 7849, 2401, 12849, 24887, 2015, 1010, 2745, 8040, 3270, 8197, 2527, 1996, 6836, 2118, 1997, 6744, 10760, 6836, 2118, 1997, 6744, 22863, 23207, 4818, 10470, 2015, 22863, 23207, 4818, 10470, 2015, 23569, 1027, 1023, 22863, 23207, 4818, 10470, 2015, 7863, 1024, 2424, 1037, 13571, 1997, 1996, 5167, 7226, 13375, 5167, 26004, 2015, 2008, 25845, 2015, 1996, 2591, 7574, 1006, 3671, 3550, 1007, 1006, 18847, 5524, 1007, 26004, 2015, 4942, 5302, 8566, 8017, 1006, 15488, 1007, 1996, 14785, 3643, 1997, 1996, 8875, 17913, 2004, 1996, 2193, 1997, 5167, 7457, 1012, 3, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 1006, 1042, 2015, 1007, 29167, 1042, 2015, 26004, 2015, 1037, 1038, 1039, 1014, 1023, 1014, 1014, 1019, 1019, 1019, 1019, 1014, 1018, 1018, 1018, 5167, 5587, 1012, 3, 26004, 2015, 22863, 23207, 4818, 10470, 2015, 1011, 7860, 6143, 2057, 2215, 7226, 13375, 2000, 2022, 3606, 3993, 1012, 3, 18315, 2290, 22164, 1996, 23569, 1012, 3, 1006, 4654, 2361, 1012, 3, 2051, 1007, 15078, 20167, 13792, 1006, 2025, 3606, 3993, 1007, 4242, 26004, 2015, 4121, 16680, 4942, 5302, 8566, 8017, 1006, 15488, 1007, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 1006, 1042, 2015, 1007, 1031, 2079, 2497, 17168, 5488, 1033, 5576, 1029, 3, 2057, 2079, 2025, 2113, 3251, 9608, 3606, 3993, 1998, 17505, 1011, 2051, 20167, 13792, 4839, 1012, 3, 2129, 2064, 2057, 9462, 2023, 3291, 1029, 3, 2019, 2214, 1013, 2047, 3921, 1012, 3, 7704, 2592, 2003, 4567, 2013, 1040, 3143, 2592, 10470, 4292, 2447, 1045, 2097, 7226, 5656, 6337, 9896, 1027, 16169, 1009, 10504, 9710, 1997, 2447, 1045, 3016, 25253, 22863, 23207, 4818, 10470, 2015, 3160, 1024, 2064, 2057, 2640, 2019, 10470, 2005, 2029, 2151, 3016, 25253, 10594, 14442, 3640, 2204, 20167, 2000, 1996, 2591, 7574, 1029, 3, 1006, 5760, 1007, 3016, 25253, 10594, 1031, 5292, 22381, 4890, 2072, 1033, 17534, 3853, 11900, 1024, 1999, 1037, 3016, 25253, 10594, 1006, 29491, 1010, 1010, 24869, 1007, 1010, 2445, 1037, 9723, 4353, 1040, 1010, 12170, 1006, 6819, 1007, 25845, 2015, 1996, 3517, 9710, 1997, 2447, 1045, 1006, 2005, 2035, 6819, 1007, 1012, 3, 1006, 1007, 3016, 25253, 13433, 2050, 15502, 2591, 7574, 3517, 2591, 1997, 1037, 1038, 29625, 2078, 29625, 2063, 29625, 2005, 4964, 1058, 3016, 25253, 13433, 2050, 1027, 5221, 6463, 2090, 25430, 1006, 23569, 1007, 1998, 25430, 1006, 1038, 1007, 1006, 2058, 2035, 1040, 1010, 1038, 1007, 3016, 25253, 13433, 2050, 3976, 1997, 26395, 1031, 11721, 24771, 1010, 12256, 9013, 1010, 5495, 5804, 1010, 29525, 2696, 1033, 2117, 3976, 2447, 1045, 2097, 7226, 5656, 6337, 9896, 1024, 2507, 8875, 1046, 2000, 1996, 2447, 1045, 2007, 1996, 3284, 7226, 1012, 3, 3715, 1045, 1996, 2117, 3284, 7226, 1012, 3, 9710, 1997, 2447, 1045, 2117, 3976, 2591, 7574, 1027, 1015, 2117, 3976, 2591, 7574, 1027, 2117, 3976, 2591, 7574, 1027, 13433, 2050, 1027, 1015, 1013, 4637, 20723, 7226, 13375, 2031, 2069, 7704, 18558, 1006, 9029, 1007, 2027, 2215, 2000, 4468, 10831, 1012, 3, 1006, 4654, 29624, 19894, 20868, 1007, 4637, 20723, 1024, 1006, 2005, 2035, 1055, 1007, 2896, 5391, 23569, 1027, 1016, 2896, 5391, 10594, 1027, 1015, 13433, 2050, 1027, 1016, 2256, 3463, 3016, 25253, 4292, 1024, 1996, 3016, 25253, 13433, 2050, 2005, 1042, 2015, 26004, 2015, 1006, 4637, 20723, 1010, 3816, 1007, 2003, 1016, 1012, 3, 3143, 1011, 2592, 4292, 1024, 1042, 2015, 26004, 2015, 1024, 4598, 1997, 5760, 1050, 29625, 2063, 29625, 2026, 7361, 2594, 7709, 2005, 4531, 2028, 1012, 3, 13433, 2015, 1027, 1015, 1012, 3, 15488, 26004, 2015, 1024, 9896, 2005, 9798, 1050, 29625, 2063, 29625, 1999, 26572, 2051, 1012, 3, 26004, 2015, 4942, 5302, 8566, 8017, 1006, 15488, 1007, 1996, 14785, 3643, 1997, 1996, 8875, 17913, 2004, 1996, 2193, 1997, 5167, 7457, 1012, 3, 12884, 3973, 1011, 4942, 4215, 23194, 3512, 1006, 1042, 2015, 1007, 29167, 3356, 5391, 1006, 2440, 1011, 18558, 2553, 1007, 3393, 14760, 1012, 3, 2005, 2151, 2275, 1997, 5167, 1055, 1010, 2073, 2003, 1996, 20446, 6026, 29167, 26004, 2005, 1996, 2275, 1055, 29625, 3356, 5391, 2292, 2022, 1037, 4964, 26004, 6337, 3356, 5391, 2292, 2022, 1037, 4964, 26004, 6337, 23569, 28591, 13571, 1024, 10594, 13571, 1024, 3356, 5391, 2144, 1038, 2003, 1037, 1050, 29625, 2063, 2292, 2022, 1037, 4964, 26004, 6337, 23569, 28591, 13571, 1024, 4555, 29167, 26004, 23277, 2102, 10594, 13571, 1024, 3356, 5391, 2144, 1038, 2003, 1037, 1050, 29625, 2063, 2292, 2022, 1037, 4964, 26004, 6337, 23569, 28591, 13571, 1024, 4555, 29167, 26004, 23277, 2102, 10594, 13571, 1024, 3356, 5391, 2144, 1038, 2003, 1037, 1050, 29625, 2063, 1998, 2061, 3356, 5391, 2144, 1038, 2003, 1037, 1050, 29625, 2063, 1998, 2061, 2478, 3393, 14760, 2057, 2131, 3356, 5391, 2144, 1038, 2003, 1037, 1050, 29625, 2063, 1998, 2061, 2478, 3393, 14760, 2057, 2131, 1998, 2061, 3356, 5391, 7680, 6562, 2039, 2021, 2330, 3160, 1024, 2515, 1037, 1006, 5760, 1007, 24869, 2007, 4637, 20723, 2467, 4839, 1029, 3, 2330, 3160, 1024, 2064, 2057, 2424, 1037, 1006, 3816, 1007, 24869, 1999, 17505, 2051, 1029, 3, 2057, 5136, 1996, 2440, 1011, 2592, 4292, 1012, 3, 1996, 4022, 8853, 7559, 2102, 2007, 8875, 7597, 1014, 1010, 1010, 2692, 1012, 3, 2175, 2058, 1996, 7226, 13375, 1999, 2070, 2344, 1015, 1010, 1010, 1050, 1012, 3, 1999, 2169, 3357, 1010, 2292, 2028, 7226, 4063, 1045, 5454, 2010, 2087, 6303, 14012, 1055, 1997, 5167, 1012, 3, 10651, 1996, 7597, 1997, 5167, 1999, 1055, 2429, 2000, 2003, 20446, 6026, 29167, 26004, 2005, 1055, 1012, 3, 2320, 2053, 2028, 1006, 9975, 1007, 8996, 2000, 6942, 14012, 1010, 6434, 1996, 16169, 1009, 20723, 1012, 3, 9872, 1024, 2065, 2035, 7226, 13375, 2031, 12884, 3973, 6342, 9024, 23194, 3512, 26004, 4972, 2059, 1996, 4022, 7709, 2467, 28314, 2015, 2000, 1037, 5760, 10594, 1006, 2007, 4637, 20723, 1007, 1012, 3, 6947, 1024, 1996, 2561, 2591, 7574, 2003, 1037, 4022, 3853, 1012, 3, 1996, 4022, 7709, 9872, 1024, 2044, 1050, 4084, 1996, 5576, 2003, 1037, 1016, 1011, 20167, 2000, 1996, 15502, 2591, 7574, 1006, 2021, 2025, 9352, 1037, 5760, 10594, 1007, 1012, 3, 1031, 2079, 2497, 17168, 5488, 1011, 9152, 8791, 1011, 8040, 3270, 8197, 2527, 1033, 9872, 1024, 1996, 4022, 7709, 2453, 5478, 27258, 2135, 2116, 4084, 2000, 28314, 2000, 1037, 5760, 10594, 1012, 3, 1996, 4022, 7709, 2330, 3160, 1024, 2064, 2057, 2424, 1037, 5760, 10594, 1999, 17505, 2051, 1029, 3, 2330, 3160, 1024, 2515, 1996, 4022, 7709, 28314, 1999, 17505, 2051, 2005, 4942, 5302, 8566, 8017, 26004, 2015, 1029, 3, 1996, 4022, 7709, 1996, 14785, 1011, 3643, 8853, 7559, 2102, 2007, 7226, 1011, 19019, 12170, 1027, 1006, 1014, 1010, 1010, 2692, 1007, 1012, 3, 2175, 2058, 1996, 5167, 1999, 2070, 2344, 1015, 1010, 1010, 1049, 1012, 3, 1999, 2169, 3357, 1010, 2035, 24755, 2618, 8875, 1046, 2000, 1996, 7226, 4063, 1045, 2007, 1996, 3284, 14785, 3643, 2005, 1046, 29625, 2275, 12170, 3501, 2000, 2022, 1996, 2117, 3284, 14785, 3643, 1012, 3, 9872, 1024, 1996, 14785, 1011, 3643, 7709, 2467, 27852, 2019, 16169, 2008, 2003, 1037, 23409, 9397, 3217, 9048, 28649, 2000, 1996, 15502, 2591, 1011, 7574, 1012, 3, 1031, 28444, 2078, 1011, 28444, 2078, 1011, 9152, 8791, 1033, 14848, 1024, 1996, 20723, 1996, 14785, 10175, 5657, 7709, 27852, 2024, 4637, 20723, 1998, 2024, 1037, 5760, 10594, 14442, 1012, 3, 1996, 14785, 1011, 3643, 7709, 2330, 3980, 2064, 1037, 1006, 3816, 1007, 3016, 25253, 10594, 14442, 2022, 24806, 1999, 26572, 1011, 2051, 1029, 3, 9896, 2008, 24134, 2015, 1050, 29625, 2063, 29625, 1999, 26572, 2051, 2005, 1042, 2015, 26004, 2015, 1012, 3, 2117, 3976, 2640, 2019, 10470, 2008, 18478, 2015, 1996, 13433, 2050, 2005, 1038, 29625, 2078, 29625, 2063, 29625, 4067, 2017, 999, 2], "src_sent_labels": [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], "segs": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "clss": [0, 28, 49, 73, 103, 140, 179, 220, 255, 269, 325, 378, 426, 456, 517, 541, 589, 629, 653, 680, 711, 769, 824, 864, 883, 903, 936, 978, 1012, 1043, 1091, 1128, 1192, 1255, 1295, 1354, 1377, 1421, 1468, 1488, 1520, 1580, 1614, 1633, 1651, 1677, 1723, 1758, 1820, 1839, 1882, 1899, 1939, 2000, 2033, 2067, 2094, 2130, 2172, 2189, 2220, 2239, 2266, 2300, 2355, 2398, 2442, 2484, 2538, 2583, 2617, 2674, 2728, 2761, 2810, 2831, 2856, 2876, 2906, 2960, 3013, 3052, 3083, 3137, 3177, 3232, 3270, 3324, 3377, 3407, 3464, 3512, 3541, 3586, 3605, 3647, 3673, 3704, 3714, 3741, 3768, 3797, 3835, 3888, 3918, 3940, 3997, 4050, 4072, 4125, 4147, 4178, 4221, 4243, 4270, 4304, 4358, 4411, 4462, 4517, 4561, 4611, 4664, 4694, 4740, 4794, 4848, 4887, 4925, 4990, 5038, 5057, 5081, 5130, 5150, 5203, 5232, 5249, 5305, 5326, 5352, 5375, 5391, 5402, 5439, 5459, 5498, 5528, 5571, 5630, 5659, 5674, 5702, 5765, 5803, 5853, 5882, 5899, 5927, 5947, 5979, 5989, 6013, 6052, 6097, 6110, 6141, 6181, 6199, 6238, 6279, 6305, 6340, 6363], "src_txt": ["we study the following bayesian setting : m items are sold to n selfish bidders in m independent second - price auctions .", "each bidder has a private valuation function that expresses complex preferences over all subsets of items .", "bidders only have beliefs about the valuation functions of the other bidders , in the form of probability distributions .", "the objective is to allocate the items to the bidders in a way that provides a good approximation to the optimal social welfare value .", "we show that if bidders have submodular valuation functions , then every bayesian nash equilibrium of the resulting game provides a 2 - approximation to the optimal social welfare .", "moreover , we show that in the full - information game a pure nash always exists and can be found in time that is polynomial in both m and n. combinatorial auctions .", "in a combinatorial auction m items m = { 1 , . . . , m } are offered for sale to n bidders n = { 1 , . . . , n } .", "each bidder i has a valuation function ( or valuation , in short ) v i that assigns a non-negative real number to every subset of the items .", "v i expresses i 's preferences over bundles of items .", "the value v i ( s ) can be thought of as specifying i 's maximum willingness to pay for s. two standard assumptions are made on each v i : v i ( \u2205 ) = 0 ( normalization ) , and v i ( s ) \u2264 v i ( t ) for every two bundles s \u2286 t ( monotonicity ) .", "the objective is to find a partition of the items among the bidders s 1 , . . . , s n ( where s i \u2229 s j = \u2205 for all i = j ) such that the social welfare \u03c3 i v i ( s i ) is maximized.the interplay between selfishness and computational optimization in combinatorial auctions is well - studied .", "each of these aspects alone can be handled in a satisfactory way : the celebrated vcg mechanisms [ 19,3,10 ] motivate agents to truthfully report their private information , and optimize the social - welfare .", "the caveat is that this may take exponential time [ 15,16 ] ( in the natural parameters of the problem m and n ) .", "on the other hand , if we disregard strategic issues , it is possible to obtain good approximations to the optimal social - welfare supported by a grant from the israel science foundation.in polynomial time , for restricted , yet very expressive special cases of combinatorial auctions ( e.g. , combinatorial auctions in which bidders have submodular valuations , known as combinatorial auctions with submodular bidders [ 13 , [ 4 ] [ 5 ] [ 6 ] [ 7 ] 20 ] ) .", "it is the combination of the two challenges that proves to be problematic.bayesian combinatorial auctions .", "in this paper we approach the problem of handling selfishness and computational hardness from an old - new perspective : harsanyi [ 11 ] introduced bayesian games as an elegant way of modeling selfishness in partial - information settings .", "in a bayesian game , players do not know the private information of the other players , but only have beliefs , expressed by probability distributions over the different possible realizations of this private information .", "in combinatorial auctions this translates to probability distributions over the possible valuation functions of the other bidders .", "we are interested in maximizing the social - welfare in a way that is aligned with the interests of the different bidders .", "we ask the following question : can we design an auction for which any bayesian nash equilibrium provides a good approximation to the optimal social - welfare ?", "this question is , of course , an extension of the well known \" price of anarchy \" question [ 12,17 ] to bayesian settings.inspired by ebay , we study the simple auction in which the m items are sold in m independent second - price auctions .", "this auction induces a game in which a bidder 's strategy is the m - dimensional vector of bids he submits in the different single - item auctions , and his payoff is his value for the set of items he is allocated minus his payments .", "unfortunately , in this general setting , some unnatural problems may arise : consider the following simple example : m = 1 , n = 2 , and the bidders have complete information about each other .", "let v 1 ( 1 ) = 1 and v 2 ( 1 ) = 0 .", "observe that the optimal social welfare is 1 ( assign item 1 to bidder 1 ) .", "also observe that if bidder 1 bids 0 and bidder 2 bids 1 then this is a pure nash equilibrium with a social - welfare value of 0 .", "therefore , the price of anarchy of this full - information game is infinity.in the above scenario , the second bidder bid for ( and eventually got ) an object he was not interested in possessing .", "however , such a situation is unlikely to occur in real - life situations , especially if bidders are only partially informed and are therefore more inclined to avoid risks .", "to handle this , we adopt the well - known assumption in decision theory , that the players ( bidders ) are expost individually - rational .", "informally , ex-post individual - rationality means that bidders play it safe , in the sense that a bidder will never make decisions that might ( in some scenario ) result in getting a negative payoff.our results .", "our main result is the following : we exhibit an auction ( we refer to as a bayesian auction ) in which essentially all items are sold in a second - price auction .", "we prove that any mixed nash equilibrium for this auction provides a good approximation to the optimal social welfare.theorem : if bidders are ex-post individually - rational , and have submodular valuation functions , then every ( mixed ) bayesian nash equilibrium of a bayesian auction provides a 2 - approximation to the optimal social welfare.a bidder i is said to have a submodular valuation function if for alls , t \u2286 m v i ( s \u222a t ) + v i ( s \u2229 t ) \u2264 v i ( s ) + v i ( t ) .", "this definition of submodularity is known ( see , e.g. , [ 13 ] ) to be equivalent to the following definition : a valuation function is submodular if for every two bundles s \u2286 t that do not contain an item j it holds thatv i ( s \u222a { j } ) \u2212 v i ( s ) \u2265 v i ( t \u222a { j } ) \u2212 v i ( t ) .", "this last inequality has a natural interpretation as it implies that the bidders have decreasing marginal utilities ( the marginal value of the item decreases as the number of items a bidder has increases ) .", "in fact , our theorem holds even if bidders have fractionally - subadditive valuation functions [ 6 ] ( defined , and termed xos , in [ 14 ] ) , a class of valuation functions that strictly contains all submodular ones [ 14,13 ] .", "we stress that this \" bayesian price of anarchy \" result is independent of the bidders ' beliefs .", "that is , the 2 - approximation ratio is guaranteed for any common probability distribution ( \" common prior \" ) over the valuation functions ( we do require the common prior to be the product of independent probability distributions ) .", "this suggests a middle - ground between the classical economic and the standard computer science approaches : works in economics normally assume that the \" input \" is drawn from some specific probability distribution , and prove results that apply to that specific one .", "in contrast , computer scientists prefer a worst - case analysis that holds for every possible input .", "we require the assumption that the input is drawn from some ( known ) probability distribution but expect to obtain a good approximation ratio regardless of what it is .", "we note that an approach similar to ours was applied to selfish routing problems in [ 9,8 ] open question : can a ( mixed ) bayesian nash equilibrium be computed in polynomial time?simple examples show that a pure bayesian nash is not guaranteed to exist in our bayesian setting 4 .", "an interesting special case of the bayesian game is the full - information game in which every bidder 's valuation function is known to all other bidders .", "we show , that in such full - information games a pure nash equilibrium always exists .", "this is true even if the bidders are not ex-post individually rational .", "in fact , it is easy to show that even the optimal allocation of items can be achieved in a pure nash equilibrium .", "so , while the price of anarchy in this game is infinity ( without ex-post individual - rationality ) , the price of stability ( the social welfare value of the best nash equilibrium [ 1 ] ) is 1 .", "however , optimizing the social - welfare in combinatorial auctions with submodular bidders in known to be np - hard [ 13 ] .", "therefore , we are left with the following natural question : can we find a pure nash equilibrium that provides a good approximation to the optimal social welfare in polynomial time?we give the following answer for submodular bidders : theorem : if bidders have submodular valuation functions then a pure nash equilibrium of the complete - information game that provides a 2 - approximation to the optimal social welfare exists and can be computed in polynomial time.we prove the theorem by showing that the approximation algorithm for maximizing social welfare in combinatorial auctions with submodular bidders , proposed by lehmann et al. [ 13 ] , can be used to compute the bids in a pure nash equilibrium .", "we note that similar questions have been studied by vetta in [ 18 ] 5 .", "for the wider class of fractionally - subadditive valuation functions , we provide a constructive way of finding a pure nash that provides a 2 - approximation via a simple and natural myopic procedure .", "this procedure is inspired by the greedy approximation - algorithm in [ 4 ] .", "unfortunately , while this myopic procedure does compute a pure nash equilibrium in polynomial time for some interesting ( nonsubmodular ) subcases , this is not true in general .", "we prove that the myopic procedure may take exponential time by exhibiting a non-trivial construction of an instance on which this can occur.open question : can a pure nash equilibrium that obtains a 2 - approximation to the optimal social - welfare be computed in polynomial time if bidders have fractionally - subadditive valuation functions?the proofs omitted due to space limitations can be found in the full version of the paper .", "in subsection 2.1 we present the bayesian setting we explore in this paper , which we term \" bayesian combinatorial auctions \" .", "in subsection 2.2 we exhibit our main result , which is that the bayesian price of anarchy of bayesian combinatorial auctions is 2 .", "m items are sold to n bidders in m independent second - price auctions ( with some tie - breaking rule ) .", "a bidder 's strategy is a bid - vector b i \u2208 r m \u2265 0 ( b i ( j ) represents i 's bid for item j ) .", "6 a ( pure ) strategy profile of all players 5 vetta considers a general setting in which decisions are made by non-cooperative agents , and the utility functions are submodular .", "he proves that in this setting the price of anarchy is at most 2 .", "the framework discussed there is such that the players ' pure strategies are subsets of a ground set ( e.g. , the items ) .", "this framework is not applicable to our auction , where the bids play a crucial role .", "6 so as to have a finite ( discrete ) model , we assume that all acceptable bids are multiples of an arbitrary .", "furthermore , they can not exceed some maximum value bmax.is an n - tuple b = ( b 1 , . . . , b n ) .", "we will use the notation b = ( b i , b \u2212 i ) , to denote a strategy profile in which bidder i bids b i and other bidders bid as inb \u2212 i = ( b 1 , . . . , b i \u2212 1 , b i +1 , . . . , b n ) .", "given a strategy profile b , the items are allocated according to the second price rule , i.e. , every object is sold to the highest bidder at a price equal to the second highest bid .", "for technical reasons , to be explained later , in each such second - price auction with negligible probability the item is randomly allocated to one of the bidders ( who submitted a bid higher than zero ) .", "in this case , that bidder is charged his bid for the item.for some fixed b we denote by x i ( b ) the set of items obtained by player i in the auction 7 .", "for a set s \u2286 m , let the sum of the ( highest ) bids be denoted bybids ( s , b ) = j \u2208 s max k b k ( j ) , bids \u2212 i ( s , b \u2212 i ) = j \u2208 s max k = i b k ( j ) , andbids i ( s , b i ) = j \u2208 s b i ( j ) .", "the utility ( payoff ) of player i is then given byu i ( b ) = v i ( x i ( b ) ) \u2212 bids \u2212 i ( x i ( b ) , b \u2212 i ) .", "we make two assumptions about the bidders : ex-post individual - rationality , and that the v i s are fractionally - subadditive .", "a valuation is fractionally - subadditive if it is the pointwise maximum of a set of additive valuations : a valuation a i is additive if for every s \u2286 m a i ( s ) = \u03c3 j \u2208 s a i ( { j } ) .", "a valuation v i is fractionallysubadditive if there are additive valuations a = { a 1 , . . . , a l } such that for every s \u2286 m v i ( s ) = max a \u2208 a a ( s ) .", "( we will call a k \u2208 a a maximizing additive valuation for the set s if v i ( s ) = a k ( s ) . )", "the class of fractionally - subadditive valuations is known to be strictly contained in the class of subadditive valuations and to strictly contain the class of submodular valuations [ 14,13 ] .", "for all i , let v i denote the finite set of possible valuations of player i .", "the set of possible valuation profiles of the players is then v = v 1 \u00d7 . . . \u00d7 v n .", "there is a known probability distribution d over the valuations v ( a common prior ) .", "d can be regarded as some market statistics that is known to all bidders ( and to the auctioneer ) , and specifies their beliefs .", "we assume that d = d 1 \u00d7 . . . \u00d7 d n is the cartesian product of independent probability distributions d i : any valuation profile v = ( v 1 , . . . , v n ) occurs with probabilityd ( v ) = \u03c0 n i = 1 d i ( v i ) , where d i ( v i ) is the probability that bidder i has the valuation function v i .", "let v \u2212 i = \u00d7 k = i v k , d \u2212 i = \u00d7 k = i d k , and v \u2212 i = ( v 1 , . . . , v i \u2212 1 , v i +1 , . . . , v n ) .", "a bidding - function b i for player i is a function that assigns a bid - vector b i = b i ( v i ) to every valuation function v i \u2208 v i .", "the reader may find it helpful to think of b i as a suggestion made to player i by the auctioneer as to which bid to submit .", "an n - tuple of bidding - functions b = ( b 1 , . . . , b n ) is a bayesian nash equilibrium if for every i \u2208 [ n ] , and for every valuation function v i , the bid b i ( v i ) maximizes i 's expected utility given that his valuation function is v i , and that the bid of every other bidder j is b j ( v j ) , where v j is drawn from d j .", "that is , a bayesian nash maximizes i 's expected payoff for any valuation function he may have , given his beliefs about the other bidders.bayesian price of anarchy .", "for a fixed valuation profile of the bidders v = ( v 1 , . . . , v n ) , the optimal social - welfare is op t ( v ) = max s1 , ... , sn \u03c3 i v i ( s i ) , where the maximum is taken over all partitions of m into disjoint bundles s 1 , . . . , s n .", "for given d , the ( expected ) optimal social - welfare sw ( op t ) is the expectation e [ op t ( v ) ] , where v is drawn from d .", "that is , sw ( op t ) = v \u2208 v d ( v ) op t ( v ) given a profile v , every pure strategy profile b induces a social - welfare valuesw ( b ) = i \u2208 [ n ] v i ( x i ( b ) ) .", "for an n - tuple of bidding - functions b = ( b 1 , . . . , b n ) , we denote by sw ( b ) the expected social welfare e [ sw ( b 1 ( v 1 ) , . . . , b n ( v n ) ) ] , where the v = ( v 1 , . . . , v n ) is drawn from d : sw ( b ) = v \u2208 v d ( v ) sw ( b ( v ) ) .", "we are interested in bayesian nash equilibria b for which the ratio sw ( op t ) sw ( b ) is small .", "the bayesian price of anarchy of a game isp oa = max d , b bayesiann ash sw ( op t ) sw ( b ) , that is the maximum of the expression sw ( op t ) sw ( b ) , taken over all probability distributions d , and all bayesian nash equilibria b ( for these probability distributions ) .", "intuitively , a bayesian price of anarchy of \u03b1 means that no matter what the bidders ' beliefs are , every bayesian nash equilibrium provides an \u03b1 - approximation to the optimal social - welfare.supporting bids .", "due to ex-post individual - rationality , a bidder will never submit a bid that might result in a negative payoff .", "recall that the rules of the auction dictate that it is possible that a bidder get any subset of the items for which he submitted his non-zero bids and be charged the sum of these bids .", "hence , a bidder 's bid must uphold the following property : definition 1 .", "a bid vector b i is said to be a supporting bid given a valuationv i , if for all s \u2286 m v i ( s ) \u2265 \u03c3 j \u2208 s b i ( j ) .", "recall that the event that not all items are sold in second - price auctions only occurs with negligible probability .", "hence , for simplicity , we shall disregard this event and prove our theorem for the case that all items are sold in second - price auctions .", "this subsection exhibits our main result .", "for ease of exposition we prove the theorem regarding the bayesian price of anarchy for pure bayesian nash equilibria .", "the ( more complicated ) proof for mixed nash is omitted due to space limitations and appears in the full version of the paper .", "the proof of the theorem exploits the fractional subadditivity of the valuations via the following lemma : lemma 1 .", "let s be a set of items , and a i be a maximizing additive valuation of player i for this set , restricted so that a i = 0 on m \\ s .", "if i bids according to a i , while all the others bid according to any pure profile b \u2212 i , thenu i ( a i , b \u2212 i ) \u2265 v i ( s ) \u2212 bids \u2212 i ( s , b \u2212 i ) .", "let x i : = x i ( a i , b \u2212 i ) be the set of items that player i is going to get .", "note that if i wins any item j \u2208 s then the maximum bid on this j was 0 .", "thus we can assume w.l.o.g. that x i \u2286 s. moreover , a i ( j ) \u2212 bids \u2212 i ( { j } , b \u2212 i ) \u2264 0 holds for every non-obtained item j \u2208 s \u2212 x i .", "therefore , we haveu i ( a , b \u2212 i ) = v i ( x i ) \u2212 bids \u2212 i ( x i , b \u2212 i ) \u2265 j \u2208 xi a i ( j ) \u2212 bids \u2212 i ( x i , b \u2212 i ) \u2265 j \u2208 s a i ( j ) \u2212 bids \u2212 i ( s , b \u2212 i ) = v i ( s ) \u2212 bids \u2212 i ( s , b \u2212 i ) .", "let d be a distribution over fractionally - subadditive valuations of the bidders .", "if b = ( b 1 , . . . , b n ) is a bayesian nash , such that each b i maps every valuation function v i to a supporting bid ( given v i ) then sw ( op t ) sw ( b ) \u2264 2 .", "let v = ( v 1 , . . . , v n ) be a fixed valuation profile .", "we denote by o v = ( o v 1 , . . . , o v n ) the optimum allocation with respect to profile v .", "now for every player i , let a i denote the maximizing additive valuation for the set o v i , ( in particular , a i ( j ) = 0 if j \u2208 o v i ) .", "for all i , we consider a i as an alternative strategy to b i ( v i ) .", "let us fix a bidder i. let w \u2212 i be an arbitrary valuation profile of all bidders except for i .", "we introduce the short notationx w \u2212 i i def = x i ( b i ( v i ) , b \u2212 i ( w \u2212 i ) ) .", "furthermore , for any s \u2286 m we will usebids w \u2212 i \u2212 i ( s ) def = bids \u2212 i ( s , b \u2212 i ( w \u2212 i ) ) , bids w ( s ) def = bids ( s , b ( w ) ) , where w = ( w i , w \u2212 i ) is a valuation profile.since b is a bayesian nash , the strategy b i ( v i ) provides higher expected utility to player i than the strategy a i : w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) u i ( b i ( v i ) , b \u2212 i ( w \u2212 i ) ) \u2265 w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) u i ( a i , b \u2212 i ( w \u2212 i ) ) .", "the utility values on the left - hand - side areu i ( b i ( v i ) , b \u2212 i ( w \u2212 i ) ) = v i ( x w \u2212 i i ) \u2212 bids w \u2212 i \u2212 i ( x w \u2212 i i ) \u2264 v i ( x w \u2212 i i ) .", "on the right - hand - side , applying lemma 1 yieldsu i ( a i , b \u2212 i ( w \u2212 i ) ) \u2265 v i ( o v i ) \u2212 bids w \u2212 i \u2212 i ( o v i ) .", "by merging the inequalities above , we get w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) v i ( x w \u2212 i i ) \u2265 w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) [ v i ( o v i ) \u2212 bids w \u2212 i \u2212 i ( o v i ) ] = v i ( o v i ) w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) \u2212 w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) bids w \u2212 i \u2212 i ( o v i ) = v i ( o v i ) \u00b7 1 \u2212 w \u2208 v d ( w ) bids w \u2212 i \u2212 i ( o v i ) \u2265 v i ( o v i ) \u2212 w \u2208 v d ( w ) bids w ( o v i ) .", "here the expected highest bids w \u2212 i \u2212 i ( o v i ) \u2264 bids w ( o v i ) obviously holds , since in the latter case we consider maximum bids over a larger set of players .", "we obtainedv i ( o v i ) \u2264 w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) v i ( x w \u2212 i i ) + w \u2208 v d ( w ) bids w ( o v i ) .", "we sum over all i , and then take the expectation over all valuations v = ( v 1 , . . . , v n ) on both sides : v \u2208 v d ( v ) i \u2208 [ n ] v i ( o v i ) \u2264 v \u2208 v d ( v ) i \u2208 [ n ] w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) v i ( x w \u2212 i i ) + v \u2208 v d ( v ) i \u2208 [ n ] w \u2208 v d ( w ) bids w ( o v i ) .", "note that v \u2208 v d ( v ) i \u2208 [ n ] v i ( o v i ) = sw ( op t ) .", "furthermore , we claim that both summands on the right - hand - side are at most sw ( b ) , so that sw ( op t ) \u2264 2sw ( b ) , which will conclude the proof .", "the first summand is i \u2208 [ n ] vi \u2208 vi d ( v i ) v \u2212 i \u2208 v \u2212 i d ( v \u2212 i ) w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) v i ( x w \u2212 i i ) = i \u2208 [ n ] vi \u2208 vi d ( v i ) w \u2212 i \u2208 v \u2212 i d ( w \u2212 i ) v i ( x w \u2212 i i ) v \u2212 i \u2208 v \u2212 i d ( v \u2212 i ) = i \u2208 [ n ] vi \u2208 vi w \u2212 i \u2208 v \u2212 i d ( v i ) d ( w \u2212 i ) v i ( x w \u2212 i i ) \u00b7 1 = i \u2208 [ n ] v \u2208 v d ( v ) v i ( x v \u2212 i i ) = v \u2208 v d ( v ) i \u2208 [ n ] v i ( x i ( b ( v ) ) ) = sw ( b ) .", "finally , the second summand is v \u2208 v d ( v ) w \u2208 v d ( w ) i \u2208 [ n ] bids w ( o v i ) = v \u2208 v d ( v ) w \u2208 v d ( w ) bids w ( m ) = w \u2208 v d ( w ) bids w ( m ) v \u2208 v d ( v ) = w \u2208 v d ( w ) bids w ( m ) \u00b7 1 = w \u2208 v d ( w ) i \u2208 [ n ] bids i ( x i ( b ( w ) ) , b i ( w i ) ) \u2264 w \u2208 v d ( w ) i \u2208 [ n ] w i ( x i ( b ( w ) ) ) = sw ( b ) .", "the last inequality holds since for all i , the b i ( w i ) contains supporting bids for any set of items including the obtained set x i ( b ( w ) ) .", "in subsection 3.1 , we show that a pure nash that provides a good approximation to the social welfare always exists in such games and provide a constructive way of finding one .", "in fact , we also prove that the price of stability [ 1 ] is 1 , i.e. the optimum can always be achieved in a nash equilibrium.in subsection 3.2 we show that if bidders have submodular valuation functions then such a pure nash can be reached in polynomial time .", "despite the fact that ( as shown in the introduction ) some nash equilibria may fail to provide good approximation to the social - welfare , we present a constructive way for finding a pure nash that yields a 2 - approximation .", "we introduce a natural procedure we call the potential procedure which always reaches such an equilibrium .", "the potential procedure is a simple myopic procedure for fractionally - subadditive bidders 8 .", "for every i let a i = { a i 1 , ... , a i li } be a set of additive valuations such that for every s \u2286 m v i ( s ) = max a \u2208 ai a ( s ) .", "recall that since v i is fractionally subadditive such a i must exist .", "informally , the potential procedure simply starts with some arbitrary supporting bids ( corresponding to some maximizing additive valuations ) and let players best - reply , one by one , to the bids of other players by switching to new supporting bids.the procedure : 1 .", "initialize b * i ( j ) \u2190 0 , s i \u2190 \u2205 , r j \u2190 0 , for i = 1 , .", ", n and j = 1 , . . . , m. 2 .", "while there is a bidder i such thats i = arg max s \u2286 m ( v i ( s ) \u2212 \u03c3 j \u2208 ( s \\ si ) r j ) : ( a ) let t = arg max s \u2286 m ( v i ( s ) \u2212 \u03c3 j \u2208 ( s \\ si ) r j ) .", "let a \u2208 a i be such that v i ( t ) = a ( t ) .", "( b ) set b * i ( j ) \u2190 0 and r j \u2190 0 for all j \u2208 s i .", "( c ) set b * i ( j ) \u2190 a ( j ) for all j \u2208 t .", "set r j \u2190 a ( j ) for all j \u2208 t .", "( d ) set s i \u2190 t .", "( e ) for all k = i set s k \u2190 s k \\ s i , and set b * k ( j ) \u2190 0 for all j \u2208 s i .", "output b * = ( b * 1 , . . . , b * n ) .", "observe that in the definition we do not require a ( j ) \u2265 r j in lines ( a ) - ( c ) ( i.e. , that r j increase ) .", "however , this follows from the fact that t maximizes v i ( s ) \u2212 \u03c3 j \u2208 ( s \\ si ) r j .", "we use a potential - function argument and the fractionalsubadditivity of the bidders to show that the potential procedure eventually converges to a \" good \" pure nash.theorem 2 .", "if the valuation functions are fractionally subadditive , then the potential procedure converges to a pure nash equilibrium that provides a 2 - approximation to the optimal social - welfare.we note that the proof shows that even the optimal social - welfare can be obtained in a pure nash equilibrium and so the price of stability is 1 .", "so , we have a natural procedure , that is essentially a best response sequence of the players , that leads to a pure nash equilibrium .", "but , how long will it take the potential procedure to converge ?", "a non-trivial construction shows that unfortunately the worst case running time is exponential in n and m.theorem 3 .", "there is an instance with 2 bidders , each with a fractionallysubadditive valuation function , on which the potential procedure converges after \u03c9 ( 2 m ) steps.theorem 3 leaves us with two interesting open questions : first , will the potential procedure converge in polynomial time if the valuation functions are submodular ?", "second , does the potential procedure always run in time that is polynomial in the size of the sets of additive valuations that underlie every fractionally - subadditive valuation ?", "an affirmative answer to this question would imply that the potential procedure runs in polynomial time if the bidders have fractionally - subadditive valuations encoded in a bidding language ( see [ 14,13,4,5 ] ) .", "we note that in the instance in the proof of theorem 3 the size of the sets of additive valuations was exponential n and m .", "in this subsection , we focus on submodular valuation functions .", "we show that one can find , in polynomial time , a pure nash equilibrium that also satisfies the premises of theorem 1 .", "the procedure we present exploits the algorithm due to lehmann et al. [ 13 ] .", "this procedure , which we will call the marginal - value procedure , therefore provides a 2 - approximation to the optimal social welfare.the procedure : 1 .", "fix an arbitrary order on the items .", "w.l.o.g. let this order be 1 , . . . , m. 2 .", "initialize s i \u2190 \u2205 , and r j \u2190 0 , for i = 1 , . . . , n , and j = 1 , . . . , m. 3 .", "for each item j = 1 , . . . , m : ( a ) let i = arg max t \u2208 n v t ( s t \u222a { j } ) \u2212 v t ( s t ) .", "set s i \u2190 s i \u222a { j } .", "( b ) set r j \u2190 max t \u2208 n v t ( s t \u222a { j } ) \u2212 v t ( s t ) .", "for every bidder i set b * i ( j ) \u2190 r j for all j \u2208 s i and b * i ( j ) \u2190 0 for all j / \u2208 s i .", "output b * = ( b * 1 , ... , b * n ) .", "observe , that the resulting n - tuple of bid - vectors b * is such that for each item , only one bidder offers a non-zero bid for that item .", "this is due to the fact that we are dealing with a complete - information setting ( intuitively , if a bidder does not win an item he might as well not bid on it ) .", "also notice that the marginalvalue procedure only requires m rounds and so ends in polynomial time.theorem 4 .", "if the valuation functions are submodular then a pure nash equilibrium that provides a 2 - approximation to the optimal social - welfare can be computed in polynomial time .", "swe thank noam nisan for enriching conversations that lead to the writing of this paper .", "we thank noam nisan for enriching conversations that lead to the writing of this paper ."], "tgt_txt": "bayesian combinatorial auctions giorgos christodoulou , annamaria kovacs , michael schapira the hebrew university of jerusalemthe hebrew university of jerusalem combinatorial auctions combinatorial auctions opt = 9 combinatorial auctions objective : find a partition of the items bidders items valuations that maximizes the social welfare ( normalized ) ( monotone ) valuations submodular ( sm ) the marginal value of the item decreases as the number of items increases .<q>fractionally - subadditive ( fs ) additive fs valuations a b c 0 9 0 0 5 5 5 5 0 4 4 4 items add .<q>valuations combinatorial auctions - challenges strategic we want bidders to be truthful .<q>vcg implements the opt .<q>( exp .<q>time ) computational approximation algorithms ( not truthful ) unknown valuations huge gaps submodular ( sm ) fractionally - subadditive ( fs ) [ dobzinski ] solution ?<q>we do not know whether reasonable truthful and polynomial - time approximation algorithms exist .<q>how can we overcome this problem ?<q>an old / new approach .<q>partial information is drawn from d complete information auction setting player i will bid strategy profile algorithm = allocation + payments utility of player i bayesian combinatorial auctions question : can we design an auction for which any bayesian nash equilibrium provides good approximation to the social welfare ?<q>( pure ) bayesian nash [ harsanyi ] bidding function informal : in a bayesian nash ( b1 , , bn ) , given a probability distribution d , bi ( vi ) maximizes the expected utility of player i ( for all vi ) .<q>( ) bayesian poa optimal social welfare expected social of a b.n.e. for fixed v bayesian poa = biggest ratio between sw ( opt ) and sw ( b ) ( over all d , b ) bayesian poa price of anarchy [ gairing , monien , tiemann , vetta ] second price player i will bid strategy profile algorithm : give item j to the player i with the highest bid .<q>charge i the second highest bid .<q>utility of player i second price social welfare = 1 second price social welfare = second price social welfare = poa = 1 / supporting bids bidders have only partial info ( beliefs ) they want to avoid risks .<q>( ex-post ir ) supporting bids : ( for all s ) lower bound opt = 2 lower bound nash = 1 poa = 2 our results bayesian setting : the bayesian poa for fs valuations ( supporting bids , mixed ) is 2 .<q>complete - information setting : fs valuations : existence of pure n.e. myopic procedure for finding one .<q>pos = 1 .<q>sm valuations : algorithm for computing n.e. in poly time .<q>valuations submodular ( sm ) the marginal value of the item decreases as the number of items increases .<q>fractionally - subadditive ( fs ) additive upper bound ( full - info case ) lemma .<q>for any set of items s , where is the maximizing additive valuation for the set s. upper bound let be a fixed valuation profile upper bound let be a fixed valuation profile optimum partition : nash partition : upper bound since b is a n.e let be a fixed valuation profile optimum partition : maximum additive valuation wrt nash partition : upper bound since b is a n.e let be a fixed valuation profile optimum partition : maximum additive valuation wrt nash partition : upper bound since b is a n.e and so upper bound since b is a n.e and so using lemma we get upper bound since b is a n.e and so using lemma we get and so upper bound summing up but open question : does a ( pure ) bn with supporting bids always exist ?<q>open question : can we find a ( mixed ) bn in polynomial time ?<q>we consider the full - information setting .<q>the potential procedurestart with item prices 0 , ,0 .<q>go over the bidders in some order 1 , , n .<q>in each step , let one bidder i choose his most demanded bundle s of items .<q>update the prices of items in s according to is maximizing additive valuation for s .<q>once no one ( strictly ) wishes to switch bundle , output the allocation + bids .<q>theorem : if all bidders have fractionallysubadditive valuation functions then the potential procedure always converges to a pure nash ( with supporting bids ) .<q>proof : the total social welfare is a potential function .<q>the potential procedure theorem : after n steps the solution is a 2 - approximation to the optimal social welfare ( but not necessarily a pure nash ) .<q>[ dobzinski - nisan - schapira ] theorem : the potential procedure might require exponentially many steps to converge to a pure nash .<q>the potential procedure open question : can we find a pure nash in polynomial time ?<q>open question : does the potential procedure converge in polynomial time for submodular valuations ?<q>the potential procedure the marginal - value procedurestart with bid - vectors bi = ( 0 , ,0 ) .<q>go over the items in some order 1 , , m .<q>in each step , allocate item j to the bidder i with the highest marginal value for j. set bij to be the second highest marginal value .<q>theorem : the marginal - value procedure always outputs an allocation that is a 2approximation to the optimal social - welfare .<q>[ lehmann - lehmann - nisan ] proposition : the bids the marginalvalue procedure outputs are supporting bids and are a pure nash equilibrium .<q>the marginal - value procedure open questions can a ( mixed ) bayesian nash equilibrium be computed in poly - time ?<q>algorithm that computes n.e. in poly time for fs valuations .<q>second price design an auction that minimizes the poa for b.n.e. thank you !", "sections": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 8], "token_sections}